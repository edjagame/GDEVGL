%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: Windows Roman
%%Title: bcgr_squa2_010.eps
%%Creator: Adobe Illustrator(R) 16.0
%%For: Zydd
%%CreationDate: 8/5/2016
%%BoundingBox: 0 0 1000 1000
%%HiResBoundingBox: 0 0 1000 1000
%%CropBox: 0 0 1000 1000
%%LanguageLevel: 3
%%DocumentData: Clean7Bit
%ADOBeginClientInjection: DocumentHeader "AI11EPS"
%%AI8_CreatorVersion: 16.0.0%AI9_PrintingDataBegin%ADO_BuildNumber: Adobe Illustrator(R) 16.0.0 x682 R agm 4.6676 ct 5.2591%ADO_ContainsXMP: MainFirst
%ADOEndClientInjection: DocumentHeader "AI11EPS"
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentFonts: 
%%DocumentNeededFonts: 
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EndComments
         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 32 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq {pop /AGMCORE_currentbg load}{/Procedure get_res}ifelse
	dup currentblackgeneration eq {pop}{setblackgeneration}ifelse
	dup null eq {pop /AGMCORE_currentucr load}{/Procedure get_res}ifelse
	dup currentundercolorremoval eq {pop}{setundercolorremoval}ifelse
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0
%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 2.31 0
10 dict begin
/Adobe_CoolType_Passthru currentdict def
/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known def
Adobe_CoolType_Core_Defined
	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}
if
userdict/Adobe_CoolType_Core 70 dict dup begin put
/Adobe_CoolType_Version 2.31 def
/Level2?
	systemdict/languagelevel known dup
		{pop systemdict/languagelevel get 2 ge}
	if def
Level2? not
	{
	/currentglobal false def
	/setglobal/pop load def
	/gcheck{pop false}bind def
	/currentpacking false def
	/setpacking/pop load def
	/SharedFontDirectory 0 dict def
	}
if
currentpacking
true setpacking
currentglobal false setglobal
userdict/Adobe_CoolType_Data 2 copy known not
	{2 copy 10 dict put}
if
get
	 begin
	/@opStackCountByLevel 32 dict def
	/@opStackLevel 0 def
	/@dictStackCountByLevel 32 dict def
	/@dictStackLevel 0 def
	 end
setglobal
currentglobal true setglobal
userdict/Adobe_CoolType_GVMFonts known not
	{userdict/Adobe_CoolType_GVMFonts 10 dict put}
if
setglobal
currentglobal false setglobal
userdict/Adobe_CoolType_LVMFonts known not
	{userdict/Adobe_CoolType_LVMFonts 10 dict put}
if
setglobal
/ct_VMDictPut
	{
	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse
	3 1 roll put
	}bind def
/ct_VMDictUndef
	{
	dup Adobe_CoolType_GVMFonts exch known
		{Adobe_CoolType_GVMFonts exch undef}
		{
			dup Adobe_CoolType_LVMFonts exch known
			{Adobe_CoolType_LVMFonts exch undef}
			{pop}
			ifelse
		}ifelse
	}bind def
/ct_str1 1 string def
/ct_xshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_yshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0 exch
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_xyshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			{_ct_na _ct_i 1 add get}stopped 
			{pop pop pop}
			{
				_ct_x _ct_y moveto
				rmoveto
			}
			ifelse
		}
		ifelse
		/_ct_i _ct_i 2 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def
/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def
/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind def
currentglobal true setglobal
/ct_T3Defs
{
/BuildChar
{
	1 index/Encoding get exch get
	1 index/BuildGlyph get exec
}bind def
/BuildGlyph
{
	exch begin
	GlyphProcs exch get exec
	end
}bind def
}bind def
setglobal
/@_SaveStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@vmState currentglobal def false setglobal
		@opStackCountByLevel
		@opStackLevel
		2 copy known not
			{
			2 copy
			3 dict dup/args
			7 index
			5 add array put
			put get
			}
			{
			get dup/args get dup length 3 index lt
				{
				dup length 5 add array exch
				1 index exch 0 exch putinterval
				1 index exch/args exch put
				}
				{pop}
			ifelse
			}
		ifelse
			begin
			count 1 sub
			1 index lt
				{pop count}
			if
			dup/argCount exch def
			dup 0 gt
				{
				args exch 0 exch getinterval 
			astore pop
				}
				{pop}
			ifelse
			count
			/restCount exch def
			end
		/@opStackLevel @opStackLevel 1 add def
		countdictstack 1 sub
		@dictStackCountByLevel exch @dictStackLevel exch put
		/@dictStackLevel @dictStackLevel 1 add def
		@vmState setglobal
		end
	}bind def
/@_RestoreStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		@opStackCountByLevel @opStackLevel get
			begin
			count restCount sub dup 0 gt
				{{pop}repeat}
				{pop}
			ifelse
			args 0 argCount getinterval{}forall
			end
		/@dictStackLevel @dictStackLevel 1 sub def
		@dictStackCountByLevel @dictStackLevel get
		end
	countdictstack exch sub dup 0 gt
		{{end}repeat}
		{pop}
	ifelse
	}bind def
/@_PopStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		/@dictStackLevel @dictStackLevel 1 sub def
		end
	}bind def
/@Raise
	{
	exch cvx exch errordict exch get exec
	stop
	}bind def
/@ReRaise
	{
	cvx $error/errorname get errordict exch get exec
	stop
	}bind def
/@Stopped
	{
	0 @#Stopped
	}bind def
/@#Stopped
	{
	@_SaveStackLevels
	stopped
		{@_RestoreStackLevels true}
		{@_PopStackLevels false}
	ifelse
	}bind def
/@Arg
	{
	Adobe_CoolType_Data
		begin
		@opStackCountByLevel @opStackLevel 1 sub get
		begin
		args exch
		argCount 1 sub exch sub get
		end
		end
	}bind def
currentglobal true setglobal
/CTHasResourceForAllBug
	Level2?
		{
		1 dict dup
				/@shouldNotDisappearDictValue true def
				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put
				begin
				count @_SaveStackLevels
					{(*){pop stop}128 string/Category resourceforall}
				stopped pop
				@_RestoreStackLevels
				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll
					{
						 /@shouldNotDisappearDictValue known
								{
										 {
												end
												currentdict 1 index eq
													{pop exit}
												if
										 }
									 loop
								}
						 if
					}
					{
						 pop
						 end
					}
				ifelse
		}
		{false}
	ifelse
	def
true setglobal
/CTHasResourceStatusBug
	Level2?
		{
		mark
			{/steveamerige/Category resourcestatus}
		stopped
			{cleartomark true}
			{cleartomark currentglobal not}
		ifelse
		}
		{false}
	ifelse
	def
setglobal
/CTResourceStatus
		{
		mark 3 1 roll
		/Category findresource
			begin
			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
				{cleartomark false}
				{{3 2 roll pop true}{cleartomark false}ifelse}
			ifelse
			end
		}bind def
/CTWorkAroundBugs
	{
	Level2?
		{
		/cid_PreLoad/ProcSet resourcestatus
			{
			pop pop
			currentglobal
			mark
				{
				(*)
					{
					dup/CMap CTHasResourceStatusBug
						{CTResourceStatus}
						{resourcestatus}
					ifelse
						{
						pop dup 0 eq exch 1 eq or
							{
							dup/CMap findresource gcheck setglobal
							/CMap undefineresource
							}
							{
							pop CTHasResourceForAllBug
								{exit}
								{stop}
							ifelse
							}
						ifelse
						}
						{pop}
					ifelse
					}
				128 string/CMap resourceforall
				}
			stopped
				{cleartomark}
			stopped pop
			setglobal
			}
		if
		}
	if
	}bind def
/ds
	{
	Adobe_CoolType_Core
		begin
		CTWorkAroundBugs
		/mo/moveto load def
		/nf/newencodedfont load def
		/msf{makefont setfont}bind def
		/uf{dup undefinefont ct_VMDictUndef}bind def
		/ur/undefineresource load def
		/chp/charpath load def
		/awsh/awidthshow load def
		/wsh/widthshow load def
		/ash/ashow load def
		/@xshow/xshow load def
		/@yshow/yshow load def
		/@xyshow/xyshow load def
		/@cshow/cshow load def
		/sh/show load def
		/rp/repeat load def
		/.n/.notdef def
		end
		currentglobal false setglobal
	 userdict/Adobe_CoolType_Data 2 copy known not
		 {2 copy 10 dict put}
		if
		get
		begin
		/AddWidths? false def
		/CC 0 def
		/charcode 2 string def
		/@opStackCountByLevel 32 dict def
		/@opStackLevel 0 def
		/@dictStackCountByLevel 32 dict def
		/@dictStackLevel 0 def
		/InVMFontsByCMap 10 dict def
		/InVMDeepCopiedFonts 10 dict def
		end
		setglobal
	}bind def
/dt
	{
	currentdict Adobe_CoolType_Core eq
		{end}
	if
	}bind def
/ps
	{
	Adobe_CoolType_Core begin
	Adobe_CoolType_GVMFonts begin
	Adobe_CoolType_LVMFonts begin
	SharedFontDirectory begin
	}bind def
/pt
	{
	end
	end
	end
	end
	}bind def
/unload
	{
	systemdict/languagelevel known
		{
		systemdict/languagelevel get 2 ge
			{
			userdict/Adobe_CoolType_Core 2 copy known
				{undef}
				{pop pop}
			ifelse
			}
		if
		}
	if
	}bind def
/ndf
	{
	1 index where
		{pop pop pop}
		{dup xcheck{bind}if def}
	ifelse
	}def
/findfont systemdict
	begin
	userdict
		begin
		/globaldict where{/globaldict get begin}if
			dup where pop exch get
		/globaldict where{pop end}if
		end
	end
Adobe_CoolType_Core_Defined
	{/systemfindfont exch def}
	{
	/findfont 1 index def
	/systemfindfont exch def
	}
ifelse
/undefinefont
	{pop}ndf
/copyfont
	{
	currentglobal 3 1 roll
	1 index gcheck setglobal
	dup null eq{0}{dup length}ifelse
	2 index length add 1 add dict
		begin
		exch
			{
			1 index/FID eq
				{pop pop}
				{def}
			ifelse
			}
		forall
		dup null eq
			{pop}
			{{def}forall}
		ifelse
		currentdict
		end
	exch setglobal
	}bind def
/copyarray
	{
	currentglobal exch
	dup gcheck setglobal
	dup length array copy
	exch setglobal
	}bind def
/newencodedfont
	{
	currentglobal
		{
		SharedFontDirectory 3 index known
			{SharedFontDirectory 3 index get/FontReferenced known}
			{false}
		ifelse
		}
		{
		FontDirectory 3 index known
			{FontDirectory 3 index get/FontReferenced known}
			{
			SharedFontDirectory 3 index known
				{SharedFontDirectory 3 index get/FontReferenced known}
				{false}
			ifelse
			}
		ifelse
		}
	ifelse
	dup
		{
		3 index findfont/FontReferenced get
		2 index dup type/nametype eq
			{findfont}
		if ne
			{pop false}
		if
		}
	if
	dup
		{
		1 index dup type/nametype eq
			{findfont}
		 if
		dup/CharStrings known
			{
			/CharStrings get length
			4 index findfont/CharStrings get length
			ne
				{
				pop false
				}
			if 
			}
			{pop}
			ifelse
		}
	if
		{
		pop
		1 index findfont
		/Encoding get exch
		0 1 255
			{2 copy get 3 index 3 1 roll put}
		for
		pop pop pop
		}
		{
		currentglobal
	 4 1 roll
		dup type/nametype eq
		 {findfont}
	 if
	 dup gcheck setglobal
		dup dup maxlength 2 add dict
			begin
			exch
				{
				1 index/FID ne
				2 index/Encoding ne and
					{def}
					{pop pop}
				ifelse
				}
			forall
			/FontReferenced exch def
			/Encoding exch dup length array copy def
			/FontName 1 index dup type/stringtype eq{cvn}if def dup
			currentdict
			end
		definefont ct_VMDictPut
		setglobal
		}
	ifelse
	}bind def
/SetSubstituteStrategy
	{
	$SubstituteFont
		begin
		dup type/dicttype ne
			{0 dict}
		if
		currentdict/$Strategies known
			{
			exch $Strategies exch 
			2 copy known
				{
				get
				2 copy maxlength exch maxlength add dict
					begin
					{def}forall
					{def}forall
					currentdict
					dup/$Init known
						{dup/$Init get exec}
					if
					end
				/$Strategy exch def
				}
				{pop pop pop}
			ifelse
			}
			{pop pop}
		ifelse
		end
	}bind def
/scff
	{
	$SubstituteFont
		begin
		dup type/stringtype eq
			{dup length exch}
			{null}
		ifelse
		/$sname exch def
		/$slen exch def
		/$inVMIndex
			$sname null eq
				{
				1 index $str cvs
				dup length $slen sub $slen getinterval cvn
				}
				{$sname}
			ifelse def
		end
		{findfont}
	@Stopped
		{
		dup length 8 add string exch
		1 index 0(BadFont:)putinterval
		1 index exch 8 exch dup length string cvs putinterval cvn
			{findfont}
		@Stopped
			{pop/Courier findfont}
		if
		}
	if
	$SubstituteFont
		begin
		/$sname null def
		/$slen 0 def
		/$inVMIndex null def
		end
	}bind def
/isWidthsOnlyFont
	{
	dup/WidthsOnly known
		{pop pop true}
		{
		dup/FDepVector known
			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}
			{
			dup/FDArray known
				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}
				{pop}
			ifelse
			}
		ifelse
		}
	ifelse
	}bind def
/ct_StyleDicts 4 dict dup begin
		 /Adobe-Japan1 4 dict dup begin
					 Level2?
								{
								/Serif
								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMin-W3}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMin-W3/CIDFont resourcestatus
								{pop pop/HeiseiMin-W3}
								{/Ryumin-Light}
								ifelse
							}
							{/Ryumin-Light}
							ifelse
								}
								ifelse
								def
								/SansSerif
								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiKakuGo-W5/CIDFont resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{/GothicBBB-Medium}
								ifelse
							}
							{/GothicBBB-Medium}
							ifelse
								}
								ifelse
								def
								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMaruGo-W4/CIDFont resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
									/Jun101-Light-RKSJ-H/Font resourcestatus
									{pop pop/Jun101-Light}
									{SansSerif}
									ifelse
								}
								ifelse
							}
							{
								/Jun101-Light-RKSJ-H/Font resourcestatus
								{pop pop/Jun101-Light}
								{SansSerif}
								ifelse
							}
							ifelse
								}
								ifelse
								/RoundSansSerif exch def
								/Default Serif def
								}
								{
								/Serif/Ryumin-Light def
								/SansSerif/GothicBBB-Medium def
								{
								(fonts/Jun101-Light-83pv-RKSJ-H)status
								}stopped
								{pop}{
										 {pop pop pop pop/Jun101-Light}
										 {SansSerif}
										 ifelse
										 /RoundSansSerif exch def
								}ifelse
								/Default Serif def
								}
					 ifelse
		 end
		 def
		 /Adobe-Korea1 4 dict dup begin
					/Serif/HYSMyeongJo-Medium def
					/SansSerif/HYGoThic-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-GB1 4 dict dup begin
					/Serif/STSong-Light def
					/SansSerif/STHeiti-Regular def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-CNS1 4 dict dup begin
					/Serif/MKai-Medium def
					/SansSerif/MHei-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
end
def
Level2?{currentglobal true setglobal}if
/ct_BoldRomanWidthProc 
	{
	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth
	0 0
	}bind def
/ct_Type0WidthProc 
	{
	 dup stringwidth 0 0 moveto 
	 2 index true charpath pathbbox
	 0 -1 
	 7 index 2 div .88 
	 setcachedevice2
	 pop
	0 0
	}bind def
/ct_Type0WMode1WidthProc 
	{
	 dup stringwidth 
	 pop 2 div neg -0.88
	2 copy
	moveto 
	0 -1
	 5 -1 roll true charpath pathbbox
	 setcachedevice
	}bind def
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
/ct_BoldBaseFont 
	 11 dict begin
		/FontType 3 def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/Encoding cHexEncoding def 
		/_setwidthProc/ct_BoldRomanWidthProc load def
		/_bcstr1 1 string def
		/BuildChar
		{
			exch begin
				_basefont setfont
				_bcstr1 dup 0 4 -1 roll put
				dup 
				_setwidthProc
				3 copy 
				moveto				
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
systemdict/composefont known
{
/ct_DefineIdentity-H
{
	/Identity-H/CMap resourcestatus
	{
		pop pop
	}
	{
		/CIDInit/ProcSet findresource begin
		 12 dict begin
		 begincmap
		 /CIDSystemInfo 3 dict dup begin
			 /Registry(Adobe)def
			 /Ordering(Identity)def
			 /Supplement 0 def
		 end def
		 /CMapName/Identity-H def
		 /CMapVersion 1.000 def
		 /CMapType 1 def
		 1 begincodespacerange
		 <0000><FFFF>
		 endcodespacerange
		 1 begincidrange
		 <0000><FFFF>0
		 endcidrange
		 endcmap
		 CMapName currentdict/CMap defineresource pop
		 end
		 end
	 }
	 ifelse
}
def
/ct_BoldBaseCIDFont 
	 11 dict begin
		/CIDFontType 1 def
		/CIDFontName/ct_BoldBaseCIDFont def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/_setwidthProc/ct_Type0WidthProc load def
		/_bcstr2 2 string def
		/BuildGlyph
		{
			exch begin		 
				_basefont setfont
				_bcstr2 1 2 index 256 mod put
				_bcstr2 0 3 -1 roll 256 idiv put
				_bcstr2 dup _setwidthProc		 
				3 copy 
				moveto
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
}if
Level2?{setglobal}if
/ct_CopyFont{
	{
		1 index/FID ne 2 index/UniqueID ne and
		{def}{pop pop}ifelse
	}forall
}bind def
/ct_Type0CopyFont 
{
	exch
	dup length dict
	begin
	ct_CopyFont
	[
	exch
	FDepVector 
	{
		 dup/FontType get 0 eq
		{	
		1 index ct_Type0CopyFont 
		/_ctType0 exch definefont
		}
		{
		/_ctBaseFont exch
		2 index exec
		}
		 ifelse 
		 exch
	}
	forall 
	pop
	]				
	/FDepVector exch def
	currentdict
	end
}bind def
/ct_MakeBoldFont
{
	 dup/ct_SyntheticBold known
	{
		dup length 3 add dict begin 
		ct_CopyFont 
		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 
		/ct_SyntheticBold true def
		currentdict 
		end 
		definefont
	}
	{
		dup dup length 3 add dict
		begin
			ct_CopyFont
			/PaintType 2 def
			/StrokeWidth .03 0 FontMatrix idtransform pop def
			/dummybold currentdict
		end
		definefont
		dup/FontType get dup 9 ge exch 11 le and 
		{
			ct_BoldBaseCIDFont
			dup length 3 add dict copy begin
			dup/CIDSystemInfo get/CIDSystemInfo exch def
			ct_DefineIdentity-H
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefont exch def
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefonto exch def
			currentdict
			end
			/CIDFont defineresource
		}
		{
			ct_BoldBaseFont
			dup length 3 add dict copy begin
			/_basefont exch def
			/_basefonto exch def
			currentdict
			end
			definefont
		}
		ifelse
	}
	ifelse
}bind def
/ct_MakeBold{
	1 index 
	1 index
	findfont
	currentglobal 5 1 roll
	dup gcheck setglobal
		dup
		 /FontType get 0 eq
			{
				dup/WMode known{dup/WMode get 1 eq}{false}ifelse
				version length 4 ge
				and
					{version 0 4 getinterval cvi 2015 ge}
					{true}
				ifelse 
					{/ct_Type0WidthProc}
					{/ct_Type0WMode1WidthProc}
				ifelse
				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put
						{ct_MakeBoldFont}ct_Type0CopyFont definefont
			}
			{
				dup/_fauxfont known not 1 index/SubstMaster known not and
				{
					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put
					 ct_MakeBoldFont 
				}
				{
				2 index 2 index eq
					{exch pop	}
					{
						dup length dict begin
						ct_CopyFont
						currentdict
						end
						definefont 
					}
				ifelse
				}
			ifelse
			}
		 ifelse
		 pop pop pop
		 setglobal
}bind def
/?str1 256 string def
/?set
	{
	$SubstituteFont
		begin
		/$substituteFound false def
		/$fontname 1 index def
		/$doSmartSub false def
		end
	dup
	 findfont
	$SubstituteFont
		begin
		$substituteFound
			{false}
			{
			dup/FontName known
				{
				dup/FontName get $fontname eq
				1 index/DistillerFauxFont known not and
				/currentdistillerparams where
					{pop false 2 index isWidthsOnlyFont not and}
				if
				}
				{false}
			ifelse
			}
		ifelse
		exch pop
		/$doSmartSub true def
		end
		{
		5 1 roll pop pop pop pop
		findfont
		}
		{
		1 index
		findfont
		dup/FontType get 3 eq
		{
			6 1 roll pop pop pop pop pop false
		}
		{pop true}
		ifelse
		{
		$SubstituteFont
		begin
		pop pop
		/$styleArray 1 index def
		/$regOrdering 2 index def
		pop pop
		0 1 $styleArray length 1 sub
		{
			$styleArray exch get
			ct_StyleDicts $regOrdering
			2 copy known
			{
				get
				exch 2 copy known not
				{pop/Default}
				if
				get
				dup type/nametype eq
				{
				?str1 cvs length dup 1 add exch
				?str1 exch(-)putinterval
				exch dup length exch ?str1 exch 3 index exch putinterval
				add ?str1 exch 0 exch getinterval cvn
				}
				{
				pop pop/Unknown
				}
				ifelse
			}
			{
				pop pop pop pop/Unknown
			}
			ifelse
		}
		for
		end
		findfont 
		}if
		}
	ifelse
	currentglobal false setglobal 3 1 roll
	null copyfont definefont pop
	setglobal
	}bind def
setpacking
userdict/$SubstituteFont 25 dict put
1 dict
	begin
	/SubstituteFont
		dup $error exch 2 copy known
			{get}
			{pop pop{pop/Courier}bind}
		ifelse def
	/currentdistillerparams where dup
		{
		pop pop
		currentdistillerparams/CannotEmbedFontPolicy 2 copy known
			{get/Error eq}
			{pop pop false}
		ifelse
		}
	if not
		{
		countdictstack array dictstack 0 get
			begin
			userdict
				begin
				$SubstituteFont
					begin
					/$str 128 string def
					/$fontpat 128 string def
					/$slen 0 def
					/$sname null def
					/$match false def
					/$fontname null def
					/$substituteFound false def
					/$inVMIndex null def
					/$doSmartSub true def
					/$depth 0 def
					/$fontname null def
					/$italicangle 26.5 def
					/$dstack null def
					/$Strategies 10 dict dup
						begin
						/$Type3Underprint
							{
							currentglobal exch false setglobal
							11 dict
								begin
								/UseFont exch
									$WMode 0 ne
										{
										dup length dict copy
										dup/WMode $WMode put
										/UseFont exch definefont
										}
									if def
								/FontName $fontname dup type/stringtype eq{cvn}if def
								/FontType 3 def
								/FontMatrix[.001 0 0 .001 0 0]def
								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def
								/FontBBox[0 0 0 0]def
								/CCInfo 7 dict dup
									begin
									/cc null def
									/x 0 def
									/y 0 def
									end def
								/BuildChar
									{
									exch
										begin
										CCInfo
											begin
											1 string dup 0 3 index put exch pop
											/cc exch def
											UseFont 1000 scalefont setfont
											cc stringwidth/y exch def/x exch def
											x y setcharwidth
											$SubstituteFont/$Strategy get/$Underprint get exec
											0 0 moveto cc show
											x y moveto
											end
										end
									}bind def
								currentdict
								end
							exch setglobal
							}bind def
						/$GetaTint
							2 dict dup
								begin
								/$BuildFont
									{
									dup/WMode known
										{dup/WMode get}
										{0}
									ifelse
									/$WMode exch def
									$fontname exch
									dup/FontName known
										{
										dup/FontName get
										dup type/stringtype eq{cvn}if
										}
										{/unnamedfont}
									ifelse
									exch
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
									1 index/FontName get known
										{
										pop
										Adobe_CoolType_Data/InVMDeepCopiedFonts get
										1 index get
										null copyfont
										}
										{$deepcopyfont}
									ifelse
									exch 1 index exch/FontBasedOn exch put
									dup/FontName $fontname dup type/stringtype eq{cvn}if put
									definefont
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
										begin
										dup/FontBasedOn get 1 index def
										end
									}bind def
								/$Underprint
									{
									gsave
									x abs y abs gt
										{/y 1000 def}
										{/x -1000 def 500 120 translate}
									ifelse
									Level2?
										{
										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]
										setcolorspace
										}
										{0 setgray}
									ifelse
									10 setlinewidth
									x .8 mul
									[7 3]
										{
										y mul 8 div 120 sub x 10 div exch moveto
										0 y 4 div neg rlineto
										dup 0 rlineto
										0 y 4 div rlineto
										closepath
										gsave
										Level2?
											{.2 setcolor}
											{.8 setgray}
										ifelse
										fill grestore
										stroke
										}
									forall
									pop
									grestore
									}bind def
								end def
						/$Oblique
							1 dict dup
								begin
								/$BuildFont
									{
									currentglobal exch dup gcheck setglobal
									null copyfont
										begin
										/FontBasedOn
										currentdict/FontName known
											{
											FontName
											dup type/stringtype eq{cvn}if
											}
											{/unnamedfont}
										ifelse
										def
										/FontName $fontname dup type/stringtype eq{cvn}if def
										/currentdistillerparams where
											{pop}
											{
											/FontInfo currentdict/FontInfo known
												{FontInfo null copyfont}
												{2 dict}
											ifelse
											dup
												begin
												/ItalicAngle $italicangle def
												/FontMatrix FontMatrix
												[1 0 ItalicAngle dup sin exch cos div 1 0 0]
												matrix concatmatrix readonly
												end
											4 2 roll def
											def
											}
										ifelse
										FontName currentdict
										end
									definefont
									exch setglobal
									}bind def
								end def
						/$None
							1 dict dup
								begin
								/$BuildFont{}bind def
								end def
						end def
					/$Oblique SetSubstituteStrategy
					/$findfontByEnum
						{
						dup type/stringtype eq{cvn}if
						dup/$fontname exch def
						$sname null eq
							{$str cvs dup length $slen sub $slen getinterval}
							{pop $sname}
						ifelse
						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval
						/$match false def
						$SubstituteFont/$dstack countdictstack array dictstack put
						mark
							{
							$fontpat 0 $slen 7 add getinterval
								{/$match exch def exit}
							$str filenameforall
							}
						stopped
							{
							cleardictstack
							currentdict
							true
							$SubstituteFont/$dstack get
								{
								exch
									{
									1 index eq
										{pop false}
										{true}
									ifelse
									}
									{begin false}
								ifelse
								}
							forall
							pop
							}
						if
						cleartomark
						/$slen 0 def
						$match false ne
							{$match(fonts/)anchorsearch pop pop cvn}
							{/Courier}
						ifelse
						}bind def
					/$ROS 1 dict dup
						begin
						/Adobe 4 dict dup
							begin
							/Japan1 [/Ryumin-Light/HeiseiMin-W3
										 /GothicBBB-Medium/HeiseiKakuGo-W5
										 /HeiseiMaruGo-W4/Jun101-Light]def
							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def
							/GB1	 [/STSong-Light/STHeiti-Regular]def
							/CNS1	[/MKai-Medium/MHei-Medium]def
							end def
						end def
					/$cmapname null def
					/$deepcopyfont
						{
						dup/FontType get 0 eq
							{
							1 dict dup/FontName/copied put copyfont
								begin
								/FDepVector FDepVector copyarray
								0 1 2 index length 1 sub
									{
									2 copy get $deepcopyfont
									dup/FontName/copied put
									/copied exch definefont
									3 copy put pop pop
									}
								for
								def
								currentdict
								end
							}
							{$Strategies/$Type3Underprint get exec}
						ifelse
						}bind def
					/$buildfontname
						{
						dup/CIDFont findresource/CIDSystemInfo get
							begin
							Registry length Ordering length Supplement 8 string cvs
							3 copy length 2 add add add string
							dup 5 1 roll dup 0 Registry putinterval
							dup 4 index(-)putinterval
							dup 4 index 1 add Ordering putinterval
							4 2 roll add 1 add 2 copy(-)putinterval
							end
						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch
						anchorsearch
							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}
							{pop pop pop pop pop}
						ifelse
						length
						$str 1 index(-)putinterval 1 add
						$str 1 index $cmapname $fontpat cvs putinterval
						$cmapname length add
						$str exch 0 exch getinterval cvn
						}bind def
					/$findfontByROS
						{
						/$fontname exch def
						$ROS Registry 2 copy known
							{
							get Ordering 2 copy known
								{get}
								{pop pop[]}
							ifelse
							}
							{pop pop[]}
						ifelse
						false exch
							{
							dup/CIDFont resourcestatus
								{
								pop pop
								save
								1 index/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get}
									{false}
								ifelse
								exch pop
								exch restore
									{pop}
									{exch pop true exit}
								ifelse
								}
								{pop}
							ifelse
							}
						forall
							{$str cvs $buildfontname}
							{
							false(*)
								{
								save exch
								dup/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get not}
									{true}
								ifelse
								exch/CIDSystemInfo get
								dup/Registry get Registry eq
								exch/Ordering get Ordering eq and and
									{exch restore exch pop true exit}
									{pop restore}
								ifelse
								}
							$str/CIDFont resourceforall
								{$buildfontname}
								{$fontname $findfontByEnum}
							ifelse
							}
						ifelse
						}bind def
					end
				end
				currentdict/$error known currentdict/languagelevel known and dup
					{pop $error/SubstituteFont known}
				if
				dup
					{$error}
					{Adobe_CoolType_Core}
				ifelse
				begin
					{
					/SubstituteFont
					/CMap/Category resourcestatus
						{
						pop pop
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{
								$sname null eq
									{dup $str cvs dup length $slen sub $slen getinterval cvn}
									{$sname}
								ifelse
								Adobe_CoolType_Data/InVMFontsByCMap get
								1 index 2 copy known
									{
									get
									false exch
										{
										pop
										currentglobal
											{
											GlobalFontDirectory 1 index known
												{exch pop true exit}
												{pop}
											ifelse
											}
											{
											FontDirectory 1 index known
												{exch pop true exit}
												{
												GlobalFontDirectory 1 index known
													{exch pop true exit}
													{pop}
												ifelse
												}
											ifelse
											}
										ifelse
										}
									forall
									}
									{pop pop false}
								ifelse
									{
									exch pop exch pop
									}
									{
									dup/CMap resourcestatus
										{
										pop pop
										dup/$cmapname exch def
										/CMap findresource/CIDSystemInfo get{def}forall
										$findfontByROS
										}
										{
										128 string cvs
										dup(-)search
											{
											3 1 roll search
												{
												3 1 roll pop
													{dup cvi}
												stopped
													{pop pop pop pop pop $findfontByEnum}
													{
													4 2 roll pop pop
													exch length
													exch
													2 index length
													2 index
													sub
													exch 1 sub -1 0
														{
														$str cvs dup length
														4 index
														0
														4 index
														4 3 roll add
														getinterval
														exch 1 index exch 3 index exch
														putinterval
														dup/CMap resourcestatus
															{
															pop pop
															4 1 roll pop pop pop
															dup/$cmapname exch def
															/CMap findresource/CIDSystemInfo get{def}forall
															$findfontByROS
															true exit
															}
															{pop}
														ifelse
														}
													for
													dup type/booleantype eq
														{pop}
														{pop pop pop $findfontByEnum}
													ifelse
													}
												ifelse
												}
												{pop pop pop $findfontByEnum}
											ifelse
											}
											{pop pop $findfontByEnum}
										ifelse
										}
									ifelse
									}
								ifelse
								}
								{//SubstituteFont exec}
							ifelse
							/$slen 0 def
							end
						}
						}
						{
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{$findfontByEnum}
								{//SubstituteFont exec}
							ifelse
							end
						}
						}
					ifelse
					bind readonly def
					Adobe_CoolType_Core/scfindfont/systemfindfont load put
					}
					{
					/scfindfont
						{
						$SubstituteFont
							begin
							dup systemfindfont
							dup/FontName known
								{dup/FontName get dup 3 index ne}
								{/noname true}
							ifelse
							dup
								{
								/$origfontnamefound 2 index def
								/$origfontname 4 index def/$substituteFound true def
								}
							if
							exch pop
								{
								$slen 0 gt
								$sname null ne
								3 index length $slen gt or and
									{
									pop dup $findfontByEnum findfont
									dup maxlength 1 add dict
										begin
											{1 index/FID eq{pop pop}{def}ifelse}
										forall
										currentdict
										end
									definefont
									dup/FontName known{dup/FontName get}{null}ifelse
									$origfontnamefound ne
										{
										$origfontname $str cvs print
										( substitution revised, using )print
										dup/FontName known
											{dup/FontName get}{(unspecified font)}
										ifelse
										$str cvs print(.\n)print
										}
									if
									}
									{exch pop}
								ifelse
								}
								{exch pop}
							ifelse
							end
						}bind def
					}
				ifelse
				end
			end
		Adobe_CoolType_Core_Defined not
			{
			Adobe_CoolType_Core/findfont
				{
				$SubstituteFont
					begin
					$depth 0 eq
						{
						/$fontname 1 index dup type/stringtype ne{$str cvs}if def
						/$substituteFound false def
						}
					if
					/$depth $depth 1 add def
					end
				scfindfont
				$SubstituteFont
					begin
					/$depth $depth 1 sub def
					$substituteFound $depth 0 eq and
						{
						$inVMIndex null ne
							{dup $inVMIndex $AddInVMFont}
						if
						$doSmartSub
							{
							currentdict/$Strategy known
								{$Strategy/$BuildFont get exec}
							if
							}
						if
						}
					if
					end
				}bind put
			}
		if
		}
	if
	end
/$AddInVMFont
	{
	exch/FontName 2 copy known
		{
		get
		1 dict dup begin exch 1 index gcheck def end exch
		Adobe_CoolType_Data/InVMFontsByCMap get exch
		$DictAdd
		}
		{pop pop pop}
	ifelse
	}bind def
/$DictAdd
	{
	2 copy known not
		{2 copy 4 index length dict put}
	if
	Level2? not
		{
		2 copy get dup maxlength exch length 4 index length add lt
		2 copy get dup length 4 index length add exch maxlength 1 index lt
			{
			2 mul dict
				begin
				2 copy get{forall}def
				2 copy currentdict put
				end
			}
			{pop}
		ifelse
		}
	if
	get
		begin
			{def}
		forall
		end
	}bind def
end
end
%%EndResource
currentglobal true setglobal
%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.
%%Version: 1.23 0
systemdict/languagelevel known dup
	{currentglobal false setglobal}
	{false}
ifelse
exch
userdict/Adobe_CoolType_Utility 2 copy known
	{2 copy get dup maxlength 27 add dict copy}
	{27 dict}
ifelse put
Adobe_CoolType_Utility
	begin
	/@eexecStartData
		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E
		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C
		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def
	/@recognizeCIDFont null def
	/ct_Level2? exch def
	/ct_Clone? 1183615869 internaldict dup
			/CCRun known not
			exch/eCCRun known not
			ct_Level2? and or def
ct_Level2?
	{globaldict begin currentglobal true setglobal}
if
	/ct_AddStdCIDMap
		ct_Level2?
			{{
				mark
				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put
					{
					((Hex)57 StartData
					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0
					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60
					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8
					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec
					}
				stopped
					{
					 cleartomark
					 Adobe_CoolType_Utility/@recognizeCIDFont get
					 countdictstack dup array dictstack
					 exch 1 sub -1 0
						 {
						 2 copy get 3 index eq
								{1 index length exch sub 1 sub{end}repeat exit}
								{pop}
						 ifelse
						 }
					 for
					 pop pop
					 Adobe_CoolType_Utility/@eexecStartData get eexec
					}
					{cleartomark}
				ifelse
			}}
			{{
				Adobe_CoolType_Utility/@eexecStartData get eexec
			}}
		ifelse bind def
userdict/cid_extensions known
dup{cid_extensions/cid_UpdateDB known and}if
	{
	 cid_extensions
	 begin
	/cid_GetCIDSystemInfo
		{
		 1 index type/stringtype eq
			{exch cvn exch}
		 if
		 cid_extensions
			 begin
			 dup load 2 index known
				{
				 2 copy
				 cid_GetStatusInfo
				 dup null ne
					{
					 1 index load
					 3 index get
					 dup null eq
						 {pop pop cid_UpdateDB}
						 {
						 exch
						 1 index/Created get eq
							 {exch pop exch pop}
							 {pop cid_UpdateDB}
						 ifelse
						 }
					 ifelse
					}
					{pop cid_UpdateDB}
				 ifelse
				}
				{cid_UpdateDB}
			 ifelse
			 end
		}bind def
	 end
	}
if
ct_Level2?
	{end setglobal}
if
	/ct_UseNativeCapability? systemdict/composefont known def
	/ct_MakeOCF 35 dict def
	/ct_Vars 25 dict def
	/ct_GlyphDirProcs 6 dict def
	/ct_BuildCharDict 15 dict dup
		begin
		/charcode 2 string def
		/dst_string 1500 string def
		/nullstring()def
		/usewidths? true def
		end def
	ct_Level2?{setglobal}{pop}ifelse
	ct_GlyphDirProcs
		begin
		/GetGlyphDirectory
			{
			systemdict/languagelevel known
				{pop/CIDFont findresource/GlyphDirectory get}
				{
				1 index/CIDFont findresource/GlyphDirectory
				get dup type/dicttype eq
					{
					dup dup maxlength exch length sub 2 index lt
						{
						dup length 2 index add dict copy 2 index
						/CIDFont findresource/GlyphDirectory 2 index put
						}
					if
					}
				if
				exch pop exch pop
				}
			ifelse
			+
			}def
		/+
			{
			systemdict/languagelevel known
				{
				currentglobal false setglobal
				3 dict begin
					/vm exch def
				}
				{1 dict begin}
			ifelse
			/$ exch def
			systemdict/languagelevel known
				{
				vm setglobal
				/gvm currentglobal def
				$ gcheck setglobal
				}
			if
			?{$ begin}if
			}def
		/?{$ type/dicttype eq}def
		/|{
			userdict/Adobe_CoolType_Data known
				{
			Adobe_CoolType_Data/AddWidths? known
				{
				 currentdict Adobe_CoolType_Data
					begin
					 begin
						AddWidths?
								{
								Adobe_CoolType_Data/CC 3 index put
								?{def}{$ 3 1 roll put}ifelse
								CC charcode exch 1 index 0 2 index 256 idiv put
								1 index exch 1 exch 256 mod put
								stringwidth 2 array astore
								currentfont/Widths get exch CC exch put
								}
								{?{def}{$ 3 1 roll put}ifelse}
							ifelse
					end
				end
				}
				{?{def}{$ 3 1 roll put}ifelse}	ifelse
				}
				{?{def}{$ 3 1 roll put}ifelse}
			ifelse
			}def
		/!
			{
			?{end}if
			systemdict/languagelevel known
				{gvm setglobal}
			if
			end
			}def
		/:{string currentfile exch readstring pop}executeonly def
		end
	ct_MakeOCF
		begin
		/ct_cHexEncoding
		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
		/ct_CID_STR_SIZE 8000 def
		/ct_mkocfStr100 100 string def
		/ct_defaultFontMtx[.001 0 0 .001 0 0]def
		/ct_1000Mtx[1000 0 0 1000 0 0]def
		/ct_raise{exch cvx exch errordict exch get exec stop}bind def
		/ct_reraise
			{cvx $error/errorname get(Error: )print dup(						 )cvs print
					errordict exch get exec stop
			}bind def
		/ct_cvnsi
			{
			1 index add 1 sub 1 exch 0 4 1 roll
				{
				2 index exch get
				exch 8 bitshift
				add
				}
			for
			exch pop
			}bind def
		/ct_GetInterval
			{
			Adobe_CoolType_Utility/ct_BuildCharDict get
				begin
				/dst_index 0 def
				dup dst_string length gt
					{dup string/dst_string exch def}
				if
				1 index ct_CID_STR_SIZE idiv
				/arrayIndex exch def
				2 index arrayIndex get
				2 index
				arrayIndex ct_CID_STR_SIZE mul
				sub
					{
					dup 3 index add 2 index length le
						{
						2 index getinterval
						dst_string dst_index 2 index putinterval
						length dst_index add/dst_index exch def
						exit
						}
						{
						1 index length 1 index sub
						dup 4 1 roll
						getinterval
						dst_string dst_index 2 index putinterval
						pop dup dst_index add/dst_index exch def
						sub
						/arrayIndex arrayIndex 1 add def
						2 index dup length arrayIndex gt
							 {arrayIndex get}
							 {
							 pop
							 exit
							 }
						ifelse
						0
						}
					ifelse
					}
				loop
				pop pop pop
				dst_string 0 dst_index getinterval
				end
			}bind def
		ct_Level2?
			{
			/ct_resourcestatus
			currentglobal mark true setglobal
				{/unknowninstancename/Category resourcestatus}
			stopped
				{cleartomark setglobal true}
				{cleartomark currentglobal not exch setglobal}
			ifelse
				{
					{
					mark 3 1 roll/Category findresource
						begin
						ct_Vars/vm currentglobal put
						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
							{cleartomark false}
							{{3 2 roll pop true}{cleartomark false}ifelse}
						ifelse
						ct_Vars/vm get setglobal
						end
					}
				}
				{{resourcestatus}}
			ifelse bind def
			/CIDFont/Category ct_resourcestatus
				{pop pop}
				{
				currentglobal true setglobal
				/Generic/Category findresource
				dup length dict copy
				dup/InstanceType/dicttype put
				/CIDFont exch/Category defineresource pop
				setglobal
				}
			ifelse
			ct_UseNativeCapability?
				{
				/CIDInit/ProcSet findresource begin
				12 dict begin
				begincmap
				/CIDSystemInfo 3 dict dup begin
				 /Registry(Adobe)def
				 /Ordering(Identity)def
				 /Supplement 0 def
				end def
				/CMapName/Identity-H def
				/CMapVersion 1.000 def
				/CMapType 1 def
				1 begincodespacerange
				<0000><FFFF>
				endcodespacerange
				1 begincidrange
				<0000><FFFF>0
				endcidrange
				endcmap
				CMapName currentdict/CMap defineresource pop
				end
				end
				}
			if
			}
			{
			/ct_Category 2 dict begin
			/CIDFont 10 dict def
			/ProcSet	2 dict def
			currentdict
			end
			def
			/defineresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					dup dup maxlength exch length eq
						{
						dup length 10 add dict copy
						ct_Category 2 index 2 index put
						}
					if
					3 index 3 index put
					pop exch pop
					}
					{pop pop/defineresource/undefined ct_raise}
				ifelse
				}bind def
			/findresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index 2 copy known
						{get 3 1 roll pop pop}
						{pop pop/findresource/undefinedresource ct_raise}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/resourcestatus
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index known
					exch pop exch pop
						{
						0 -1 true
						}
						{
						false
						}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/ct_resourcestatus/resourcestatus load def
			}
		ifelse
		/ct_CIDInit 2 dict
			begin
			/ct_cidfont_stream_init
				{
					{
					dup(Binary)eq
						{
						pop
						null
						currentfile
						ct_Level2?
							{
								{cid_BYTE_COUNT()/SubFileDecode filter}
							stopped
								{pop pop pop}
							if
							}
						if
						/readstring load
						exit
						}
					if
					dup(Hex)eq
						{
						pop
						currentfile
						ct_Level2?
							{
								{null exch/ASCIIHexDecode filter/readstring}
							stopped
								{pop exch pop(>)exch/readhexstring}
							if
							}
							{(>)exch/readhexstring}
						ifelse
						load
						exit
						}
					if
					/StartData/typecheck ct_raise
					}
				loop
				cid_BYTE_COUNT ct_CID_STR_SIZE le
					{
					2 copy cid_BYTE_COUNT string exch exec
					pop
					1 array dup
					3 -1 roll
					0 exch put
					}
					{
					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi
					dup array exch 2 sub 0 exch 1 exch
						{
						2 copy
						5 index
						ct_CID_STR_SIZE
						string
						6 index exec
						pop
						put
						pop
						}
					for
					2 index
					cid_BYTE_COUNT ct_CID_STR_SIZE mod string
					3 index exec
					pop
					1 index exch
					1 index length 1 sub
					exch put
					}
				ifelse
				cid_CIDFONT exch/GlyphData exch put
				2 index null eq
					{
					pop pop pop
					}
					{
					pop/readstring load
					1 string exch
						{
						3 copy exec
						pop
						dup length 0 eq
							{
							pop pop pop pop pop
							true exit
							}
						if
						4 index
						eq
							{
							pop pop pop pop
							false exit
							}
						if
						}
					loop
					pop
					}
				ifelse
				}bind def
			/StartData
				{
				mark
					{
					currentdict
					dup/FDArray get 0 get/FontMatrix get
					0 get 0.001 eq
						{
						dup/CDevProc known not
							{
							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known
								{get}
								{
								pop pop
								{pop pop pop pop pop 0 -1000 7 index 2 div 880}
								}
							ifelse
							def
							}
						if
						}
						{
						/CDevProc
							{
							 pop pop pop pop pop
							 0
							 1 cid_temp/cid_CIDFONT get
							/FDArray get 0 get
							/FontMatrix get 0 get div
							 7 index 2 div
							 1 index 0.88 mul
							}def
						}
					ifelse
					/cid_temp 15 dict def
					cid_temp
						begin
						/cid_CIDFONT exch def
						3 copy pop
						dup/cid_BYTE_COUNT exch def 0 gt
							{
							ct_cidfont_stream_init
							FDArray
								{
								/Private get
								dup/SubrMapOffset known
									{
									begin
									/Subrs SubrCount array def
									Subrs
									SubrMapOffset
									SubrCount
									SDBytes
									ct_Level2?
										{
										currentdict dup/SubrMapOffset undef
										dup/SubrCount undef
										/SDBytes undef
										}
									if
									end
									/cid_SD_BYTES exch def
									/cid_SUBR_COUNT exch def
									/cid_SUBR_MAP_OFFSET exch def
									/cid_SUBRS exch def
									cid_SUBR_COUNT 0 gt
										{
										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval
										0 cid_SD_BYTES ct_cvnsi
										0 1 cid_SUBR_COUNT 1 sub
											{
											exch 1 index
											1 add
											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add
											GlyphData exch cid_SD_BYTES ct_GetInterval
											0 cid_SD_BYTES ct_cvnsi
											cid_SUBRS 4 2 roll
											GlyphData exch
											4 index
											1 index
											sub
											ct_GetInterval
											dup length string copy put
											}
										for
										pop
										}
									if
									}
									{pop}
								ifelse
								}
							forall
							}
						if
						cleartomark pop pop
						end
					CIDFontName currentdict/CIDFont defineresource pop
					end end
					}
				stopped
					{cleartomark/StartData ct_reraise}
				if
				}bind def
			currentdict
			end def
		/ct_saveCIDInit
			{
			/CIDInit/ProcSet ct_resourcestatus
				{true}
				{/CIDInitC/ProcSet ct_resourcestatus}
			ifelse
				{
				pop pop
				/CIDInit/ProcSet findresource
				ct_UseNativeCapability?
					{pop null}
					{/CIDInit ct_CIDInit/ProcSet defineresource pop}
				ifelse
				}
				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}
			ifelse
			ct_Vars exch/ct_oldCIDInit exch put
			}bind def
		/ct_restoreCIDInit
			{
			ct_Vars/ct_oldCIDInit get dup null ne
				{/CIDInit exch/ProcSet defineresource pop}
				{pop}
			ifelse
			}bind def
		/ct_BuildCharSetUp
			{
			1 index
				begin
				CIDFont
					begin
					Adobe_CoolType_Utility/ct_BuildCharDict get
						begin
						/ct_dfCharCode exch def
						/ct_dfDict exch def
						CIDFirstByte ct_dfCharCode add
						dup CIDCount ge
							{pop 0}
						if
						/cid exch def
							{
							GlyphDirectory cid 2 copy known
								{get}
								{pop pop nullstring}
							ifelse
							dup length FDBytes sub 0 gt
								{
								dup
								FDBytes 0 ne
									{0 FDBytes ct_cvnsi}
									{pop 0}
								ifelse
								/fdIndex exch def
								dup length FDBytes sub FDBytes exch getinterval
								/charstring exch def
								exit
								}
								{
								pop
								cid 0 eq
									{/charstring nullstring def exit}
								if
								/cid 0 def
								}
							ifelse
							}
						loop
			}def
		/ct_SetCacheDevice
			{
			0 0 moveto
			dup stringwidth
			3 -1 roll
			true charpath
			pathbbox
			0 -1000
			7 index 2 div 880
			setcachedevice2
			0 0 moveto
			}def
		/ct_CloneSetCacheProc
			{
			1 eq
				{
				stringwidth
				pop -2 div -880
				0 -1000 setcharwidth
				moveto
				}
				{
				usewidths?
					{
					currentfont/Widths get cid
					2 copy known
						{get exch pop aload pop}
						{pop pop stringwidth}
					ifelse
					}
					{stringwidth}
				ifelse
				setcharwidth
				0 0 moveto
				}
			ifelse
			}def
		/ct_Type3ShowCharString
			{
			ct_FDDict fdIndex 2 copy known
				{get}
				{
				currentglobal 3 1 roll
				1 index gcheck setglobal
				ct_Type1FontTemplate dup maxlength dict copy
					begin
					FDArray fdIndex get
					dup/FontMatrix 2 copy known
						{get}
						{pop pop ct_defaultFontMtx}
					ifelse
					/FontMatrix exch dup length array copy def
					/Private get
					/Private exch def
					/Widths rootfont/Widths get def
					/CharStrings 1 dict dup/.notdef
						<d841272cf18f54fc13>dup length string copy put def
					currentdict
					end
				/ct_Type1Font exch definefont
				dup 5 1 roll put
				setglobal
				}
			ifelse
			dup/CharStrings get 1 index/Encoding get
			ct_dfCharCode get charstring put
			rootfont/WMode 2 copy known
				{get}
				{pop pop 0}
			ifelse
			exch
			1000 scalefont setfont
			ct_str1 0 ct_dfCharCode put
			ct_str1 exch ct_dfSetCacheProc
			ct_SyntheticBold
				{
				currentpoint
				ct_str1 show
				newpath
				moveto
				ct_str1 true charpath
				ct_StrokeWidth setlinewidth
				stroke
				}
				{ct_str1 show}
			ifelse
			}def
		/ct_Type4ShowCharString
			{
			ct_dfDict ct_dfCharCode charstring
			FDArray fdIndex get
			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not
				{ct_1000Mtx matrix concatmatrix concat}
				{pop}
			ifelse
			/Private get
			Adobe_CoolType_Utility/ct_Level2? get not
				{
				ct_dfDict/Private
				3 -1 roll
					{put}
				1183615869 internaldict/superexec get exec
				}
			if
			1183615869 internaldict
			Adobe_CoolType_Utility/ct_Level2? get
				{1 index}
				{3 index/Private get mark 6 1 roll}
			ifelse
			dup/RunInt known
				{/RunInt get}
				{pop/CCRun}
			ifelse
			get exec
			Adobe_CoolType_Utility/ct_Level2? get not
				{cleartomark}
			if
			}bind def
		/ct_BuildCharIncremental
			{
				{
				Adobe_CoolType_Utility/ct_MakeOCF get begin
				ct_BuildCharSetUp
				ct_ShowCharString
				}
			stopped
				{stop}
			if
			end
			end
			end
			end
			}bind def
		/BaseFontNameStr(BF00)def
		/ct_Type1FontTemplate 14 dict
			begin
			/FontType 1 def
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/PaintType 0 def
			currentdict
			end def
		/BaseFontTemplate 11 dict
			begin
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/BuildChar/ct_BuildCharIncremental load def
			ct_Clone?
				{
				/FontType 3 def
				/ct_ShowCharString/ct_Type3ShowCharString load def
				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def
				/ct_SyntheticBold false def
				/ct_StrokeWidth 1 def
				}
				{
				/FontType 4 def
				/Private 1 dict dup/lenIV 4 put def
				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def
				/PaintType 0 def
				/ct_ShowCharString/ct_Type4ShowCharString load def
				}
			ifelse
			/ct_str1 1 string def
			currentdict
			end def
		/BaseFontDictSize BaseFontTemplate length 5 add def
		/ct_matrixeq
			{
			true 0 1 5
				{
				dup 4 index exch get exch 3 index exch get eq and
				dup not
					{exit}
				if
				}
			for
			exch pop exch pop
			}bind def
		/ct_makeocf
			{
			15 dict
				begin
				exch/WMode exch def
				exch/FontName exch def
				/FontType 0 def
				/FMapType 2 def
			dup/FontMatrix known
				{dup/FontMatrix get/FontMatrix exch def}
				{/FontMatrix matrix def}
			ifelse
				/bfCount 1 index/CIDCount get 256 idiv 1 add
					dup 256 gt{pop 256}if def
				/Encoding
					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for
					bfCount 1 255{2 copy bfCount put pop}for
					def
				/FDepVector bfCount dup 256 lt{1 add}if array def
				BaseFontTemplate BaseFontDictSize dict copy
					begin
					/CIDFont exch def
					CIDFont/FontBBox known
						{CIDFont/FontBBox get/FontBBox exch def}
					if
					CIDFont/CDevProc known
						{CIDFont/CDevProc get/CDevProc exch def}
					if
					currentdict
					end
				BaseFontNameStr 3(0)putinterval
				0 1 bfCount dup 256 eq{1 sub}if
					{
					FDepVector exch
					2 index BaseFontDictSize dict copy
						begin
						dup/CIDFirstByte exch 256 mul def
						FontType 3 eq
							{/ct_FDDict 2 dict def}
						if
						currentdict
						end
					1 index 16
					BaseFontNameStr 2 2 getinterval cvrs pop
					BaseFontNameStr exch definefont
					put
					}
				for
				ct_Clone?
					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}
				if
				FontName
				currentdict
				end
			definefont
			ct_Clone?
				{
				gsave
				dup 1000 scalefont setfont
				ct_BuildCharDict
					begin
					/usewidths? false def
					currentfont/Widths get
						begin
						exch/CIDFont get/GlyphDirectory get
							{
							pop
							dup charcode exch 1 index 0 2 index 256 idiv put
							1 index exch 1 exch 256 mod put
							stringwidth 2 array astore def
							}
						forall
						end
					/usewidths? true def
					end
				grestore
				}
				{exch pop}
			ifelse
			}bind def
		currentglobal true setglobal
		/ct_ComposeFont
			{
			ct_UseNativeCapability?
				{				
				2 index/CMap ct_resourcestatus
					{pop pop exch pop}
					{
					/CIDInit/ProcSet findresource
						begin
						12 dict
							begin
							begincmap
							/CMapName 3 index def
							/CMapVersion 1.000 def
							/CMapType 1 def
							exch/WMode exch def
							/CIDSystemInfo 3 dict dup
								begin
								/Registry(Adobe)def
								/Ordering
								CMapName ct_mkocfStr100 cvs
								(Adobe-)search
									{
									pop pop
									(-)search
										{
										dup length string copy
										exch pop exch pop
										}
										{pop(Identity)}
									ifelse
									}
									{pop (Identity)}
								ifelse
								def
								/Supplement 0 def
								end def
							1 begincodespacerange
							<0000><FFFF>
							endcodespacerange
							1 begincidrange
							<0000><FFFF>0
							endcidrange
							endcmap
							CMapName currentdict/CMap defineresource pop
							end
						end
					}
				ifelse
				composefont
				}
				{
				3 2 roll pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
			setglobal
		/ct_MakeIdentity
			{
			ct_UseNativeCapability?
				{
				1 index/CMap ct_resourcestatus
					{pop pop}
					{
					/CIDInit/ProcSet findresource begin
					12 dict begin
					begincmap
					/CMapName 2 index def
					/CMapVersion 1.000 def
					/CMapType 1 def
					/CIDSystemInfo 3 dict dup
						begin
						/Registry(Adobe)def
						/Ordering
						CMapName ct_mkocfStr100 cvs
						(Adobe-)search
							{
							pop pop
							(-)search
								{dup length string copy exch pop exch pop}
								{pop(Identity)}
							ifelse
							}
							{pop(Identity)}
						ifelse
						def
						/Supplement 0 def
						end def
					1 begincodespacerange
					<0000><FFFF>
					endcodespacerange
					1 begincidrange
					<0000><FFFF>0
					endcidrange
					endcmap
					CMapName currentdict/CMap defineresource pop
					end
					end
					}
				ifelse
				composefont
				}
				{
				exch pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
		currentdict readonly pop
		end
	end
%%EndResource
setglobal
%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0
%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.
%%Version: 1.0 0
userdict/ct_T42Dict 15 dict put
ct_T42Dict begin
/Is2015?
{
 version
 cvi
 2015
 ge
}bind def
/AllocGlyphStorage
{
 Is2015?
 {	
	pop
 }
 {
	{string}forall
 }ifelse
}bind def
/Type42DictBegin
{
25 dict begin
 /FontName exch def
 /CharStrings 256 dict 
begin
	 /.notdef 0 def
	 currentdict 
end def
 /Encoding exch def
 /PaintType 0 def
 /FontType 42 def
 /FontMatrix[1 0 0 1 0 0]def
 4 array astore cvx/FontBBox exch def
 /sfnts
}bind def
/Type42DictEnd 
{
 currentdict dup/FontName get exch definefont end
ct_T42Dict exch
dup/FontName get exch put
}bind def
/RD{string currentfile exch readstring pop}executeonly def
/PrepFor2015
{
Is2015?
{		 
	/GlyphDirectory 
	 16
	 dict def
	 sfnts 0 get
	 dup
	 2 index
	(glyx)
	 putinterval
	 2 index 
	(locx)
	 putinterval
	 pop
	 pop
}
{
	 pop
	 pop
}ifelse			
}bind def
/AddT42Char
{
Is2015?
{
	/GlyphDirectory get 
	begin
	def
	end
	pop
	pop
}
{
	/sfnts get
	4 index
	get
	3 index
 2 index
	putinterval
	pop
	pop
	pop
	pop
}ifelse
}bind def
/T0AddT42Mtx2
{
/CIDFont findresource/Metrics2 get begin def end
}bind def
end
%%EndResource
currentglobal true setglobal
%%BeginFile: MMFauxFont.prc
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. 
%%All Rights Reserved.
userdict /ct_EuroDict 10 dict put
ct_EuroDict begin
/ct_CopyFont 
{
    { 1 index /FID ne {def} {pop pop} ifelse} forall
} def
/ct_GetGlyphOutline
{
   gsave
   initmatrix newpath
   exch findfont dup 
   length 1 add dict 
   begin 
		ct_CopyFont 
		/Encoding Encoding dup length array copy 
		dup
		4 -1 roll
		0 exch put   
		def
		currentdict
   end
   /ct_EuroFont exch definefont
   1000 scalefont setfont
   0 0 moveto
   [
       <00> stringwidth 
       <00> false charpath
       pathbbox
       [
       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall
   grestore
   counttomark 8 add
}
def
/ct_MakeGlyphProc
{
   ] cvx
   /ct_PSBuildGlyph cvx
   ] cvx
} def
/ct_PSBuildGlyph 
{ 
 	gsave 
	8 -1 roll pop 
	7 1 roll 
        6 -2 roll ct_FontMatrix transform 6 2 roll
        4 -2 roll ct_FontMatrix transform 4 2 roll
        ct_FontMatrix transform 
	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  
	dup  9 1 roll 
	{  
		currentdict /StrokeWidth 2 copy known  
		{   
			get 2 div   
			0 ct_FontMatrix dtransform pop
			5 1 roll  
			4 -1 roll 4 index sub   
			4 1 roll   
			3 -1 roll 4 index sub  
			3 1 roll   
			exch 4 index add exch  
			4 index add  
			5 -1 roll pop  
		}  
		{	 
			pop pop 
		}  
		ifelse  
	}       
    if  
	setcachedevice  
        ct_FontMatrix concat
        ct_PSPathOps begin 
		exec 
	end 
	{  
		currentdict /StrokeWidth 2 copy known  
			{ get }  
			{ pop pop 0 }  
  	    ifelse  
		setlinewidth stroke  
	}  
	{   
	    fill  
	}  
	ifelse  
    grestore
} def 
/ct_PSPathOps 4 dict dup begin 
	/m {moveto} def 
	/l {lineto} def 
	/c {curveto} def 
	/cp {closepath} def 
end 
def 
/ct_matrix1000 [1000 0 0 1000 0 0] def
/ct_AddGlyphProc  
{
   2 index findfont dup length 4 add dict 
   begin 
	ct_CopyFont 
	/CharStrings CharStrings dup length 1 add dict copy
      begin
         3 1 roll def  
         currentdict 
      end 
      def
      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def
      /ct_PSBuildGlyph /ct_PSBuildGlyph load def
      /ct_PSPathOps /ct_PSPathOps load def
      currentdict
   end
   definefont pop
}
def
systemdict /languagelevel known
{
	/ct_AddGlyphToPrinterFont {
		2 copy
		ct_GetGlyphOutline 3 add -1 roll restore 
		ct_MakeGlyphProc 
		ct_AddGlyphProc
	} def
}
{
	/ct_AddGlyphToPrinterFont {
	    pop pop restore
		Adobe_CTFauxDict /$$$FONTNAME get
		/Euro
		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get
		ct_EuroDict exch get
		ct_AddGlyphProc
	} def
} ifelse
/AdobeSansMM 
{ 
556 0 24 -19 541 703 
	{ 
	541 628 m 
	510 669 442 703 354 703 c 
	201 703 117 607 101 444 c 
	50 444 l 
	25 372 l 
	97 372 l 
	97 301 l 
	49 301 l 
	24 229 l 
	103 229 l 
	124 67 209 -19 350 -19 c 
	435 -19 501 25 509 32 c 
	509 131 l 
	492 105 417 60 343 60 c 
	267 60 204 127 197 229 c 
	406 229 l 
	430 301 l 
	191 301 l 
	191 372 l 
	455 372 l 
	479 444 l 
	194 444 l 
	201 531 245 624 348 624 c 
	433 624 484 583 509 534 c 
	cp 
	556 0 m 
	}
ct_PSBuildGlyph
} def
/AdobeSerifMM 
{ 
500 0 10 -12 484 692 
	{ 
	347 298 m 
	171 298 l 
	170 310 170 322 170 335 c 
	170 362 l 
	362 362 l 
	374 403 l 
	172 403 l 
	184 580 244 642 308 642 c 
	380 642 434 574 457 457 c 
	481 462 l 
	474 691 l 
	449 691 l 
	433 670 429 657 410 657 c 
	394 657 360 692 299 692 c 
	204 692 94 604 73 403 c 
	22 403 l 
	10 362 l 
	70 362 l 
	69 352 69 341 69 330 c 
	69 319 69 308 70 298 c 
	22 298 l 
	10 257 l 
	73 257 l 
	97 57 216 -12 295 -12 c 
	364 -12 427 25 484 123 c 
	458 142 l 
	425 101 384 37 316 37 c 
	256 37 189 84 173 257 c 
	335 257 l 
	cp 
	500 0 m 
	} 
ct_PSBuildGlyph 
} def 
end		
%%EndFile
setglobal
Adobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end
%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
3 3010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get exec
Adobe_AGM_Image/ds gx
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
%ADOBeginClientInjection: PageSetup Start "AI11EPS"
%AI12_RMC_Transparency: Balance=75 RasterRes=300 GradRes=150 Text=0 Stroke=1 Clip=1 OP=0
%ADOEndClientInjection: PageSetup Start "AI11EPS"
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get exec
Adobe_AGM_Image/ps gx
%ADOBeginClientInjection: PageSetup End "AI11EPS"
/currentdistillerparams where{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse{ userdict /AI11_PDFMark5 /cleartomark load putuserdict /AI11_ReadMetadata_PDFMark5 {flushfile cleartomark } bind put}{ userdict /AI11_PDFMark5 /pdfmark load putuserdict /AI11_ReadMetadata_PDFMark5 {/PUT pdfmark} bind put } ifelse[/NamespacePush AI11_PDFMark5[/_objdef {ai_metadata_stream_123} /type /stream /OBJ AI11_PDFMark5[{ai_metadata_stream_123}currentfile 0 (%  &&end XMP packet marker&&)/SubFileDecode filter AI11_ReadMetadata_PDFMark5<?xpacket begin="﻿" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 5.3-c011 66.145661, 2012/02/06-14:56:27        ">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:xmp="http://ns.adobe.com/xap/1.0/"
            xmlns:xmpGImg="http://ns.adobe.com/xap/1.0/g/img/">
         <xmp:CreatorTool>Adobe Illustrator CS6 (Windows)</xmp:CreatorTool>
         <xmp:CreateDate>2016-08-05T06:12:47+02:00</xmp:CreateDate>
         <xmp:Thumbnails>
            <rdf:Alt>
               <rdf:li rdf:parseType="Resource">
                  <xmpGImg:width>256</xmpGImg:width>
                  <xmpGImg:height>256</xmpGImg:height>
                  <xmpGImg:format>JPEG</xmpGImg:format>
                  <xmpGImg:image>/9j/4AAQSkZJRgABAgEASABIAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABAASAAAAAEA&#xA;AQBIAAAAAQAB/+4ADkFkb2JlAGTAAAAAAf/bAIQABgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoK&#xA;DBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8fHx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8f&#xA;Hx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f/8AAEQgBAAEAAwER&#xA;AAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQFAwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAA&#xA;AQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMBAgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPB&#xA;UtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdUZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE&#xA;1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZ&#xA;qbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUEBQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEy&#xA;obHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PSNeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp&#xA;0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo&#xA;+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/aAAwDAQACEQMRAD8Am8MMMkKSSIryOoZ3YAsW&#xA;IqSSepOddjxx4RsOT5jmzT45eo8z1Yfq0ssuoTJKxdYHaKFWNQiBiQq16CrHbNhocMOE7D6mnWaj&#xA;JcfUfpHX3ory+7etLb1P1d15vDX4C6GisV6EgMaH3warDDjjsOR6f1Wg6nJ4MvVL6o9T3SRevu1p&#xA;o91Pan0JgnASx/AwVyEYBhQiqsRmLlxRrkOY+8J7P1GTxR6pcpdf6Jeccm8Tl/hR7g7Hxp95+aWX&#xA;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&#xA;m//Z</xmpGImg:image>
               </rdf:li>
            </rdf:Alt>
         </xmp:Thumbnails>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xmpTPg="http://ns.adobe.com/xap/1.0/t/pg/"
            xmlns:stDim="http://ns.adobe.com/xap/1.0/sType/Dimensions#"
            xmlns:xmpG="http://ns.adobe.com/xap/1.0/g/">
         <xmpTPg:MaxPageSize rdf:parseType="Resource">
            <stDim:w>1000.000000</stDim:w>
            <stDim:h>1000.000000</stDim:h>
            <stDim:unit>Points</stDim:unit>
         </xmpTPg:MaxPageSize>
         <xmpTPg:NPages>1</xmpTPg:NPages>
         <xmpTPg:HasVisibleTransparency>False</xmpTPg:HasVisibleTransparency>
         <xmpTPg:HasVisibleOverprint>False</xmpTPg:HasVisibleOverprint>
         <xmpTPg:PlateNames>
            <rdf:Seq>
               <rdf:li>Cyan</rdf:li>
               <rdf:li>Magenta</rdf:li>
               <rdf:li>Yellow</rdf:li>
               <rdf:li>Black</rdf:li>
            </rdf:Seq>
         </xmpTPg:PlateNames>
         <xmpTPg:SwatchGroups>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Default Swatch Group</xmpG:groupName>
                  <xmpG:groupType>0</xmpG:groupType>
               </rdf:li>
            </rdf:Seq>
         </xmpTPg:SwatchGroups>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:dc="http://purl.org/dc/elements/1.1/">
         <dc:format>application/postscript</dc:format>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?>%  &&end XMP packet marker&&[{ai_metadata_stream_123}<</Type /Metadata /Subtype /XML>>/PUT AI11_PDFMark5[/Document1 dict begin /Metadata {ai_metadata_stream_123} defcurrentdict end /BDC AI11_PDFMark5
%ADOEndClientInjection: PageSetup End "AI11EPS"
%%EndPageSetup
1 -1 scale 0 -1000 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 1000 li
1000 1000 li
1000 0 li
cp
clp
0 0 mo
1000 0 li
1000 1000 li
0 1000 li
0 0 li
cp
false sop
/0 
[/DeviceRGB] /CSA add_res
1 1 1 rgb
f
gsave
0 0 mo
1000 0 li
1000 1000 li
0 1000 li
0 0 li
cp
clp
9 1 mo
31 1 li
36.3335 1 39 3.6665 39 9 cv
39 31 li
39 36.3335 36.3335 39 31 39 cv
9 39 li
3.6665 39 1 36.3335 1 31 cv
1 9 li
1 3.6665 3.6665 1 9 1 cv
cp
.266667 .839216 1 rgb
f
.01 lw
0 lc
0 lj
4 ml
[] 0 dsh
true sadj
9 1 mo
31 1 li
36.3335 1 39 3.6665 39 9 cv
39 31 li
39 36.3335 36.3335 39 31 39 cv
9 39 li
3.6665 39 1 36.3335 1 31 cv
1 9 li
1 3.6665 3.6665 1 9 1 cv
cp
0 0 0 rgb
@
49 1 mo
71 1 li
76.3335 1 79 3.6665 79 9 cv
79 31 li
79 36.3335 76.3335 39 71 39 cv
49 39 li
43.6665 39 41 36.3335 41 31 cv
41 9 li
41 3.6665 43.6665 1 49 1 cv
cp
0 .647059 .968627 rgb
f
49 1 mo
71 1 li
76.3335 1 79 3.6665 79 9 cv
79 31 li
79 36.3335 76.3335 39 71 39 cv
49 39 li
43.6665 39 41 36.3335 41 31 cv
41 9 li
41 3.6665 43.6665 1 49 1 cv
cp
0 0 0 rgb
@
89 1 mo
111 1 li
116.333 1 119 3.6665 119 9 cv
119 31 li
119 36.3335 116.333 39 111 39 cv
89 39 li
83.6665 39 81 36.3335 81 31 cv
81 9 li
81 3.6665 83.6665 1 89 1 cv
cp
.121569 .839216 1 rgb
f
89 1 mo
111 1 li
116.333 1 119 3.6665 119 9 cv
119 31 li
119 36.3335 116.333 39 111 39 cv
89 39 li
83.6665 39 81 36.3335 81 31 cv
81 9 li
81 3.6665 83.6665 1 89 1 cv
cp
0 0 0 rgb
@
129 1 mo
151 1 li
156.333 1 159 3.6665 159 9 cv
159 31 li
159 36.3335 156.333 39 151 39 cv
129 39 li
123.667 39 121 36.3335 121 31 cv
121 9 li
121 3.6665 123.667 1 129 1 cv
cp
0 .490196 .745098 rgb
f
129 1 mo
151 1 li
156.333 1 159 3.6665 159 9 cv
159 31 li
159 36.3335 156.333 39 151 39 cv
129 39 li
123.667 39 121 36.3335 121 31 cv
121 9 li
121 3.6665 123.667 1 129 1 cv
cp
0 0 0 rgb
@
169 1 mo
191 1 li
196.333 1 199 3.6665 199 9 cv
199 31 li
199 36.3335 196.333 39 191 39 cv
169 39 li
163.667 39 161 36.3335 161 31 cv
161 9 li
161 3.6665 163.667 1 169 1 cv
cp
0 .384314 .639216 rgb
f
169 1 mo
191 1 li
196.333 1 199 3.6665 199 9 cv
199 31 li
199 36.3335 196.333 39 191 39 cv
169 39 li
163.667 39 161 36.3335 161 31 cv
161 9 li
161 3.6665 163.667 1 169 1 cv
cp
0 0 0 rgb
@
209 1 mo
231 1 li
236.333 1 239 3.6665 239 9 cv
239 31 li
239 36.3335 236.333 39 231 39 cv
209 39 li
203.667 39 201 36.3335 201 31 cv
201 9 li
201 3.6665 203.667 1 209 1 cv
cp
0 .490196 .796078 rgb
f
209 1 mo
231 1 li
236.333 1 239 3.6665 239 9 cv
239 31 li
239 36.3335 236.333 39 231 39 cv
209 39 li
203.667 39 201 36.3335 201 31 cv
201 9 li
201 3.6665 203.667 1 209 1 cv
cp
0 0 0 rgb
@
249 1 mo
271 1 li
276.333 1 279 3.6665 279 9 cv
279 31 li
279 36.3335 276.333 39 271 39 cv
249 39 li
243.667 39 241 36.3335 241 31 cv
241 9 li
241 3.6665 243.667 1 249 1 cv
cp
.164706 .87451 1 rgb
f
249 1 mo
271 1 li
276.333 1 279 3.6665 279 9 cv
279 31 li
279 36.3335 276.333 39 271 39 cv
249 39 li
243.667 39 241 36.3335 241 31 cv
241 9 li
241 3.6665 243.667 1 249 1 cv
cp
0 0 0 rgb
@
289 1 mo
311 1 li
316.333 1 319 3.6665 319 9 cv
319 31 li
319 36.3335 316.333 39 311 39 cv
289 39 li
283.667 39 281 36.3335 281 31 cv
281 9 li
281 3.6665 283.667 1 289 1 cv
cp
.192157 .776471 .894118 rgb
f
289 1 mo
311 1 li
316.333 1 319 3.6665 319 9 cv
319 31 li
319 36.3335 316.333 39 311 39 cv
289 39 li
283.667 39 281 36.3335 281 31 cv
281 9 li
281 3.6665 283.667 1 289 1 cv
cp
0 0 0 rgb
@
329 1 mo
351 1 li
356.333 1 359 3.6665 359 9 cv
359 31 li
359 36.3335 356.333 39 351 39 cv
329 39 li
323.667 39 321 36.3335 321 31 cv
321 9 li
321 3.6665 323.667 1 329 1 cv
cp
.0705882 .631373 .905882 rgb
f
329 1 mo
351 1 li
356.333 1 359 3.6665 359 9 cv
359 31 li
359 36.3335 356.333 39 351 39 cv
329 39 li
323.667 39 321 36.3335 321 31 cv
321 9 li
321 3.6665 323.667 1 329 1 cv
cp
0 0 0 rgb
@
369 1 mo
391 1 li
396.333 1 399 3.6665 399 9 cv
399 31 li
399 36.3335 396.333 39 391 39 cv
369 39 li
363.667 39 361 36.3335 361 31 cv
361 9 li
361 3.6665 363.667 1 369 1 cv
cp
.282353 .941176 1 rgb
f
369 1 mo
391 1 li
396.333 1 399 3.6665 399 9 cv
399 31 li
399 36.3335 396.333 39 391 39 cv
369 39 li
363.667 39 361 36.3335 361 31 cv
361 9 li
361 3.6665 363.667 1 369 1 cv
cp
0 0 0 rgb
@
409 1 mo
431 1 li
436.333 1 439 3.6665 439 9 cv
439 31 li
439 36.3335 436.333 39 431 39 cv
409 39 li
403.667 39 401 36.3335 401 31 cv
401 9 li
401 3.6665 403.667 1 409 1 cv
cp
0 .333333 .572549 rgb
f
409 1 mo
431 1 li
436.333 1 439 3.6665 439 9 cv
439 31 li
439 36.3335 436.333 39 431 39 cv
409 39 li
403.667 39 401 36.3335 401 31 cv
401 9 li
401 3.6665 403.667 1 409 1 cv
cp
0 0 0 rgb
@
449 1 mo
471 1 li
476.333 1 479 3.6665 479 9 cv
479 31 li
479 36.3335 476.333 39 471 39 cv
449 39 li
443.667 39 441 36.3335 441 31 cv
441 9 li
441 3.6665 443.667 1 449 1 cv
cp
.152941 .760784 1 rgb
f
449 1 mo
471 1 li
476.333 1 479 3.6665 479 9 cv
479 31 li
479 36.3335 476.333 39 471 39 cv
449 39 li
443.667 39 441 36.3335 441 31 cv
441 9 li
441 3.6665 443.667 1 449 1 cv
cp
0 0 0 rgb
@
489 1 mo
511 1 li
516.333 1 519 3.6665 519 9 cv
519 31 li
519 36.3335 516.333 39 511 39 cv
489 39 li
483.667 39 481 36.3335 481 31 cv
481 9 li
481 3.6665 483.667 1 489 1 cv
cp
0 .482353 .709804 rgb
f
489 1 mo
511 1 li
516.333 1 519 3.6665 519 9 cv
519 31 li
519 36.3335 516.333 39 511 39 cv
489 39 li
483.667 39 481 36.3335 481 31 cv
481 9 li
481 3.6665 483.667 1 489 1 cv
cp
0 0 0 rgb
@
529 1 mo
551 1 li
556.333 1 559 3.6665 559 9 cv
559 31 li
559 36.3335 556.333 39 551 39 cv
529 39 li
523.667 39 521 36.3335 521 31 cv
521 9 li
521 3.6665 523.667 1 529 1 cv
cp
0 .364706 .611765 rgb
f
529 1 mo
551 1 li
556.333 1 559 3.6665 559 9 cv
559 31 li
559 36.3335 556.333 39 551 39 cv
529 39 li
523.667 39 521 36.3335 521 31 cv
521 9 li
521 3.6665 523.667 1 529 1 cv
cp
0 0 0 rgb
@
569 1 mo
591 1 li
596.333 1 599 3.6665 599 9 cv
599 31 li
599 36.3335 596.333 39 591 39 cv
569 39 li
563.667 39 561 36.3335 561 31 cv
561 9 li
561 3.6665 563.667 1 569 1 cv
cp
.0823529 .85098 1 rgb
f
569 1 mo
591 1 li
596.333 1 599 3.6665 599 9 cv
599 31 li
599 36.3335 596.333 39 591 39 cv
569 39 li
563.667 39 561 36.3335 561 31 cv
561 9 li
561 3.6665 563.667 1 569 1 cv
cp
0 0 0 rgb
@
609 1 mo
631 1 li
636.333 1 639 3.6665 639 9 cv
639 31 li
639 36.3335 636.333 39 631 39 cv
609 39 li
603.667 39 601 36.3335 601 31 cv
601 9 li
601 3.6665 603.667 1 609 1 cv
cp
0 .627451 .972549 rgb
f
609 1 mo
631 1 li
636.333 1 639 3.6665 639 9 cv
639 31 li
639 36.3335 636.333 39 631 39 cv
609 39 li
603.667 39 601 36.3335 601 31 cv
601 9 li
601 3.6665 603.667 1 609 1 cv
cp
0 0 0 rgb
@
649 1 mo
671 1 li
676.333 1 679 3.6665 679 9 cv
679 31 li
679 36.3335 676.333 39 671 39 cv
649 39 li
643.667 39 641 36.3335 641 31 cv
641 9 li
641 3.6665 643.667 1 649 1 cv
cp
0 .486275 .603922 rgb
f
649 1 mo
671 1 li
676.333 1 679 3.6665 679 9 cv
679 31 li
679 36.3335 676.333 39 671 39 cv
649 39 li
643.667 39 641 36.3335 641 31 cv
641 9 li
641 3.6665 643.667 1 649 1 cv
cp
0 0 0 rgb
@
689 1 mo
711 1 li
716.333 1 719 3.6665 719 9 cv
719 31 li
719 36.3335 716.333 39 711 39 cv
689 39 li
683.667 39 681 36.3335 681 31 cv
681 9 li
681 3.6665 683.667 1 689 1 cv
cp
.372549 .94902 1 rgb
f
689 1 mo
711 1 li
716.333 1 719 3.6665 719 9 cv
719 31 li
719 36.3335 716.333 39 711 39 cv
689 39 li
683.667 39 681 36.3335 681 31 cv
681 9 li
681 3.6665 683.667 1 689 1 cv
cp
0 0 0 rgb
@
729 1 mo
751 1 li
756.333 1 759 3.6665 759 9 cv
759 31 li
759 36.3335 756.333 39 751 39 cv
729 39 li
723.667 39 721 36.3335 721 31 cv
721 9 li
721 3.6665 723.667 1 729 1 cv
cp
0 .615686 .807843 rgb
f
729 1 mo
751 1 li
756.333 1 759 3.6665 759 9 cv
759 31 li
759 36.3335 756.333 39 751 39 cv
729 39 li
723.667 39 721 36.3335 721 31 cv
721 9 li
721 3.6665 723.667 1 729 1 cv
cp
0 0 0 rgb
@
769 1 mo
791 1 li
796.333 1 799 3.6665 799 9 cv
799 31 li
799 36.3335 796.333 39 791 39 cv
769 39 li
763.667 39 761 36.3335 761 31 cv
761 9 li
761 3.6665 763.667 1 769 1 cv
cp
0 .372549 .556863 rgb
f
769 1 mo
791 1 li
796.333 1 799 3.6665 799 9 cv
799 31 li
799 36.3335 796.333 39 791 39 cv
769 39 li
763.667 39 761 36.3335 761 31 cv
761 9 li
761 3.6665 763.667 1 769 1 cv
cp
0 0 0 rgb
@
809 1 mo
831 1 li
836.333 1 839 3.6665 839 9 cv
839 31 li
839 36.3335 836.333 39 831 39 cv
809 39 li
803.667 39 801 36.3335 801 31 cv
801 9 li
801 3.6665 803.667 1 809 1 cv
cp
0 .466667 .760784 rgb
f
809 1 mo
831 1 li
836.333 1 839 3.6665 839 9 cv
839 31 li
839 36.3335 836.333 39 831 39 cv
809 39 li
803.667 39 801 36.3335 801 31 cv
801 9 li
801 3.6665 803.667 1 809 1 cv
cp
0 0 0 rgb
@
849 1 mo
871 1 li
876.333 1 879 3.6665 879 9 cv
879 31 li
879 36.3335 876.333 39 871 39 cv
849 39 li
843.667 39 841 36.3335 841 31 cv
841 9 li
841 3.6665 843.667 1 849 1 cv
cp
.117647 .678431 .956863 rgb
f
849 1 mo
871 1 li
876.333 1 879 3.6665 879 9 cv
879 31 li
879 36.3335 876.333 39 871 39 cv
849 39 li
843.667 39 841 36.3335 841 31 cv
841 9 li
841 3.6665 843.667 1 849 1 cv
cp
0 0 0 rgb
@
889 1 mo
911 1 li
916.333 1 919 3.6665 919 9 cv
919 31 li
919 36.3335 916.333 39 911 39 cv
889 39 li
883.667 39 881 36.3335 881 31 cv
881 9 li
881 3.6665 883.667 1 889 1 cv
cp
0 .713726 .960784 rgb
f
889 1 mo
911 1 li
916.333 1 919 3.6665 919 9 cv
919 31 li
919 36.3335 916.333 39 911 39 cv
889 39 li
883.667 39 881 36.3335 881 31 cv
881 9 li
881 3.6665 883.667 1 889 1 cv
cp
0 0 0 rgb
@
929 1 mo
951 1 li
956.333 1 959 3.6665 959 9 cv
959 31 li
959 36.3335 956.333 39 951 39 cv
929 39 li
923.667 39 921 36.3335 921 31 cv
921 9 li
921 3.6665 923.667 1 929 1 cv
cp
0 .545098 .682353 rgb
f
929 1 mo
951 1 li
956.333 1 959 3.6665 959 9 cv
959 31 li
959 36.3335 956.333 39 951 39 cv
929 39 li
923.667 39 921 36.3335 921 31 cv
921 9 li
921 3.6665 923.667 1 929 1 cv
cp
0 0 0 rgb
@
969 1 mo
991 1 li
996.333 1 999 3.6665 999 9 cv
999 31 li
999 36.3335 996.333 39 991 39 cv
969 39 li
963.667 39 961 36.3335 961 31 cv
961 9 li
961 3.6665 963.667 1 969 1 cv
cp
.14902 .776471 1 rgb
f
969 1 mo
991 1 li
996.333 1 999 3.6665 999 9 cv
999 31 li
999 36.3335 996.333 39 991 39 cv
969 39 li
963.667 39 961 36.3335 961 31 cv
961 9 li
961 3.6665 963.667 1 969 1 cv
cp
0 0 0 rgb
@
9 41 mo
31 41 li
36.3335 41 39 43.6665 39 49 cv
39 71 li
39 76.3335 36.3335 79 31 79 cv
9 79 li
3.6665 79 1 76.3335 1 71 cv
1 49 li
1 43.6665 3.6665 41 9 41 cv
cp
.266667 1 1 rgb
f
9 41 mo
31 41 li
36.3335 41 39 43.6665 39 49 cv
39 71 li
39 76.3335 36.3335 79 31 79 cv
9 79 li
3.6665 79 1 76.3335 1 71 cv
1 49 li
1 43.6665 3.6665 41 9 41 cv
cp
0 0 0 rgb
@
49 41 mo
71 41 li
76.3335 41 79 43.6665 79 49 cv
79 71 li
79 76.3335 76.3335 79 71 79 cv
49 79 li
43.6665 79 41 76.3335 41 71 cv
41 49 li
41 43.6665 43.6665 41 49 41 cv
cp
.12549 .788235 1 rgb
f
49 41 mo
71 41 li
76.3335 41 79 43.6665 79 49 cv
79 71 li
79 76.3335 76.3335 79 71 79 cv
49 79 li
43.6665 79 41 76.3335 41 71 cv
41 49 li
41 43.6665 43.6665 41 49 41 cv
cp
0 0 0 rgb
@
89 41 mo
111 41 li
116.333 41 119 43.6665 119 49 cv
119 71 li
119 76.3335 116.333 79 111 79 cv
89 79 li
83.6665 79 81 76.3335 81 71 cv
81 49 li
81 43.6665 83.6665 41 89 41 cv
cp
0 .419608 .792157 rgb
f
89 41 mo
111 41 li
116.333 41 119 43.6665 119 49 cv
119 71 li
119 76.3335 116.333 79 111 79 cv
89 79 li
83.6665 79 81 76.3335 81 71 cv
81 49 li
81 43.6665 83.6665 41 89 41 cv
cp
0 0 0 rgb
@
129 41 mo
151 41 li
156.333 41 159 43.6665 159 49 cv
159 71 li
159 76.3335 156.333 79 151 79 cv
129 79 li
123.667 79 121 76.3335 121 71 cv
121 49 li
121 43.6665 123.667 41 129 41 cv
cp
0 .517647 .788235 rgb
f
129 41 mo
151 41 li
156.333 41 159 43.6665 159 49 cv
159 71 li
159 76.3335 156.333 79 151 79 cv
129 79 li
123.667 79 121 76.3335 121 71 cv
121 49 li
121 43.6665 123.667 41 129 41 cv
cp
0 0 0 rgb
@
169 41 mo
191 41 li
196.333 41 199 43.6665 199 49 cv
199 71 li
199 76.3335 196.333 79 191 79 cv
169 79 li
163.667 79 161 76.3335 161 71 cv
161 49 li
161 43.6665 163.667 41 169 41 cv
cp
0 .329412 .54902 rgb
f
169 41 mo
191 41 li
196.333 41 199 43.6665 199 49 cv
199 71 li
199 76.3335 196.333 79 191 79 cv
169 79 li
163.667 79 161 76.3335 161 71 cv
161 49 li
161 43.6665 163.667 41 169 41 cv
cp
0 0 0 rgb
@
209 41 mo
231 41 li
236.333 41 239 43.6665 239 49 cv
239 71 li
239 76.3335 236.333 79 231 79 cv
209 79 li
203.667 79 201 76.3335 201 71 cv
201 49 li
201 43.6665 203.667 41 209 41 cv
cp
0 .462745 .619608 rgb
f
209 41 mo
231 41 li
236.333 41 239 43.6665 239 49 cv
239 71 li
239 76.3335 236.333 79 231 79 cv
209 79 li
203.667 79 201 76.3335 201 71 cv
201 49 li
201 43.6665 203.667 41 209 41 cv
cp
0 0 0 rgb
@
249 41 mo
271 41 li
276.333 41 279 43.6665 279 49 cv
279 71 li
279 76.3335 276.333 79 271 79 cv
249 79 li
243.667 79 241 76.3335 241 71 cv
241 49 li
241 43.6665 243.667 41 249 41 cv
cp
.376471 1 1 rgb
f
249 41 mo
271 41 li
276.333 41 279 43.6665 279 49 cv
279 71 li
279 76.3335 276.333 79 271 79 cv
249 79 li
243.667 79 241 76.3335 241 71 cv
241 49 li
241 43.6665 243.667 41 249 41 cv
cp
0 0 0 rgb
@
289 41 mo
311 41 li
316.333 41 319 43.6665 319 49 cv
319 71 li
319 76.3335 316.333 79 311 79 cv
289 79 li
283.667 79 281 76.3335 281 71 cv
281 49 li
281 43.6665 283.667 41 289 41 cv
cp
0 .407843 .654902 rgb
f
289 41 mo
311 41 li
316.333 41 319 43.6665 319 49 cv
319 71 li
319 76.3335 316.333 79 311 79 cv
289 79 li
283.667 79 281 76.3335 281 71 cv
281 49 li
281 43.6665 283.667 41 289 41 cv
cp
0 0 0 rgb
@
329 41 mo
351 41 li
356.333 41 359 43.6665 359 49 cv
359 71 li
359 76.3335 356.333 79 351 79 cv
329 79 li
323.667 79 321 76.3335 321 71 cv
321 49 li
321 43.6665 323.667 41 329 41 cv
cp
.309804 .972549 1 rgb
f
329 41 mo
351 41 li
356.333 41 359 43.6665 359 49 cv
359 71 li
359 76.3335 356.333 79 351 79 cv
329 79 li
323.667 79 321 76.3335 321 71 cv
321 49 li
321 43.6665 323.667 41 329 41 cv
cp
0 0 0 rgb
@
369 41 mo
391 41 li
396.333 41 399 43.6665 399 49 cv
399 71 li
399 76.3335 396.333 79 391 79 cv
369 79 li
363.667 79 361 76.3335 361 71 cv
361 49 li
361 43.6665 363.667 41 369 41 cv
cp
.258824 .843137 1 rgb
f
369 41 mo
391 41 li
396.333 41 399 43.6665 399 49 cv
399 71 li
399 76.3335 396.333 79 391 79 cv
369 79 li
363.667 79 361 76.3335 361 71 cv
361 49 li
361 43.6665 363.667 41 369 41 cv
cp
0 0 0 rgb
@
409 41 mo
431 41 li
436.333 41 439 43.6665 439 49 cv
439 71 li
439 76.3335 436.333 79 431 79 cv
409 79 li
403.667 79 401 76.3335 401 71 cv
401 49 li
401 43.6665 403.667 41 409 41 cv
cp
0 .529412 .819608 rgb
f
409 41 mo
431 41 li
436.333 41 439 43.6665 439 49 cv
439 71 li
439 76.3335 436.333 79 431 79 cv
409 79 li
403.667 79 401 76.3335 401 71 cv
401 49 li
401 43.6665 403.667 41 409 41 cv
cp
0 0 0 rgb
@
449 41 mo
471 41 li
476.333 41 479 43.6665 479 49 cv
479 71 li
479 76.3335 476.333 79 471 79 cv
449 79 li
443.667 79 441 76.3335 441 71 cv
441 49 li
441 43.6665 443.667 41 449 41 cv
cp
0 .454902 .611765 rgb
f
449 41 mo
471 41 li
476.333 41 479 43.6665 479 49 cv
479 71 li
479 76.3335 476.333 79 471 79 cv
449 79 li
443.667 79 441 76.3335 441 71 cv
441 49 li
441 43.6665 443.667 41 449 41 cv
cp
0 0 0 rgb
@
489 41 mo
511 41 li
516.333 41 519 43.6665 519 49 cv
519 71 li
519 76.3335 516.333 79 511 79 cv
489 79 li
483.667 79 481 76.3335 481 71 cv
481 49 li
481 43.6665 483.667 41 489 41 cv
cp
0 .592157 .847059 rgb
f
489 41 mo
511 41 li
516.333 41 519 43.6665 519 49 cv
519 71 li
519 76.3335 516.333 79 511 79 cv
489 79 li
483.667 79 481 76.3335 481 71 cv
481 49 li
481 43.6665 483.667 41 489 41 cv
cp
0 0 0 rgb
@
529 41 mo
551 41 li
556.333 41 559 43.6665 559 49 cv
559 71 li
559 76.3335 556.333 79 551 79 cv
529 79 li
523.667 79 521 76.3335 521 71 cv
521 49 li
521 43.6665 523.667 41 529 41 cv
cp
.247059 .827451 .980392 rgb
f
529 41 mo
551 41 li
556.333 41 559 43.6665 559 49 cv
559 71 li
559 76.3335 556.333 79 551 79 cv
529 79 li
523.667 79 521 76.3335 521 71 cv
521 49 li
521 43.6665 523.667 41 529 41 cv
cp
0 0 0 rgb
@
569 41 mo
591 41 li
596.333 41 599 43.6665 599 49 cv
599 71 li
599 76.3335 596.333 79 591 79 cv
569 79 li
563.667 79 561 76.3335 561 71 cv
561 49 li
561 43.6665 563.667 41 569 41 cv
cp
.0862745 .588235 .917647 rgb
f
569 41 mo
591 41 li
596.333 41 599 43.6665 599 49 cv
599 71 li
599 76.3335 596.333 79 591 79 cv
569 79 li
563.667 79 561 76.3335 561 71 cv
561 49 li
561 43.6665 563.667 41 569 41 cv
cp
0 0 0 rgb
@
609 41 mo
631 41 li
636.333 41 639 43.6665 639 49 cv
639 71 li
639 76.3335 636.333 79 631 79 cv
609 79 li
603.667 79 601 76.3335 601 71 cv
601 49 li
601 43.6665 603.667 41 609 41 cv
cp
0 .65098 .827451 rgb
f
609 41 mo
631 41 li
636.333 41 639 43.6665 639 49 cv
639 71 li
639 76.3335 636.333 79 631 79 cv
609 79 li
603.667 79 601 76.3335 601 71 cv
601 49 li
601 43.6665 603.667 41 609 41 cv
cp
0 0 0 rgb
@
649 41 mo
671 41 li
676.333 41 679 43.6665 679 49 cv
679 71 li
679 76.3335 676.333 79 671 79 cv
649 79 li
643.667 79 641 76.3335 641 71 cv
641 49 li
641 43.6665 643.667 41 649 41 cv
cp
.152941 .639216 .984314 rgb
f
649 41 mo
671 41 li
676.333 41 679 43.6665 679 49 cv
679 71 li
679 76.3335 676.333 79 671 79 cv
649 79 li
643.667 79 641 76.3335 641 71 cv
641 49 li
641 43.6665 643.667 41 649 41 cv
cp
0 0 0 rgb
@
689 41 mo
711 41 li
716.333 41 719 43.6665 719 49 cv
719 71 li
719 76.3335 716.333 79 711 79 cv
689 79 li
683.667 79 681 76.3335 681 71 cv
681 49 li
681 43.6665 683.667 41 689 41 cv
cp
.192157 .964706 1 rgb
f
689 41 mo
711 41 li
716.333 41 719 43.6665 719 49 cv
719 71 li
719 76.3335 716.333 79 711 79 cv
689 79 li
683.667 79 681 76.3335 681 71 cv
681 49 li
681 43.6665 683.667 41 689 41 cv
cp
0 0 0 rgb
@
729 41 mo
751 41 li
756.333 41 759 43.6665 759 49 cv
759 71 li
759 76.3335 756.333 79 751 79 cv
729 79 li
723.667 79 721 76.3335 721 71 cv
721 49 li
721 43.6665 723.667 41 729 41 cv
cp
0 .52549 .827451 rgb
f
729 41 mo
751 41 li
756.333 41 759 43.6665 759 49 cv
759 71 li
759 76.3335 756.333 79 751 79 cv
729 79 li
723.667 79 721 76.3335 721 71 cv
721 49 li
721 43.6665 723.667 41 729 41 cv
cp
0 0 0 rgb
@
769 41 mo
791 41 li
796.333 41 799 43.6665 799 49 cv
799 71 li
799 76.3335 796.333 79 791 79 cv
769 79 li
763.667 79 761 76.3335 761 71 cv
761 49 li
761 43.6665 763.667 41 769 41 cv
cp
.188235 .823529 1 rgb
f
769 41 mo
791 41 li
796.333 41 799 43.6665 799 49 cv
799 71 li
799 76.3335 796.333 79 791 79 cv
769 79 li
763.667 79 761 76.3335 761 71 cv
761 49 li
761 43.6665 763.667 41 769 41 cv
cp
0 0 0 rgb
@
809 41 mo
831 41 li
836.333 41 839 43.6665 839 49 cv
839 71 li
839 76.3335 836.333 79 831 79 cv
809 79 li
803.667 79 801 76.3335 801 71 cv
801 49 li
801 43.6665 803.667 41 809 41 cv
cp
0 .741176 .937255 rgb
f
809 41 mo
831 41 li
836.333 41 839 43.6665 839 49 cv
839 71 li
839 76.3335 836.333 79 831 79 cv
809 79 li
803.667 79 801 76.3335 801 71 cv
801 49 li
801 43.6665 803.667 41 809 41 cv
cp
0 0 0 rgb
@
849 41 mo
871 41 li
876.333 41 879 43.6665 879 49 cv
879 71 li
879 76.3335 876.333 79 871 79 cv
849 79 li
843.667 79 841 76.3335 841 71 cv
841 49 li
841 43.6665 843.667 41 849 41 cv
cp
0 .352941 .596078 rgb
f
849 41 mo
871 41 li
876.333 41 879 43.6665 879 49 cv
879 71 li
879 76.3335 876.333 79 871 79 cv
849 79 li
843.667 79 841 76.3335 841 71 cv
841 49 li
841 43.6665 843.667 41 849 41 cv
cp
0 0 0 rgb
@
889 41 mo
911 41 li
916.333 41 919 43.6665 919 49 cv
919 71 li
919 76.3335 916.333 79 911 79 cv
889 79 li
883.667 79 881 76.3335 881 71 cv
881 49 li
881 43.6665 883.667 41 889 41 cv
cp
.32549 .890196 1 rgb
f
889 41 mo
911 41 li
916.333 41 919 43.6665 919 49 cv
919 71 li
919 76.3335 916.333 79 911 79 cv
889 79 li
883.667 79 881 76.3335 881 71 cv
881 49 li
881 43.6665 883.667 41 889 41 cv
cp
0 0 0 rgb
@
929 41 mo
951 41 li
956.333 41 959 43.6665 959 49 cv
959 71 li
959 76.3335 956.333 79 951 79 cv
929 79 li
923.667 79 921 76.3335 921 71 cv
921 49 li
921 43.6665 923.667 41 929 41 cv
cp
.00392157 .603922 .980392 rgb
f
929 41 mo
951 41 li
956.333 41 959 43.6665 959 49 cv
959 71 li
959 76.3335 956.333 79 951 79 cv
929 79 li
923.667 79 921 76.3335 921 71 cv
921 49 li
921 43.6665 923.667 41 929 41 cv
cp
0 0 0 rgb
@
969 41 mo
991 41 li
996.333 41 999 43.6665 999 49 cv
999 71 li
999 76.3335 996.333 79 991 79 cv
969 79 li
963.667 79 961 76.3335 961 71 cv
961 49 li
961 43.6665 963.667 41 969 41 cv
cp
0 .368627 .701961 rgb
f
969 41 mo
991 41 li
996.333 41 999 43.6665 999 49 cv
999 71 li
999 76.3335 996.333 79 991 79 cv
969 79 li
963.667 79 961 76.3335 961 71 cv
961 49 li
961 43.6665 963.667 41 969 41 cv
cp
0 0 0 rgb
@
9 81 mo
31 81 li
36.3335 81 39 83.6665 39 89 cv
39 111 li
39 116.333 36.3335 119 31 119 cv
9 119 li
3.6665 119 1 116.333 1 111 cv
1 89 li
1 83.6665 3.6665 81 9 81 cv
cp
.101961 .8 .984314 rgb
f
9 81 mo
31 81 li
36.3335 81 39 83.6665 39 89 cv
39 111 li
39 116.333 36.3335 119 31 119 cv
9 119 li
3.6665 119 1 116.333 1 111 cv
1 89 li
1 83.6665 3.6665 81 9 81 cv
cp
0 0 0 rgb
@
49 81 mo
71 81 li
76.3335 81 79 83.6665 79 89 cv
79 111 li
79 116.333 76.3335 119 71 119 cv
49 119 li
43.6665 119 41 116.333 41 111 cv
41 89 li
41 83.6665 43.6665 81 49 81 cv
cp
0 .411765 .631373 rgb
f
49 81 mo
71 81 li
76.3335 81 79 83.6665 79 89 cv
79 111 li
79 116.333 76.3335 119 71 119 cv
49 119 li
43.6665 119 41 116.333 41 111 cv
41 89 li
41 83.6665 43.6665 81 49 81 cv
cp
0 0 0 rgb
@
89 81 mo
111 81 li
116.333 81 119 83.6665 119 89 cv
119 111 li
119 116.333 116.333 119 111 119 cv
89 119 li
83.6665 119 81 116.333 81 111 cv
81 89 li
81 83.6665 83.6665 81 89 81 cv
cp
0 .533333 .733333 rgb
f
89 81 mo
111 81 li
116.333 81 119 83.6665 119 89 cv
119 111 li
119 116.333 116.333 119 111 119 cv
89 119 li
83.6665 119 81 116.333 81 111 cv
81 89 li
81 83.6665 83.6665 81 89 81 cv
cp
0 0 0 rgb
@
129 81 mo
151 81 li
156.333 81 159 83.6665 159 89 cv
159 111 li
159 116.333 156.333 119 151 119 cv
129 119 li
123.667 119 121 116.333 121 111 cv
121 89 li
121 83.6665 123.667 81 129 81 cv
cp
.0392157 .780392 1 rgb
f
129 81 mo
151 81 li
156.333 81 159 83.6665 159 89 cv
159 111 li
159 116.333 156.333 119 151 119 cv
129 119 li
123.667 119 121 116.333 121 111 cv
121 89 li
121 83.6665 123.667 81 129 81 cv
cp
0 0 0 rgb
@
169 81 mo
191 81 li
196.333 81 199 83.6665 199 89 cv
199 111 li
199 116.333 196.333 119 191 119 cv
169 119 li
163.667 119 161 116.333 161 111 cv
161 89 li
161 83.6665 163.667 81 169 81 cv
cp
0 .670588 .909804 rgb
f
169 81 mo
191 81 li
196.333 81 199 83.6665 199 89 cv
199 111 li
199 116.333 196.333 119 191 119 cv
169 119 li
163.667 119 161 116.333 161 111 cv
161 89 li
161 83.6665 163.667 81 169 81 cv
cp
0 0 0 rgb
@
209 81 mo
231 81 li
236.333 81 239 83.6665 239 89 cv
239 111 li
239 116.333 236.333 119 231 119 cv
209 119 li
203.667 119 201 116.333 201 111 cv
201 89 li
201 83.6665 203.667 81 209 81 cv
cp
0 .356863 .705882 rgb
f
209 81 mo
231 81 li
236.333 81 239 83.6665 239 89 cv
239 111 li
239 116.333 236.333 119 231 119 cv
209 119 li
203.667 119 201 116.333 201 111 cv
201 89 li
201 83.6665 203.667 81 209 81 cv
cp
0 0 0 rgb
@
249 81 mo
271 81 li
276.333 81 279 83.6665 279 89 cv
279 111 li
279 116.333 276.333 119 271 119 cv
249 119 li
243.667 119 241 116.333 241 111 cv
241 89 li
241 83.6665 243.667 81 249 81 cv
cp
.0352941 .623529 .929412 rgb
f
249 81 mo
271 81 li
276.333 81 279 83.6665 279 89 cv
279 111 li
279 116.333 276.333 119 271 119 cv
249 119 li
243.667 119 241 116.333 241 111 cv
241 89 li
241 83.6665 243.667 81 249 81 cv
cp
0 0 0 rgb
@
289 81 mo
311 81 li
316.333 81 319 83.6665 319 89 cv
319 111 li
319 116.333 316.333 119 311 119 cv
289 119 li
283.667 119 281 116.333 281 111 cv
281 89 li
281 83.6665 283.667 81 289 81 cv
cp
.141176 .717647 .945098 rgb
f
289 81 mo
311 81 li
316.333 81 319 83.6665 319 89 cv
319 111 li
319 116.333 316.333 119 311 119 cv
289 119 li
283.667 119 281 116.333 281 111 cv
281 89 li
281 83.6665 283.667 81 289 81 cv
cp
0 0 0 rgb
@
329 81 mo
351 81 li
356.333 81 359 83.6665 359 89 cv
359 111 li
359 116.333 356.333 119 351 119 cv
329 119 li
323.667 119 321 116.333 321 111 cv
321 89 li
321 83.6665 323.667 81 329 81 cv
cp
0 .521569 .745098 rgb
f
329 81 mo
351 81 li
356.333 81 359 83.6665 359 89 cv
359 111 li
359 116.333 356.333 119 351 119 cv
329 119 li
323.667 119 321 116.333 321 111 cv
321 89 li
321 83.6665 323.667 81 329 81 cv
cp
0 0 0 rgb
@
369 81 mo
391 81 li
396.333 81 399 83.6665 399 89 cv
399 111 li
399 116.333 396.333 119 391 119 cv
369 119 li
363.667 119 361 116.333 361 111 cv
361 89 li
361 83.6665 363.667 81 369 81 cv
cp
.25098 .909804 1 rgb
f
369 81 mo
391 81 li
396.333 81 399 83.6665 399 89 cv
399 111 li
399 116.333 396.333 119 391 119 cv
369 119 li
363.667 119 361 116.333 361 111 cv
361 89 li
361 83.6665 363.667 81 369 81 cv
cp
0 0 0 rgb
@
409 81 mo
431 81 li
436.333 81 439 83.6665 439 89 cv
439 111 li
439 116.333 436.333 119 431 119 cv
409 119 li
403.667 119 401 116.333 401 111 cv
401 89 li
401 83.6665 403.667 81 409 81 cv
cp
.243137 .858824 1 rgb
f
409 81 mo
431 81 li
436.333 81 439 83.6665 439 89 cv
439 111 li
439 116.333 436.333 119 431 119 cv
409 119 li
403.667 119 401 116.333 401 111 cv
401 89 li
401 83.6665 403.667 81 409 81 cv
cp
0 0 0 rgb
@
449 81 mo
471 81 li
476.333 81 479 83.6665 479 89 cv
479 111 li
479 116.333 476.333 119 471 119 cv
449 119 li
443.667 119 441 116.333 441 111 cv
441 89 li
441 83.6665 443.667 81 449 81 cv
cp
.0980392 .705882 .87451 rgb
f
449 81 mo
471 81 li
476.333 81 479 83.6665 479 89 cv
479 111 li
479 116.333 476.333 119 471 119 cv
449 119 li
443.667 119 441 116.333 441 111 cv
441 89 li
441 83.6665 443.667 81 449 81 cv
cp
0 0 0 rgb
@
489 81 mo
511 81 li
516.333 81 519 83.6665 519 89 cv
519 111 li
519 116.333 516.333 119 511 119 cv
489 119 li
483.667 119 481 116.333 481 111 cv
481 89 li
481 83.6665 483.667 81 489 81 cv
cp
.0352941 .698039 1 rgb
f
489 81 mo
511 81 li
516.333 81 519 83.6665 519 89 cv
519 111 li
519 116.333 516.333 119 511 119 cv
489 119 li
483.667 119 481 116.333 481 111 cv
481 89 li
481 83.6665 483.667 81 489 81 cv
cp
0 0 0 rgb
@
529 81 mo
551 81 li
556.333 81 559 83.6665 559 89 cv
559 111 li
559 116.333 556.333 119 551 119 cv
529 119 li
523.667 119 521 116.333 521 111 cv
521 89 li
521 83.6665 523.667 81 529 81 cv
cp
0 .607843 .831373 rgb
f
529 81 mo
551 81 li
556.333 81 559 83.6665 559 89 cv
559 111 li
559 116.333 556.333 119 551 119 cv
529 119 li
523.667 119 521 116.333 521 111 cv
521 89 li
521 83.6665 523.667 81 529 81 cv
cp
0 0 0 rgb
@
569 81 mo
591 81 li
596.333 81 599 83.6665 599 89 cv
599 111 li
599 116.333 596.333 119 591 119 cv
569 119 li
563.667 119 561 116.333 561 111 cv
561 89 li
561 83.6665 563.667 81 569 81 cv
cp
.0352941 .52549 .85098 rgb
f
569 81 mo
591 81 li
596.333 81 599 83.6665 599 89 cv
599 111 li
599 116.333 596.333 119 591 119 cv
569 119 li
563.667 119 561 116.333 561 111 cv
561 89 li
561 83.6665 563.667 81 569 81 cv
cp
0 0 0 rgb
@
609 81 mo
631 81 li
636.333 81 639 83.6665 639 89 cv
639 111 li
639 116.333 636.333 119 631 119 cv
609 119 li
603.667 119 601 116.333 601 111 cv
601 89 li
601 83.6665 603.667 81 609 81 cv
cp
0 .396078 .615686 rgb
f
609 81 mo
631 81 li
636.333 81 639 83.6665 639 89 cv
639 111 li
639 116.333 636.333 119 631 119 cv
609 119 li
603.667 119 601 116.333 601 111 cv
601 89 li
601 83.6665 603.667 81 609 81 cv
cp
0 0 0 rgb
@
649 81 mo
671 81 li
676.333 81 679 83.6665 679 89 cv
679 111 li
679 116.333 676.333 119 671 119 cv
649 119 li
643.667 119 641 116.333 641 111 cv
641 89 li
641 83.6665 643.667 81 649 81 cv
cp
0 .301961 .482353 rgb
f
649 81 mo
671 81 li
676.333 81 679 83.6665 679 89 cv
679 111 li
679 116.333 676.333 119 671 119 cv
649 119 li
643.667 119 641 116.333 641 111 cv
641 89 li
641 83.6665 643.667 81 649 81 cv
cp
0 0 0 rgb
@
689 81 mo
711 81 li
716.333 81 719 83.6665 719 89 cv
719 111 li
719 116.333 716.333 119 711 119 cv
689 119 li
683.667 119 681 116.333 681 111 cv
681 89 li
681 83.6665 683.667 81 689 81 cv
cp
0 .564706 .894118 rgb
f
689 81 mo
711 81 li
716.333 81 719 83.6665 719 89 cv
719 111 li
719 116.333 716.333 119 711 119 cv
689 119 li
683.667 119 681 116.333 681 111 cv
681 89 li
681 83.6665 683.667 81 689 81 cv
cp
0 0 0 rgb
@
729 81 mo
751 81 li
756.333 81 759 83.6665 759 89 cv
759 111 li
759 116.333 756.333 119 751 119 cv
729 119 li
723.667 119 721 116.333 721 111 cv
721 89 li
721 83.6665 723.667 81 729 81 cv
cp
0 .345098 .580392 rgb
f
729 81 mo
751 81 li
756.333 81 759 83.6665 759 89 cv
759 111 li
759 116.333 756.333 119 751 119 cv
729 119 li
723.667 119 721 116.333 721 111 cv
721 89 li
721 83.6665 723.667 81 729 81 cv
cp
0 0 0 rgb
@
769 81 mo
791 81 li
796.333 81 799 83.6665 799 89 cv
799 111 li
799 116.333 796.333 119 791 119 cv
769 119 li
763.667 119 761 116.333 761 111 cv
761 89 li
761 83.6665 763.667 81 769 81 cv
cp
0 .517647 .717647 rgb
f
769 81 mo
791 81 li
796.333 81 799 83.6665 799 89 cv
799 111 li
799 116.333 796.333 119 791 119 cv
769 119 li
763.667 119 761 116.333 761 111 cv
761 89 li
761 83.6665 763.667 81 769 81 cv
cp
0 0 0 rgb
@
809 81 mo
831 81 li
836.333 81 839 83.6665 839 89 cv
839 111 li
839 116.333 836.333 119 831 119 cv
809 119 li
803.667 119 801 116.333 801 111 cv
801 89 li
801 83.6665 803.667 81 809 81 cv
cp
.156863 .784314 .933333 rgb
f
809 81 mo
831 81 li
836.333 81 839 83.6665 839 89 cv
839 111 li
839 116.333 836.333 119 831 119 cv
809 119 li
803.667 119 801 116.333 801 111 cv
801 89 li
801 83.6665 803.667 81 809 81 cv
cp
0 0 0 rgb
@
849 81 mo
871 81 li
876.333 81 879 83.6665 879 89 cv
879 111 li
879 116.333 876.333 119 871 119 cv
849 119 li
843.667 119 841 116.333 841 111 cv
841 89 li
841 83.6665 843.667 81 849 81 cv
cp
0 .576471 .764706 rgb
f
849 81 mo
871 81 li
876.333 81 879 83.6665 879 89 cv
879 111 li
879 116.333 876.333 119 871 119 cv
849 119 li
843.667 119 841 116.333 841 111 cv
841 89 li
841 83.6665 843.667 81 849 81 cv
cp
0 0 0 rgb
@
889 81 mo
911 81 li
916.333 81 919 83.6665 919 89 cv
919 111 li
919 116.333 916.333 119 911 119 cv
889 119 li
883.667 119 881 116.333 881 111 cv
881 89 li
881 83.6665 883.667 81 889 81 cv
cp
0 .494118 .576471 rgb
f
889 81 mo
911 81 li
916.333 81 919 83.6665 919 89 cv
919 111 li
919 116.333 916.333 119 911 119 cv
889 119 li
883.667 119 881 116.333 881 111 cv
881 89 li
881 83.6665 883.667 81 889 81 cv
cp
0 0 0 rgb
@
929 81 mo
951 81 li
956.333 81 959 83.6665 959 89 cv
959 111 li
959 116.333 956.333 119 951 119 cv
929 119 li
923.667 119 921 116.333 921 111 cv
921 89 li
921 83.6665 923.667 81 929 81 cv
cp
0 .517647 .807843 rgb
f
929 81 mo
951 81 li
956.333 81 959 83.6665 959 89 cv
959 111 li
959 116.333 956.333 119 951 119 cv
929 119 li
923.667 119 921 116.333 921 111 cv
921 89 li
921 83.6665 923.667 81 929 81 cv
cp
0 0 0 rgb
@
969 81 mo
991 81 li
996.333 81 999 83.6665 999 89 cv
999 111 li
999 116.333 996.333 119 991 119 cv
969 119 li
963.667 119 961 116.333 961 111 cv
961 89 li
961 83.6665 963.667 81 969 81 cv
cp
.054902 .698039 .921569 rgb
f
969 81 mo
991 81 li
996.333 81 999 83.6665 999 89 cv
999 111 li
999 116.333 996.333 119 991 119 cv
969 119 li
963.667 119 961 116.333 961 111 cv
961 89 li
961 83.6665 963.667 81 969 81 cv
cp
0 0 0 rgb
@
9 121 mo
31 121 li
36.3335 121 39 123.667 39 129 cv
39 151 li
39 156.333 36.3335 159 31 159 cv
9 159 li
3.6665 159 1 156.333 1 151 cv
1 129 li
1 123.667 3.6665 121 9 121 cv
cp
.4 1 1 rgb
f
9 121 mo
31 121 li
36.3335 121 39 123.667 39 129 cv
39 151 li
39 156.333 36.3335 159 31 159 cv
9 159 li
3.6665 159 1 156.333 1 151 cv
1 129 li
1 123.667 3.6665 121 9 121 cv
cp
0 0 0 rgb
@
49 121 mo
71 121 li
76.3335 121 79 123.667 79 129 cv
79 151 li
79 156.333 76.3335 159 71 159 cv
49 159 li
43.6665 159 41 156.333 41 151 cv
41 129 li
41 123.667 43.6665 121 49 121 cv
cp
0 .619608 .835294 rgb
f
49 121 mo
71 121 li
76.3335 121 79 123.667 79 129 cv
79 151 li
79 156.333 76.3335 159 71 159 cv
49 159 li
43.6665 159 41 156.333 41 151 cv
41 129 li
41 123.667 43.6665 121 49 121 cv
cp
0 0 0 rgb
@
89 121 mo
111 121 li
116.333 121 119 123.667 119 129 cv
119 151 li
119 156.333 116.333 159 111 159 cv
89 159 li
83.6665 159 81 156.333 81 151 cv
81 129 li
81 123.667 83.6665 121 89 121 cv
cp
0 .392157 .537255 rgb
f
89 121 mo
111 121 li
116.333 121 119 123.667 119 129 cv
119 151 li
119 156.333 116.333 159 111 159 cv
89 159 li
83.6665 159 81 156.333 81 151 cv
81 129 li
81 123.667 83.6665 121 89 121 cv
cp
0 0 0 rgb
@
129 121 mo
151 121 li
156.333 121 159 123.667 159 129 cv
159 151 li
159 156.333 156.333 159 151 159 cv
129 159 li
123.667 159 121 156.333 121 151 cv
121 129 li
121 123.667 123.667 121 129 121 cv
cp
.0784314 .760784 .992157 rgb
f
129 121 mo
151 121 li
156.333 121 159 123.667 159 129 cv
159 151 li
159 156.333 156.333 159 151 159 cv
129 159 li
123.667 159 121 156.333 121 151 cv
121 129 li
121 123.667 123.667 121 129 121 cv
cp
0 0 0 rgb
@
169 121 mo
191 121 li
196.333 121 199 123.667 199 129 cv
199 151 li
199 156.333 196.333 159 191 159 cv
169 159 li
163.667 159 161 156.333 161 151 cv
161 129 li
161 123.667 163.667 121 169 121 cv
cp
0 .427451 .666667 rgb
f
169 121 mo
191 121 li
196.333 121 199 123.667 199 129 cv
199 151 li
199 156.333 196.333 159 191 159 cv
169 159 li
163.667 159 161 156.333 161 151 cv
161 129 li
161 123.667 163.667 121 169 121 cv
cp
0 0 0 rgb
@
209 121 mo
231 121 li
236.333 121 239 123.667 239 129 cv
239 151 li
239 156.333 236.333 159 231 159 cv
209 159 li
203.667 159 201 156.333 201 151 cv
201 129 li
201 123.667 203.667 121 209 121 cv
cp
.164706 .898039 1 rgb
f
209 121 mo
231 121 li
236.333 121 239 123.667 239 129 cv
239 151 li
239 156.333 236.333 159 231 159 cv
209 159 li
203.667 159 201 156.333 201 151 cv
201 129 li
201 123.667 203.667 121 209 121 cv
cp
0 0 0 rgb
@
249 121 mo
271 121 li
276.333 121 279 123.667 279 129 cv
279 151 li
279 156.333 276.333 159 271 159 cv
249 159 li
243.667 159 241 156.333 241 151 cv
241 129 li
241 123.667 243.667 121 249 121 cv
cp
0 .698039 .8 rgb
f
249 121 mo
271 121 li
276.333 121 279 123.667 279 129 cv
279 151 li
279 156.333 276.333 159 271 159 cv
249 159 li
243.667 159 241 156.333 241 151 cv
241 129 li
241 123.667 243.667 121 249 121 cv
cp
0 0 0 rgb
@
289 121 mo
311 121 li
316.333 121 319 123.667 319 129 cv
319 151 li
319 156.333 316.333 159 311 159 cv
289 159 li
283.667 159 281 156.333 281 151 cv
281 129 li
281 123.667 283.667 121 289 121 cv
cp
.235294 .980392 1 rgb
f
289 121 mo
311 121 li
316.333 121 319 123.667 319 129 cv
319 151 li
319 156.333 316.333 159 311 159 cv
289 159 li
283.667 159 281 156.333 281 151 cv
281 129 li
281 123.667 283.667 121 289 121 cv
cp
0 0 0 rgb
@
329 121 mo
351 121 li
356.333 121 359 123.667 359 129 cv
359 151 li
359 156.333 356.333 159 351 159 cv
329 159 li
323.667 159 321 156.333 321 151 cv
321 129 li
321 123.667 323.667 121 329 121 cv
cp
0 .447059 .701961 rgb
f
329 121 mo
351 121 li
356.333 121 359 123.667 359 129 cv
359 151 li
359 156.333 356.333 159 351 159 cv
329 159 li
323.667 159 321 156.333 321 151 cv
321 129 li
321 123.667 323.667 121 329 121 cv
cp
0 0 0 rgb
@
369 121 mo
391 121 li
396.333 121 399 123.667 399 129 cv
399 151 li
399 156.333 396.333 159 391 159 cv
369 159 li
363.667 159 361 156.333 361 151 cv
361 129 li
361 123.667 363.667 121 369 121 cv
cp
.0627451 .603922 .882353 rgb
f
369 121 mo
391 121 li
396.333 121 399 123.667 399 129 cv
399 151 li
399 156.333 396.333 159 391 159 cv
369 159 li
363.667 159 361 156.333 361 151 cv
361 129 li
361 123.667 363.667 121 369 121 cv
cp
0 0 0 rgb
@
409 121 mo
431 121 li
436.333 121 439 123.667 439 129 cv
439 151 li
439 156.333 436.333 159 431 159 cv
409 159 li
403.667 159 401 156.333 401 151 cv
401 129 li
401 123.667 403.667 121 409 121 cv
cp
.137255 .705882 .878431 rgb
f
409 121 mo
431 121 li
436.333 121 439 123.667 439 129 cv
439 151 li
439 156.333 436.333 159 431 159 cv
409 159 li
403.667 159 401 156.333 401 151 cv
401 129 li
401 123.667 403.667 121 409 121 cv
cp
0 0 0 rgb
@
449 121 mo
471 121 li
476.333 121 479 123.667 479 129 cv
479 151 li
479 156.333 476.333 159 471 159 cv
449 159 li
443.667 159 441 156.333 441 151 cv
441 129 li
441 123.667 443.667 121 449 121 cv
cp
0 .627451 .858824 rgb
f
449 121 mo
471 121 li
476.333 121 479 123.667 479 129 cv
479 151 li
479 156.333 476.333 159 471 159 cv
449 159 li
443.667 159 441 156.333 441 151 cv
441 129 li
441 123.667 443.667 121 449 121 cv
cp
0 0 0 rgb
@
489 121 mo
511 121 li
516.333 121 519 123.667 519 129 cv
519 151 li
519 156.333 516.333 159 511 159 cv
489 159 li
483.667 159 481 156.333 481 151 cv
481 129 li
481 123.667 483.667 121 489 121 cv
cp
0 .345098 .552941 rgb
f
489 121 mo
511 121 li
516.333 121 519 123.667 519 129 cv
519 151 li
519 156.333 516.333 159 511 159 cv
489 159 li
483.667 159 481 156.333 481 151 cv
481 129 li
481 123.667 483.667 121 489 121 cv
cp
0 0 0 rgb
@
529 121 mo
551 121 li
556.333 121 559 123.667 559 129 cv
559 151 li
559 156.333 556.333 159 551 159 cv
529 159 li
523.667 159 521 156.333 521 151 cv
521 129 li
521 123.667 523.667 121 529 121 cv
cp
0 .462745 .85098 rgb
f
529 121 mo
551 121 li
556.333 121 559 123.667 559 129 cv
559 151 li
559 156.333 556.333 159 551 159 cv
529 159 li
523.667 159 521 156.333 521 151 cv
521 129 li
521 123.667 523.667 121 529 121 cv
cp
0 0 0 rgb
@
569 121 mo
591 121 li
596.333 121 599 123.667 599 129 cv
599 151 li
599 156.333 596.333 159 591 159 cv
569 159 li
563.667 159 561 156.333 561 151 cv
561 129 li
561 123.667 563.667 121 569 121 cv
cp
.0117647 .592157 .768627 rgb
f
569 121 mo
591 121 li
596.333 121 599 123.667 599 129 cv
599 151 li
599 156.333 596.333 159 591 159 cv
569 159 li
563.667 159 561 156.333 561 151 cv
561 129 li
561 123.667 563.667 121 569 121 cv
cp
0 0 0 rgb
@
609 121 mo
631 121 li
636.333 121 639 123.667 639 129 cv
639 151 li
639 156.333 636.333 159 631 159 cv
609 159 li
603.667 159 601 156.333 601 151 cv
601 129 li
601 123.667 603.667 121 609 121 cv
cp
0 .427451 .643137 rgb
f
609 121 mo
631 121 li
636.333 121 639 123.667 639 129 cv
639 151 li
639 156.333 636.333 159 631 159 cv
609 159 li
603.667 159 601 156.333 601 151 cv
601 129 li
601 123.667 603.667 121 609 121 cv
cp
0 0 0 rgb
@
649 121 mo
671 121 li
676.333 121 679 123.667 679 129 cv
679 151 li
679 156.333 676.333 159 671 159 cv
649 159 li
643.667 159 641 156.333 641 151 cv
641 129 li
641 123.667 643.667 121 649 121 cv
cp
.0980392 .666667 .933333 rgb
f
649 121 mo
671 121 li
676.333 121 679 123.667 679 129 cv
679 151 li
679 156.333 676.333 159 671 159 cv
649 159 li
643.667 159 641 156.333 641 151 cv
641 129 li
641 123.667 643.667 121 649 121 cv
cp
0 0 0 rgb
@
689 121 mo
711 121 li
716.333 121 719 123.667 719 129 cv
719 151 li
719 156.333 716.333 159 711 159 cv
689 159 li
683.667 159 681 156.333 681 151 cv
681 129 li
681 123.667 683.667 121 689 121 cv
cp
0 .654902 .905882 rgb
f
689 121 mo
711 121 li
716.333 121 719 123.667 719 129 cv
719 151 li
719 156.333 716.333 159 711 159 cv
689 159 li
683.667 159 681 156.333 681 151 cv
681 129 li
681 123.667 683.667 121 689 121 cv
cp
0 0 0 rgb
@
729 121 mo
751 121 li
756.333 121 759 123.667 759 129 cv
759 151 li
759 156.333 756.333 159 751 159 cv
729 159 li
723.667 159 721 156.333 721 151 cv
721 129 li
721 123.667 723.667 121 729 121 cv
cp
0 .356863 .47451 rgb
f
729 121 mo
751 121 li
756.333 121 759 123.667 759 129 cv
759 151 li
759 156.333 756.333 159 751 159 cv
729 159 li
723.667 159 721 156.333 721 151 cv
721 129 li
721 123.667 723.667 121 729 121 cv
cp
0 0 0 rgb
@
769 121 mo
791 121 li
796.333 121 799 123.667 799 129 cv
799 151 li
799 156.333 796.333 159 791 159 cv
769 159 li
763.667 159 761 156.333 761 151 cv
761 129 li
761 123.667 763.667 121 769 121 cv
cp
0 .380392 .517647 rgb
f
769 121 mo
791 121 li
796.333 121 799 123.667 799 129 cv
799 151 li
799 156.333 796.333 159 791 159 cv
769 159 li
763.667 159 761 156.333 761 151 cv
761 129 li
761 123.667 763.667 121 769 121 cv
cp
0 0 0 rgb
@
809 121 mo
831 121 li
836.333 121 839 123.667 839 129 cv
839 151 li
839 156.333 836.333 159 831 159 cv
809 159 li
803.667 159 801 156.333 801 151 cv
801 129 li
801 123.667 803.667 121 809 121 cv
cp
.168627 .87451 .956863 rgb
f
809 121 mo
831 121 li
836.333 121 839 123.667 839 129 cv
839 151 li
839 156.333 836.333 159 831 159 cv
809 159 li
803.667 159 801 156.333 801 151 cv
801 129 li
801 123.667 803.667 121 809 121 cv
cp
0 0 0 rgb
@
849 121 mo
871 121 li
876.333 121 879 123.667 879 129 cv
879 151 li
879 156.333 876.333 159 871 159 cv
849 159 li
843.667 159 841 156.333 841 151 cv
841 129 li
841 123.667 843.667 121 849 121 cv
cp
.196078 .819608 1 rgb
f
849 121 mo
871 121 li
876.333 121 879 123.667 879 129 cv
879 151 li
879 156.333 876.333 159 871 159 cv
849 159 li
843.667 159 841 156.333 841 151 cv
841 129 li
841 123.667 843.667 121 849 121 cv
cp
0 0 0 rgb
@
889 121 mo
911 121 li
916.333 121 919 123.667 919 129 cv
919 151 li
919 156.333 916.333 159 911 159 cv
889 159 li
883.667 159 881 156.333 881 151 cv
881 129 li
881 123.667 883.667 121 889 121 cv
cp
0 .545098 .709804 rgb
f
889 121 mo
911 121 li
916.333 121 919 123.667 919 129 cv
919 151 li
919 156.333 916.333 159 911 159 cv
889 159 li
883.667 159 881 156.333 881 151 cv
881 129 li
881 123.667 883.667 121 889 121 cv
cp
0 0 0 rgb
@
929 121 mo
951 121 li
956.333 121 959 123.667 959 129 cv
959 151 li
959 156.333 956.333 159 951 159 cv
929 159 li
923.667 159 921 156.333 921 151 cv
921 129 li
921 123.667 923.667 121 929 121 cv
cp
0 .482353 .654902 rgb
f
929 121 mo
951 121 li
956.333 121 959 123.667 959 129 cv
959 151 li
959 156.333 956.333 159 951 159 cv
929 159 li
923.667 159 921 156.333 921 151 cv
921 129 li
921 123.667 923.667 121 929 121 cv
cp
0 0 0 rgb
@
969 121 mo
991 121 li
996.333 121 999 123.667 999 129 cv
999 151 li
999 156.333 996.333 159 991 159 cv
969 159 li
963.667 159 961 156.333 961 151 cv
961 129 li
961 123.667 963.667 121 969 121 cv
cp
.0980392 .780392 .968627 rgb
f
969 121 mo
991 121 li
996.333 121 999 123.667 999 129 cv
999 151 li
999 156.333 996.333 159 991 159 cv
969 159 li
963.667 159 961 156.333 961 151 cv
961 129 li
961 123.667 963.667 121 969 121 cv
cp
0 0 0 rgb
@
9 161 mo
31 161 li
36.3335 161 39 163.667 39 169 cv
39 191 li
39 196.333 36.3335 199 31 199 cv
9 199 li
3.6665 199 1 196.333 1 191 cv
1 169 li
1 163.667 3.6665 161 9 161 cv
cp
0 .415686 .733333 rgb
f
9 161 mo
31 161 li
36.3335 161 39 163.667 39 169 cv
39 191 li
39 196.333 36.3335 199 31 199 cv
9 199 li
3.6665 199 1 196.333 1 191 cv
1 169 li
1 163.667 3.6665 161 9 161 cv
cp
0 0 0 rgb
@
49 161 mo
71 161 li
76.3335 161 79 163.667 79 169 cv
79 191 li
79 196.333 76.3335 199 71 199 cv
49 199 li
43.6665 199 41 196.333 41 191 cv
41 169 li
41 163.667 43.6665 161 49 161 cv
cp
0 .619608 .764706 rgb
f
49 161 mo
71 161 li
76.3335 161 79 163.667 79 169 cv
79 191 li
79 196.333 76.3335 199 71 199 cv
49 199 li
43.6665 199 41 196.333 41 191 cv
41 169 li
41 163.667 43.6665 161 49 161 cv
cp
0 0 0 rgb
@
89 161 mo
111 161 li
116.333 161 119 163.667 119 169 cv
119 191 li
119 196.333 116.333 199 111 199 cv
89 199 li
83.6665 199 81 196.333 81 191 cv
81 169 li
81 163.667 83.6665 161 89 161 cv
cp
.0666667 .741176 .882353 rgb
f
89 161 mo
111 161 li
116.333 161 119 163.667 119 169 cv
119 191 li
119 196.333 116.333 199 111 199 cv
89 199 li
83.6665 199 81 196.333 81 191 cv
81 169 li
81 163.667 83.6665 161 89 161 cv
cp
0 0 0 rgb
@
129 161 mo
151 161 li
156.333 161 159 163.667 159 169 cv
159 191 li
159 196.333 156.333 199 151 199 cv
129 199 li
123.667 199 121 196.333 121 191 cv
121 169 li
121 163.667 123.667 161 129 161 cv
cp
0 .388235 .611765 rgb
f
129 161 mo
151 161 li
156.333 161 159 163.667 159 169 cv
159 191 li
159 196.333 156.333 199 151 199 cv
129 199 li
123.667 199 121 196.333 121 191 cv
121 169 li
121 163.667 123.667 161 129 161 cv
cp
0 0 0 rgb
@
169 161 mo
191 161 li
196.333 161 199 163.667 199 169 cv
199 191 li
199 196.333 196.333 199 191 199 cv
169 199 li
163.667 199 161 196.333 161 191 cv
161 169 li
161 163.667 163.667 161 169 161 cv
cp
.447059 1 1 rgb
f
169 161 mo
191 161 li
196.333 161 199 163.667 199 169 cv
199 191 li
199 196.333 196.333 199 191 199 cv
169 199 li
163.667 199 161 196.333 161 191 cv
161 169 li
161 163.667 163.667 161 169 161 cv
cp
0 0 0 rgb
@
209 161 mo
231 161 li
236.333 161 239 163.667 239 169 cv
239 191 li
239 196.333 236.333 199 231 199 cv
209 199 li
203.667 199 201 196.333 201 191 cv
201 169 li
201 163.667 203.667 161 209 161 cv
cp
0 .392157 .631373 rgb
f
209 161 mo
231 161 li
236.333 161 239 163.667 239 169 cv
239 191 li
239 196.333 236.333 199 231 199 cv
209 199 li
203.667 199 201 196.333 201 191 cv
201 169 li
201 163.667 203.667 161 209 161 cv
cp
0 0 0 rgb
@
249 161 mo
271 161 li
276.333 161 279 163.667 279 169 cv
279 191 li
279 196.333 276.333 199 271 199 cv
249 199 li
243.667 199 241 196.333 241 191 cv
241 169 li
241 163.667 243.667 161 249 161 cv
cp
0 .427451 .643137 rgb
f
249 161 mo
271 161 li
276.333 161 279 163.667 279 169 cv
279 191 li
279 196.333 276.333 199 271 199 cv
249 199 li
243.667 199 241 196.333 241 191 cv
241 169 li
241 163.667 243.667 161 249 161 cv
cp
0 0 0 rgb
@
289 161 mo
311 161 li
316.333 161 319 163.667 319 169 cv
319 191 li
319 196.333 316.333 199 311 199 cv
289 199 li
283.667 199 281 196.333 281 191 cv
281 169 li
281 163.667 283.667 161 289 161 cv
cp
.0745098 .780392 .972549 rgb
f
289 161 mo
311 161 li
316.333 161 319 163.667 319 169 cv
319 191 li
319 196.333 316.333 199 311 199 cv
289 199 li
283.667 199 281 196.333 281 191 cv
281 169 li
281 163.667 283.667 161 289 161 cv
cp
0 0 0 rgb
@
329 161 mo
351 161 li
356.333 161 359 163.667 359 169 cv
359 191 li
359 196.333 356.333 199 351 199 cv
329 199 li
323.667 199 321 196.333 321 191 cv
321 169 li
321 163.667 323.667 161 329 161 cv
cp
.407843 .964706 1 rgb
f
329 161 mo
351 161 li
356.333 161 359 163.667 359 169 cv
359 191 li
359 196.333 356.333 199 351 199 cv
329 199 li
323.667 199 321 196.333 321 191 cv
321 169 li
321 163.667 323.667 161 329 161 cv
cp
0 0 0 rgb
@
369 161 mo
391 161 li
396.333 161 399 163.667 399 169 cv
399 191 li
399 196.333 396.333 199 391 199 cv
369 199 li
363.667 199 361 196.333 361 191 cv
361 169 li
361 163.667 363.667 161 369 161 cv
cp
0 .592157 .858824 rgb
f
369 161 mo
391 161 li
396.333 161 399 163.667 399 169 cv
399 191 li
399 196.333 396.333 199 391 199 cv
369 199 li
363.667 199 361 196.333 361 191 cv
361 169 li
361 163.667 363.667 161 369 161 cv
cp
0 0 0 rgb
@
409 161 mo
431 161 li
436.333 161 439 163.667 439 169 cv
439 191 li
439 196.333 436.333 199 431 199 cv
409 199 li
403.667 199 401 196.333 401 191 cv
401 169 li
401 163.667 403.667 161 409 161 cv
cp
.439216 .996078 1 rgb
f
409 161 mo
431 161 li
436.333 161 439 163.667 439 169 cv
439 191 li
439 196.333 436.333 199 431 199 cv
409 199 li
403.667 199 401 196.333 401 191 cv
401 169 li
401 163.667 403.667 161 409 161 cv
cp
0 0 0 rgb
@
449 161 mo
471 161 li
476.333 161 479 163.667 479 169 cv
479 191 li
479 196.333 476.333 199 471 199 cv
449 199 li
443.667 199 441 196.333 441 191 cv
441 169 li
441 163.667 443.667 161 449 161 cv
cp
.117647 .690196 .968627 rgb
f
449 161 mo
471 161 li
476.333 161 479 163.667 479 169 cv
479 191 li
479 196.333 476.333 199 471 199 cv
449 199 li
443.667 199 441 196.333 441 191 cv
441 169 li
441 163.667 443.667 161 449 161 cv
cp
0 0 0 rgb
@
489 161 mo
511 161 li
516.333 161 519 163.667 519 169 cv
519 191 li
519 196.333 516.333 199 511 199 cv
489 199 li
483.667 199 481 196.333 481 191 cv
481 169 li
481 163.667 483.667 161 489 161 cv
cp
0 .466667 .65098 rgb
f
489 161 mo
511 161 li
516.333 161 519 163.667 519 169 cv
519 191 li
519 196.333 516.333 199 511 199 cv
489 199 li
483.667 199 481 196.333 481 191 cv
481 169 li
481 163.667 483.667 161 489 161 cv
cp
0 0 0 rgb
@
529 161 mo
551 161 li
556.333 161 559 163.667 559 169 cv
559 191 li
559 196.333 556.333 199 551 199 cv
529 199 li
523.667 199 521 196.333 521 191 cv
521 169 li
521 163.667 523.667 161 529 161 cv
cp
.0901961 .847059 1 rgb
f
529 161 mo
551 161 li
556.333 161 559 163.667 559 169 cv
559 191 li
559 196.333 556.333 199 551 199 cv
529 199 li
523.667 199 521 196.333 521 191 cv
521 169 li
521 163.667 523.667 161 529 161 cv
cp
0 0 0 rgb
@
569 161 mo
591 161 li
596.333 161 599 163.667 599 169 cv
599 191 li
599 196.333 596.333 199 591 199 cv
569 199 li
563.667 199 561 196.333 561 191 cv
561 169 li
561 163.667 563.667 161 569 161 cv
cp
0 .262745 .607843 rgb
f
569 161 mo
591 161 li
596.333 161 599 163.667 599 169 cv
599 191 li
599 196.333 596.333 199 591 199 cv
569 199 li
563.667 199 561 196.333 561 191 cv
561 169 li
561 163.667 563.667 161 569 161 cv
cp
0 0 0 rgb
@
609 161 mo
631 161 li
636.333 161 639 163.667 639 169 cv
639 191 li
639 196.333 636.333 199 631 199 cv
609 199 li
603.667 199 601 196.333 601 191 cv
601 169 li
601 163.667 603.667 161 609 161 cv
cp
.0235294 .662745 .780392 rgb
f
609 161 mo
631 161 li
636.333 161 639 163.667 639 169 cv
639 191 li
639 196.333 636.333 199 631 199 cv
609 199 li
603.667 199 601 196.333 601 191 cv
601 169 li
601 163.667 603.667 161 609 161 cv
cp
0 0 0 rgb
@
649 161 mo
671 161 li
676.333 161 679 163.667 679 169 cv
679 191 li
679 196.333 676.333 199 671 199 cv
649 199 li
643.667 199 641 196.333 641 191 cv
641 169 li
641 163.667 643.667 161 649 161 cv
cp
0 .67451 .854902 rgb
f
649 161 mo
671 161 li
676.333 161 679 163.667 679 169 cv
679 191 li
679 196.333 676.333 199 671 199 cv
649 199 li
643.667 199 641 196.333 641 191 cv
641 169 li
641 163.667 643.667 161 649 161 cv
cp
0 0 0 rgb
@
689 161 mo
711 161 li
716.333 161 719 163.667 719 169 cv
719 191 li
719 196.333 716.333 199 711 199 cv
689 199 li
683.667 199 681 196.333 681 191 cv
681 169 li
681 163.667 683.667 161 689 161 cv
cp
.0588235 .631373 .92549 rgb
f
689 161 mo
711 161 li
716.333 161 719 163.667 719 169 cv
719 191 li
719 196.333 716.333 199 711 199 cv
689 199 li
683.667 199 681 196.333 681 191 cv
681 169 li
681 163.667 683.667 161 689 161 cv
cp
0 0 0 rgb
@
729 161 mo
751 161 li
756.333 161 759 163.667 759 169 cv
759 191 li
759 196.333 756.333 199 751 199 cv
729 199 li
723.667 199 721 196.333 721 191 cv
721 169 li
721 163.667 723.667 161 729 161 cv
cp
0 .580392 .803922 rgb
f
729 161 mo
751 161 li
756.333 161 759 163.667 759 169 cv
759 191 li
759 196.333 756.333 199 751 199 cv
729 199 li
723.667 199 721 196.333 721 191 cv
721 169 li
721 163.667 723.667 161 729 161 cv
cp
0 0 0 rgb
@
769 161 mo
791 161 li
796.333 161 799 163.667 799 169 cv
799 191 li
799 196.333 796.333 199 791 199 cv
769 199 li
763.667 199 761 196.333 761 191 cv
761 169 li
761 163.667 763.667 161 769 161 cv
cp
.329412 .882353 1 rgb
f
769 161 mo
791 161 li
796.333 161 799 163.667 799 169 cv
799 191 li
799 196.333 796.333 199 791 199 cv
769 199 li
763.667 199 761 196.333 761 191 cv
761 169 li
761 163.667 763.667 161 769 161 cv
cp
0 0 0 rgb
@
809 161 mo
831 161 li
836.333 161 839 163.667 839 169 cv
839 191 li
839 196.333 836.333 199 831 199 cv
809 199 li
803.667 199 801 196.333 801 191 cv
801 169 li
801 163.667 803.667 161 809 161 cv
cp
0 .486275 .6 rgb
f
809 161 mo
831 161 li
836.333 161 839 163.667 839 169 cv
839 191 li
839 196.333 836.333 199 831 199 cv
809 199 li
803.667 199 801 196.333 801 191 cv
801 169 li
801 163.667 803.667 161 809 161 cv
cp
0 0 0 rgb
@
849 161 mo
871 161 li
876.333 161 879 163.667 879 169 cv
879 191 li
879 196.333 876.333 199 871 199 cv
849 199 li
843.667 199 841 196.333 841 191 cv
841 169 li
841 163.667 843.667 161 849 161 cv
cp
0 .466667 .592157 rgb
f
849 161 mo
871 161 li
876.333 161 879 163.667 879 169 cv
879 191 li
879 196.333 876.333 199 871 199 cv
849 199 li
843.667 199 841 196.333 841 191 cv
841 169 li
841 163.667 843.667 161 849 161 cv
cp
0 0 0 rgb
@
889 161 mo
911 161 li
916.333 161 919 163.667 919 169 cv
919 191 li
919 196.333 916.333 199 911 199 cv
889 199 li
883.667 199 881 196.333 881 191 cv
881 169 li
881 163.667 883.667 161 889 161 cv
cp
.254902 .882353 1 rgb
f
889 161 mo
911 161 li
916.333 161 919 163.667 919 169 cv
919 191 li
919 196.333 916.333 199 911 199 cv
889 199 li
883.667 199 881 196.333 881 191 cv
881 169 li
881 163.667 883.667 161 889 161 cv
cp
0 0 0 rgb
@
929 161 mo
951 161 li
956.333 161 959 163.667 959 169 cv
959 191 li
959 196.333 956.333 199 951 199 cv
929 199 li
923.667 199 921 196.333 921 191 cv
921 169 li
921 163.667 923.667 161 929 161 cv
cp
0 .431373 .556863 rgb
f
929 161 mo
951 161 li
956.333 161 959 163.667 959 169 cv
959 191 li
959 196.333 956.333 199 951 199 cv
929 199 li
923.667 199 921 196.333 921 191 cv
921 169 li
921 163.667 923.667 161 929 161 cv
cp
0 0 0 rgb
@
969 161 mo
991 161 li
996.333 161 999 163.667 999 169 cv
999 191 li
999 196.333 996.333 199 991 199 cv
969 199 li
963.667 199 961 196.333 961 191 cv
961 169 li
961 163.667 963.667 161 969 161 cv
cp
.290196 1 1 rgb
f
969 161 mo
991 161 li
996.333 161 999 163.667 999 169 cv
999 191 li
999 196.333 996.333 199 991 199 cv
969 199 li
963.667 199 961 196.333 961 191 cv
961 169 li
961 163.667 963.667 161 969 161 cv
cp
0 0 0 rgb
@
9 201 mo
31 201 li
36.3335 201 39 203.667 39 209 cv
39 231 li
39 236.333 36.3335 239 31 239 cv
9 239 li
3.6665 239 1 236.333 1 231 cv
1 209 li
1 203.667 3.6665 201 9 201 cv
cp
.113725 .729412 .968627 rgb
f
9 201 mo
31 201 li
36.3335 201 39 203.667 39 209 cv
39 231 li
39 236.333 36.3335 239 31 239 cv
9 239 li
3.6665 239 1 236.333 1 231 cv
1 209 li
1 203.667 3.6665 201 9 201 cv
cp
0 0 0 rgb
@
49 201 mo
71 201 li
76.3335 201 79 203.667 79 209 cv
79 231 li
79 236.333 76.3335 239 71 239 cv
49 239 li
43.6665 239 41 236.333 41 231 cv
41 209 li
41 203.667 43.6665 201 49 201 cv
cp
.0313726 .607843 .917647 rgb
f
49 201 mo
71 201 li
76.3335 201 79 203.667 79 209 cv
79 231 li
79 236.333 76.3335 239 71 239 cv
49 239 li
43.6665 239 41 236.333 41 231 cv
41 209 li
41 203.667 43.6665 201 49 201 cv
cp
0 0 0 rgb
@
89 201 mo
111 201 li
116.333 201 119 203.667 119 209 cv
119 231 li
119 236.333 116.333 239 111 239 cv
89 239 li
83.6665 239 81 236.333 81 231 cv
81 209 li
81 203.667 83.6665 201 89 201 cv
cp
0 .411765 .529412 rgb
f
89 201 mo
111 201 li
116.333 201 119 203.667 119 209 cv
119 231 li
119 236.333 116.333 239 111 239 cv
89 239 li
83.6665 239 81 236.333 81 231 cv
81 209 li
81 203.667 83.6665 201 89 201 cv
cp
0 0 0 rgb
@
129 201 mo
151 201 li
156.333 201 159 203.667 159 209 cv
159 231 li
159 236.333 156.333 239 151 239 cv
129 239 li
123.667 239 121 236.333 121 231 cv
121 209 li
121 203.667 123.667 201 129 201 cv
cp
0 .392157 .52549 rgb
f
129 201 mo
151 201 li
156.333 201 159 203.667 159 209 cv
159 231 li
159 236.333 156.333 239 151 239 cv
129 239 li
123.667 239 121 236.333 121 231 cv
121 209 li
121 203.667 123.667 201 129 201 cv
cp
0 0 0 rgb
@
169 201 mo
191 201 li
196.333 201 199 203.667 199 209 cv
199 231 li
199 236.333 196.333 239 191 239 cv
169 239 li
163.667 239 161 236.333 161 231 cv
161 209 li
161 203.667 163.667 201 169 201 cv
cp
.027451 .698039 .988235 rgb
f
169 201 mo
191 201 li
196.333 201 199 203.667 199 209 cv
199 231 li
199 236.333 196.333 239 191 239 cv
169 239 li
163.667 239 161 236.333 161 231 cv
161 209 li
161 203.667 163.667 201 169 201 cv
cp
0 0 0 rgb
@
209 201 mo
231 201 li
236.333 201 239 203.667 239 209 cv
239 231 li
239 236.333 236.333 239 231 239 cv
209 239 li
203.667 239 201 236.333 201 231 cv
201 209 li
201 203.667 203.667 201 209 201 cv
cp
0 .666667 .831373 rgb
f
209 201 mo
231 201 li
236.333 201 239 203.667 239 209 cv
239 231 li
239 236.333 236.333 239 231 239 cv
209 239 li
203.667 239 201 236.333 201 231 cv
201 209 li
201 203.667 203.667 201 209 201 cv
cp
0 0 0 rgb
@
249 201 mo
271 201 li
276.333 201 279 203.667 279 209 cv
279 231 li
279 236.333 276.333 239 271 239 cv
249 239 li
243.667 239 241 236.333 241 231 cv
241 209 li
241 203.667 243.667 201 249 201 cv
cp
.219608 .815686 1 rgb
f
249 201 mo
271 201 li
276.333 201 279 203.667 279 209 cv
279 231 li
279 236.333 276.333 239 271 239 cv
249 239 li
243.667 239 241 236.333 241 231 cv
241 209 li
241 203.667 243.667 201 249 201 cv
cp
0 0 0 rgb
@
289 201 mo
311 201 li
316.333 201 319 203.667 319 209 cv
319 231 li
319 236.333 316.333 239 311 239 cv
289 239 li
283.667 239 281 236.333 281 231 cv
281 209 li
281 203.667 283.667 201 289 201 cv
cp
0 .482353 .705882 rgb
f
289 201 mo
311 201 li
316.333 201 319 203.667 319 209 cv
319 231 li
319 236.333 316.333 239 311 239 cv
289 239 li
283.667 239 281 236.333 281 231 cv
281 209 li
281 203.667 283.667 201 289 201 cv
cp
0 0 0 rgb
@
329 201 mo
351 201 li
356.333 201 359 203.667 359 209 cv
359 231 li
359 236.333 356.333 239 351 239 cv
329 239 li
323.667 239 321 236.333 321 231 cv
321 209 li
321 203.667 323.667 201 329 201 cv
cp
0 .545098 .815686 rgb
f
329 201 mo
351 201 li
356.333 201 359 203.667 359 209 cv
359 231 li
359 236.333 356.333 239 351 239 cv
329 239 li
323.667 239 321 236.333 321 231 cv
321 209 li
321 203.667 323.667 201 329 201 cv
cp
0 0 0 rgb
@
369 201 mo
391 201 li
396.333 201 399 203.667 399 209 cv
399 231 li
399 236.333 396.333 239 391 239 cv
369 239 li
363.667 239 361 236.333 361 231 cv
361 209 li
361 203.667 363.667 201 369 201 cv
cp
0 .698039 .827451 rgb
f
369 201 mo
391 201 li
396.333 201 399 203.667 399 209 cv
399 231 li
399 236.333 396.333 239 391 239 cv
369 239 li
363.667 239 361 236.333 361 231 cv
361 209 li
361 203.667 363.667 201 369 201 cv
cp
0 0 0 rgb
@
409 201 mo
431 201 li
436.333 201 439 203.667 439 209 cv
439 231 li
439 236.333 436.333 239 431 239 cv
409 239 li
403.667 239 401 236.333 401 231 cv
401 209 li
401 203.667 403.667 201 409 201 cv
cp
0 .376471 .635294 rgb
f
409 201 mo
431 201 li
436.333 201 439 203.667 439 209 cv
439 231 li
439 236.333 436.333 239 431 239 cv
409 239 li
403.667 239 401 236.333 401 231 cv
401 209 li
401 203.667 403.667 201 409 201 cv
cp
0 0 0 rgb
@
449 201 mo
471 201 li
476.333 201 479 203.667 479 209 cv
479 231 li
479 236.333 476.333 239 471 239 cv
449 239 li
443.667 239 441 236.333 441 231 cv
441 209 li
441 203.667 443.667 201 449 201 cv
cp
.156863 .905882 1 rgb
f
449 201 mo
471 201 li
476.333 201 479 203.667 479 209 cv
479 231 li
479 236.333 476.333 239 471 239 cv
449 239 li
443.667 239 441 236.333 441 231 cv
441 209 li
441 203.667 443.667 201 449 201 cv
cp
0 0 0 rgb
@
489 201 mo
511 201 li
516.333 201 519 203.667 519 209 cv
519 231 li
519 236.333 516.333 239 511 239 cv
489 239 li
483.667 239 481 236.333 481 231 cv
481 209 li
481 203.667 483.667 201 489 201 cv
cp
.321569 .815686 1 rgb
f
489 201 mo
511 201 li
516.333 201 519 203.667 519 209 cv
519 231 li
519 236.333 516.333 239 511 239 cv
489 239 li
483.667 239 481 236.333 481 231 cv
481 209 li
481 203.667 483.667 201 489 201 cv
cp
0 0 0 rgb
@
529 201 mo
551 201 li
556.333 201 559 203.667 559 209 cv
559 231 li
559 236.333 556.333 239 551 239 cv
529 239 li
523.667 239 521 236.333 521 231 cv
521 209 li
521 203.667 523.667 201 529 201 cv
cp
.321569 .882353 1 rgb
f
529 201 mo
551 201 li
556.333 201 559 203.667 559 209 cv
559 231 li
559 236.333 556.333 239 551 239 cv
529 239 li
523.667 239 521 236.333 521 231 cv
521 209 li
521 203.667 523.667 201 529 201 cv
cp
0 0 0 rgb
@
569 201 mo
591 201 li
596.333 201 599 203.667 599 209 cv
599 231 li
599 236.333 596.333 239 591 239 cv
569 239 li
563.667 239 561 236.333 561 231 cv
561 209 li
561 203.667 563.667 201 569 201 cv
cp
0 .364706 .596078 rgb
f
569 201 mo
591 201 li
596.333 201 599 203.667 599 209 cv
599 231 li
599 236.333 596.333 239 591 239 cv
569 239 li
563.667 239 561 236.333 561 231 cv
561 209 li
561 203.667 563.667 201 569 201 cv
cp
0 0 0 rgb
@
609 201 mo
631 201 li
636.333 201 639 203.667 639 209 cv
639 231 li
639 236.333 636.333 239 631 239 cv
609 239 li
603.667 239 601 236.333 601 231 cv
601 209 li
601 203.667 603.667 201 609 201 cv
cp
.0666667 .580392 .952941 rgb
f
609 201 mo
631 201 li
636.333 201 639 203.667 639 209 cv
639 231 li
639 236.333 636.333 239 631 239 cv
609 239 li
603.667 239 601 236.333 601 231 cv
601 209 li
601 203.667 603.667 201 609 201 cv
cp
0 0 0 rgb
@
649 201 mo
671 201 li
676.333 201 679 203.667 679 209 cv
679 231 li
679 236.333 676.333 239 671 239 cv
649 239 li
643.667 239 641 236.333 641 231 cv
641 209 li
641 203.667 643.667 201 649 201 cv
cp
.352941 .968627 1 rgb
f
649 201 mo
671 201 li
676.333 201 679 203.667 679 209 cv
679 231 li
679 236.333 676.333 239 671 239 cv
649 239 li
643.667 239 641 236.333 641 231 cv
641 209 li
641 203.667 643.667 201 649 201 cv
cp
0 0 0 rgb
@
689 201 mo
711 201 li
716.333 201 719 203.667 719 209 cv
719 231 li
719 236.333 716.333 239 711 239 cv
689 239 li
683.667 239 681 236.333 681 231 cv
681 209 li
681 203.667 683.667 201 689 201 cv
cp
0 .67451 .894118 rgb
f
689 201 mo
711 201 li
716.333 201 719 203.667 719 209 cv
719 231 li
719 236.333 716.333 239 711 239 cv
689 239 li
683.667 239 681 236.333 681 231 cv
681 209 li
681 203.667 683.667 201 689 201 cv
cp
0 0 0 rgb
@
729 201 mo
751 201 li
756.333 201 759 203.667 759 209 cv
759 231 li
759 236.333 756.333 239 751 239 cv
729 239 li
723.667 239 721 236.333 721 231 cv
721 209 li
721 203.667 723.667 201 729 201 cv
cp
.466667 .956863 1 rgb
f
729 201 mo
751 201 li
756.333 201 759 203.667 759 209 cv
759 231 li
759 236.333 756.333 239 751 239 cv
729 239 li
723.667 239 721 236.333 721 231 cv
721 209 li
721 203.667 723.667 201 729 201 cv
cp
0 0 0 rgb
@
769 201 mo
791 201 li
796.333 201 799 203.667 799 209 cv
799 231 li
799 236.333 796.333 239 791 239 cv
769 239 li
763.667 239 761 236.333 761 231 cv
761 209 li
761 203.667 763.667 201 769 201 cv
cp
0 .584314 .847059 rgb
f
769 201 mo
791 201 li
796.333 201 799 203.667 799 209 cv
799 231 li
799 236.333 796.333 239 791 239 cv
769 239 li
763.667 239 761 236.333 761 231 cv
761 209 li
761 203.667 763.667 201 769 201 cv
cp
0 0 0 rgb
@
809 201 mo
831 201 li
836.333 201 839 203.667 839 209 cv
839 231 li
839 236.333 836.333 239 831 239 cv
809 239 li
803.667 239 801 236.333 801 231 cv
801 209 li
801 203.667 803.667 201 809 201 cv
cp
.415686 1 1 rgb
f
809 201 mo
831 201 li
836.333 201 839 203.667 839 209 cv
839 231 li
839 236.333 836.333 239 831 239 cv
809 239 li
803.667 239 801 236.333 801 231 cv
801 209 li
801 203.667 803.667 201 809 201 cv
cp
0 0 0 rgb
@
849 201 mo
871 201 li
876.333 201 879 203.667 879 209 cv
879 231 li
879 236.333 876.333 239 871 239 cv
849 239 li
843.667 239 841 236.333 841 231 cv
841 209 li
841 203.667 843.667 201 849 201 cv
cp
0 .443137 .780392 rgb
f
849 201 mo
871 201 li
876.333 201 879 203.667 879 209 cv
879 231 li
879 236.333 876.333 239 871 239 cv
849 239 li
843.667 239 841 236.333 841 231 cv
841 209 li
841 203.667 843.667 201 849 201 cv
cp
0 0 0 rgb
@
889 201 mo
911 201 li
916.333 201 919 203.667 919 209 cv
919 231 li
919 236.333 916.333 239 911 239 cv
889 239 li
883.667 239 881 236.333 881 231 cv
881 209 li
881 203.667 883.667 201 889 201 cv
cp
0 .698039 .85098 rgb
f
889 201 mo
911 201 li
916.333 201 919 203.667 919 209 cv
919 231 li
919 236.333 916.333 239 911 239 cv
889 239 li
883.667 239 881 236.333 881 231 cv
881 209 li
881 203.667 883.667 201 889 201 cv
cp
0 0 0 rgb
@
929 201 mo
951 201 li
956.333 201 959 203.667 959 209 cv
959 231 li
959 236.333 956.333 239 951 239 cv
929 239 li
923.667 239 921 236.333 921 231 cv
921 209 li
921 203.667 923.667 201 929 201 cv
cp
.109804 .745098 1 rgb
f
929 201 mo
951 201 li
956.333 201 959 203.667 959 209 cv
959 231 li
959 236.333 956.333 239 951 239 cv
929 239 li
923.667 239 921 236.333 921 231 cv
921 209 li
921 203.667 923.667 201 929 201 cv
cp
0 0 0 rgb
@
969 201 mo
991 201 li
996.333 201 999 203.667 999 209 cv
999 231 li
999 236.333 996.333 239 991 239 cv
969 239 li
963.667 239 961 236.333 961 231 cv
961 209 li
961 203.667 963.667 201 969 201 cv
cp
.156863 .729412 .976471 rgb
f
969 201 mo
991 201 li
996.333 201 999 203.667 999 209 cv
999 231 li
999 236.333 996.333 239 991 239 cv
969 239 li
963.667 239 961 236.333 961 231 cv
961 209 li
961 203.667 963.667 201 969 201 cv
cp
0 0 0 rgb
@
9 241 mo
31 241 li
36.3335 241 39 243.667 39 249 cv
39 271 li
39 276.333 36.3335 279 31 279 cv
9 279 li
3.6665 279 1 276.333 1 271 cv
1 249 li
1 243.667 3.6665 241 9 241 cv
cp
0 .541176 .752941 rgb
f
9 241 mo
31 241 li
36.3335 241 39 243.667 39 249 cv
39 271 li
39 276.333 36.3335 279 31 279 cv
9 279 li
3.6665 279 1 276.333 1 271 cv
1 249 li
1 243.667 3.6665 241 9 241 cv
cp
0 0 0 rgb
@
49 241 mo
71 241 li
76.3335 241 79 243.667 79 249 cv
79 271 li
79 276.333 76.3335 279 71 279 cv
49 279 li
43.6665 279 41 276.333 41 271 cv
41 249 li
41 243.667 43.6665 241 49 241 cv
cp
.227451 .870588 1 rgb
f
49 241 mo
71 241 li
76.3335 241 79 243.667 79 249 cv
79 271 li
79 276.333 76.3335 279 71 279 cv
49 279 li
43.6665 279 41 276.333 41 271 cv
41 249 li
41 243.667 43.6665 241 49 241 cv
cp
0 0 0 rgb
@
89 241 mo
111 241 li
116.333 241 119 243.667 119 249 cv
119 271 li
119 276.333 116.333 279 111 279 cv
89 279 li
83.6665 279 81 276.333 81 271 cv
81 249 li
81 243.667 83.6665 241 89 241 cv
cp
.415686 1 1 rgb
f
89 241 mo
111 241 li
116.333 241 119 243.667 119 249 cv
119 271 li
119 276.333 116.333 279 111 279 cv
89 279 li
83.6665 279 81 276.333 81 271 cv
81 249 li
81 243.667 83.6665 241 89 241 cv
cp
0 0 0 rgb
@
129 241 mo
151 241 li
156.333 241 159 243.667 159 249 cv
159 271 li
159 276.333 156.333 279 151 279 cv
129 279 li
123.667 279 121 276.333 121 271 cv
121 249 li
121 243.667 123.667 241 129 241 cv
cp
.309804 .894118 1 rgb
f
129 241 mo
151 241 li
156.333 241 159 243.667 159 249 cv
159 271 li
159 276.333 156.333 279 151 279 cv
129 279 li
123.667 279 121 276.333 121 271 cv
121 249 li
121 243.667 123.667 241 129 241 cv
cp
0 0 0 rgb
@
169 241 mo
191 241 li
196.333 241 199 243.667 199 249 cv
199 271 li
199 276.333 196.333 279 191 279 cv
169 279 li
163.667 279 161 276.333 161 271 cv
161 249 li
161 243.667 163.667 241 169 241 cv
cp
0 .615686 .815686 rgb
f
169 241 mo
191 241 li
196.333 241 199 243.667 199 249 cv
199 271 li
199 276.333 196.333 279 191 279 cv
169 279 li
163.667 279 161 276.333 161 271 cv
161 249 li
161 243.667 163.667 241 169 241 cv
cp
0 0 0 rgb
@
209 241 mo
231 241 li
236.333 241 239 243.667 239 249 cv
239 271 li
239 276.333 236.333 279 231 279 cv
209 279 li
203.667 279 201 276.333 201 271 cv
201 249 li
201 243.667 203.667 241 209 241 cv
cp
.168627 .921569 1 rgb
f
209 241 mo
231 241 li
236.333 241 239 243.667 239 249 cv
239 271 li
239 276.333 236.333 279 231 279 cv
209 279 li
203.667 279 201 276.333 201 271 cv
201 249 li
201 243.667 203.667 241 209 241 cv
cp
0 0 0 rgb
@
249 241 mo
271 241 li
276.333 241 279 243.667 279 249 cv
279 271 li
279 276.333 276.333 279 271 279 cv
249 279 li
243.667 279 241 276.333 241 271 cv
241 249 li
241 243.667 243.667 241 249 241 cv
cp
.12549 .615686 .854902 rgb
f
249 241 mo
271 241 li
276.333 241 279 243.667 279 249 cv
279 271 li
279 276.333 276.333 279 271 279 cv
249 279 li
243.667 279 241 276.333 241 271 cv
241 249 li
241 243.667 243.667 241 249 241 cv
cp
0 0 0 rgb
@
289 241 mo
311 241 li
316.333 241 319 243.667 319 249 cv
319 271 li
319 276.333 316.333 279 311 279 cv
289 279 li
283.667 279 281 276.333 281 271 cv
281 249 li
281 243.667 283.667 241 289 241 cv
cp
.313726 1 1 rgb
f
289 241 mo
311 241 li
316.333 241 319 243.667 319 249 cv
319 271 li
319 276.333 316.333 279 311 279 cv
289 279 li
283.667 279 281 276.333 281 271 cv
281 249 li
281 243.667 283.667 241 289 241 cv
cp
0 0 0 rgb
@
329 241 mo
351 241 li
356.333 241 359 243.667 359 249 cv
359 271 li
359 276.333 356.333 279 351 279 cv
329 279 li
323.667 279 321 276.333 321 271 cv
321 249 li
321 243.667 323.667 241 329 241 cv
cp
.392157 1 1 rgb
f
329 241 mo
351 241 li
356.333 241 359 243.667 359 249 cv
359 271 li
359 276.333 356.333 279 351 279 cv
329 279 li
323.667 279 321 276.333 321 271 cv
321 249 li
321 243.667 323.667 241 329 241 cv
cp
0 0 0 rgb
@
369 241 mo
391 241 li
396.333 241 399 243.667 399 249 cv
399 271 li
399 276.333 396.333 279 391 279 cv
369 279 li
363.667 279 361 276.333 361 271 cv
361 249 li
361 243.667 363.667 241 369 241 cv
cp
0 .67451 .827451 rgb
f
369 241 mo
391 241 li
396.333 241 399 243.667 399 249 cv
399 271 li
399 276.333 396.333 279 391 279 cv
369 279 li
363.667 279 361 276.333 361 271 cv
361 249 li
361 243.667 363.667 241 369 241 cv
cp
0 0 0 rgb
@
409 241 mo
431 241 li
436.333 241 439 243.667 439 249 cv
439 271 li
439 276.333 436.333 279 431 279 cv
409 279 li
403.667 279 401 276.333 401 271 cv
401 249 li
401 243.667 403.667 241 409 241 cv
cp
0 .509804 .72549 rgb
f
409 241 mo
431 241 li
436.333 241 439 243.667 439 249 cv
439 271 li
439 276.333 436.333 279 431 279 cv
409 279 li
403.667 279 401 276.333 401 271 cv
401 249 li
401 243.667 403.667 241 409 241 cv
cp
0 0 0 rgb
@
449 241 mo
471 241 li
476.333 241 479 243.667 479 249 cv
479 271 li
479 276.333 476.333 279 471 279 cv
449 279 li
443.667 279 441 276.333 441 271 cv
441 249 li
441 243.667 443.667 241 449 241 cv
cp
.176471 .85098 1 rgb
f
449 241 mo
471 241 li
476.333 241 479 243.667 479 249 cv
479 271 li
479 276.333 476.333 279 471 279 cv
449 279 li
443.667 279 441 276.333 441 271 cv
441 249 li
441 243.667 443.667 241 449 241 cv
cp
0 0 0 rgb
@
489 241 mo
511 241 li
516.333 241 519 243.667 519 249 cv
519 271 li
519 276.333 516.333 279 511 279 cv
489 279 li
483.667 279 481 276.333 481 271 cv
481 249 li
481 243.667 483.667 241 489 241 cv
cp
.0745098 .670588 1 rgb
f
489 241 mo
511 241 li
516.333 241 519 243.667 519 249 cv
519 271 li
519 276.333 516.333 279 511 279 cv
489 279 li
483.667 279 481 276.333 481 271 cv
481 249 li
481 243.667 483.667 241 489 241 cv
cp
0 0 0 rgb
@
529 241 mo
551 241 li
556.333 241 559 243.667 559 249 cv
559 271 li
559 276.333 556.333 279 551 279 cv
529 279 li
523.667 279 521 276.333 521 271 cv
521 249 li
521 243.667 523.667 241 529 241 cv
cp
.341176 .854902 1 rgb
f
529 241 mo
551 241 li
556.333 241 559 243.667 559 249 cv
559 271 li
559 276.333 556.333 279 551 279 cv
529 279 li
523.667 279 521 276.333 521 271 cv
521 249 li
521 243.667 523.667 241 529 241 cv
cp
0 0 0 rgb
@
569 241 mo
591 241 li
596.333 241 599 243.667 599 249 cv
599 271 li
599 276.333 596.333 279 591 279 cv
569 279 li
563.667 279 561 276.333 561 271 cv
561 249 li
561 243.667 563.667 241 569 241 cv
cp
0 .552941 .854902 rgb
f
569 241 mo
591 241 li
596.333 241 599 243.667 599 249 cv
599 271 li
599 276.333 596.333 279 591 279 cv
569 279 li
563.667 279 561 276.333 561 271 cv
561 249 li
561 243.667 563.667 241 569 241 cv
cp
0 0 0 rgb
@
609 241 mo
631 241 li
636.333 241 639 243.667 639 249 cv
639 271 li
639 276.333 636.333 279 631 279 cv
609 279 li
603.667 279 601 276.333 601 271 cv
601 249 li
601 243.667 603.667 241 609 241 cv
cp
0 .470588 .686275 rgb
f
609 241 mo
631 241 li
636.333 241 639 243.667 639 249 cv
639 271 li
639 276.333 636.333 279 631 279 cv
609 279 li
603.667 279 601 276.333 601 271 cv
601 249 li
601 243.667 603.667 241 609 241 cv
cp
0 0 0 rgb
@
649 241 mo
671 241 li
676.333 241 679 243.667 679 249 cv
679 271 li
679 276.333 676.333 279 671 279 cv
649 279 li
643.667 279 641 276.333 641 271 cv
641 249 li
641 243.667 643.667 241 649 241 cv
cp
.0627451 .654902 .776471 rgb
f
649 241 mo
671 241 li
676.333 241 679 243.667 679 249 cv
679 271 li
679 276.333 676.333 279 671 279 cv
649 279 li
643.667 279 641 276.333 641 271 cv
641 249 li
641 243.667 643.667 241 649 241 cv
cp
0 0 0 rgb
@
689 241 mo
711 241 li
716.333 241 719 243.667 719 249 cv
719 271 li
719 276.333 716.333 279 711 279 cv
689 279 li
683.667 279 681 276.333 681 271 cv
681 249 li
681 243.667 683.667 241 689 241 cv
cp
.4 1 1 rgb
f
689 241 mo
711 241 li
716.333 241 719 243.667 719 249 cv
719 271 li
719 276.333 716.333 279 711 279 cv
689 279 li
683.667 279 681 276.333 681 271 cv
681 249 li
681 243.667 683.667 241 689 241 cv
cp
0 0 0 rgb
@
729 241 mo
751 241 li
756.333 241 759 243.667 759 249 cv
759 271 li
759 276.333 756.333 279 751 279 cv
729 279 li
723.667 279 721 276.333 721 271 cv
721 249 li
721 243.667 723.667 241 729 241 cv
cp
.0431373 .752941 .898039 rgb
f
729 241 mo
751 241 li
756.333 241 759 243.667 759 249 cv
759 271 li
759 276.333 756.333 279 751 279 cv
729 279 li
723.667 279 721 276.333 721 271 cv
721 249 li
721 243.667 723.667 241 729 241 cv
cp
0 0 0 rgb
@
769 241 mo
791 241 li
796.333 241 799 243.667 799 249 cv
799 271 li
799 276.333 796.333 279 791 279 cv
769 279 li
763.667 279 761 276.333 761 271 cv
761 249 li
761 243.667 763.667 241 769 241 cv
cp
.0196078 .690196 1 rgb
f
769 241 mo
791 241 li
796.333 241 799 243.667 799 249 cv
799 271 li
799 276.333 796.333 279 791 279 cv
769 279 li
763.667 279 761 276.333 761 271 cv
761 249 li
761 243.667 763.667 241 769 241 cv
cp
0 0 0 rgb
@
809 241 mo
831 241 li
836.333 241 839 243.667 839 249 cv
839 271 li
839 276.333 836.333 279 831 279 cv
809 279 li
803.667 279 801 276.333 801 271 cv
801 249 li
801 243.667 803.667 241 809 241 cv
cp
.00784314 .615686 .992157 rgb
f
809 241 mo
831 241 li
836.333 241 839 243.667 839 249 cv
839 271 li
839 276.333 836.333 279 831 279 cv
809 279 li
803.667 279 801 276.333 801 271 cv
801 249 li
801 243.667 803.667 241 809 241 cv
cp
0 0 0 rgb
@
849 241 mo
871 241 li
876.333 241 879 243.667 879 249 cv
879 271 li
879 276.333 876.333 279 871 279 cv
849 279 li
843.667 279 841 276.333 841 271 cv
841 249 li
841 243.667 843.667 241 849 241 cv
cp
.317647 .85098 1 rgb
f
849 241 mo
871 241 li
876.333 241 879 243.667 879 249 cv
879 271 li
879 276.333 876.333 279 871 279 cv
849 279 li
843.667 279 841 276.333 841 271 cv
841 249 li
841 243.667 843.667 241 849 241 cv
cp
0 0 0 rgb
@
889 241 mo
911 241 li
916.333 241 919 243.667 919 249 cv
919 271 li
919 276.333 916.333 279 911 279 cv
889 279 li
883.667 279 881 276.333 881 271 cv
881 249 li
881 243.667 883.667 241 889 241 cv
cp
0 .376471 .654902 rgb
f
889 241 mo
911 241 li
916.333 241 919 243.667 919 249 cv
919 271 li
919 276.333 916.333 279 911 279 cv
889 279 li
883.667 279 881 276.333 881 271 cv
881 249 li
881 243.667 883.667 241 889 241 cv
cp
0 0 0 rgb
@
929 241 mo
951 241 li
956.333 241 959 243.667 959 249 cv
959 271 li
959 276.333 956.333 279 951 279 cv
929 279 li
923.667 279 921 276.333 921 271 cv
921 249 li
921 243.667 923.667 241 929 241 cv
cp
0 .615686 .956863 rgb
f
929 241 mo
951 241 li
956.333 241 959 243.667 959 249 cv
959 271 li
959 276.333 956.333 279 951 279 cv
929 279 li
923.667 279 921 276.333 921 271 cv
921 249 li
921 243.667 923.667 241 929 241 cv
cp
0 0 0 rgb
@
969 241 mo
991 241 li
996.333 241 999 243.667 999 249 cv
999 271 li
999 276.333 996.333 279 991 279 cv
969 279 li
963.667 279 961 276.333 961 271 cv
961 249 li
961 243.667 963.667 241 969 241 cv
cp
.258824 .905882 1 rgb
f
969 241 mo
991 241 li
996.333 241 999 243.667 999 249 cv
999 271 li
999 276.333 996.333 279 991 279 cv
969 279 li
963.667 279 961 276.333 961 271 cv
961 249 li
961 243.667 963.667 241 969 241 cv
cp
0 0 0 rgb
@
9 281 mo
31 281 li
36.3335 281 39 283.667 39 289 cv
39 311 li
39 316.333 36.3335 319 31 319 cv
9 319 li
3.6665 319 1 316.333 1 311 cv
1 289 li
1 283.667 3.6665 281 9 281 cv
cp
0 .490196 .839216 rgb
f
9 281 mo
31 281 li
36.3335 281 39 283.667 39 289 cv
39 311 li
39 316.333 36.3335 319 31 319 cv
9 319 li
3.6665 319 1 316.333 1 311 cv
1 289 li
1 283.667 3.6665 281 9 281 cv
cp
0 0 0 rgb
@
49 281 mo
71 281 li
76.3335 281 79 283.667 79 289 cv
79 311 li
79 316.333 76.3335 319 71 319 cv
49 319 li
43.6665 319 41 316.333 41 311 cv
41 289 li
41 283.667 43.6665 281 49 281 cv
cp
.270588 .878431 1 rgb
f
49 281 mo
71 281 li
76.3335 281 79 283.667 79 289 cv
79 311 li
79 316.333 76.3335 319 71 319 cv
49 319 li
43.6665 319 41 316.333 41 311 cv
41 289 li
41 283.667 43.6665 281 49 281 cv
cp
0 0 0 rgb
@
89 281 mo
111 281 li
116.333 281 119 283.667 119 289 cv
119 311 li
119 316.333 116.333 319 111 319 cv
89 319 li
83.6665 319 81 316.333 81 311 cv
81 289 li
81 283.667 83.6665 281 89 281 cv
cp
0 .427451 .72549 rgb
f
89 281 mo
111 281 li
116.333 281 119 283.667 119 289 cv
119 311 li
119 316.333 116.333 319 111 319 cv
89 319 li
83.6665 319 81 316.333 81 311 cv
81 289 li
81 283.667 83.6665 281 89 281 cv
cp
0 0 0 rgb
@
129 281 mo
151 281 li
156.333 281 159 283.667 159 289 cv
159 311 li
159 316.333 156.333 319 151 319 cv
129 319 li
123.667 319 121 316.333 121 311 cv
121 289 li
121 283.667 123.667 281 129 281 cv
cp
0 .627451 .776471 rgb
f
129 281 mo
151 281 li
156.333 281 159 283.667 159 289 cv
159 311 li
159 316.333 156.333 319 151 319 cv
129 319 li
123.667 319 121 316.333 121 311 cv
121 289 li
121 283.667 123.667 281 129 281 cv
cp
0 0 0 rgb
@
169 281 mo
191 281 li
196.333 281 199 283.667 199 289 cv
199 311 li
199 316.333 196.333 319 191 319 cv
169 319 li
163.667 319 161 316.333 161 311 cv
161 289 li
161 283.667 163.667 281 169 281 cv
cp
.0901961 .733333 .921569 rgb
f
169 281 mo
191 281 li
196.333 281 199 283.667 199 289 cv
199 311 li
199 316.333 196.333 319 191 319 cv
169 319 li
163.667 319 161 316.333 161 311 cv
161 289 li
161 283.667 163.667 281 169 281 cv
cp
0 0 0 rgb
@
209 281 mo
231 281 li
236.333 281 239 283.667 239 289 cv
239 311 li
239 316.333 236.333 319 231 319 cv
209 319 li
203.667 319 201 316.333 201 311 cv
201 289 li
201 283.667 203.667 281 209 281 cv
cp
.0470588 .815686 .980392 rgb
f
209 281 mo
231 281 li
236.333 281 239 283.667 239 289 cv
239 311 li
239 316.333 236.333 319 231 319 cv
209 319 li
203.667 319 201 316.333 201 311 cv
201 289 li
201 283.667 203.667 281 209 281 cv
cp
0 0 0 rgb
@
249 281 mo
271 281 li
276.333 281 279 283.667 279 289 cv
279 311 li
279 316.333 276.333 319 271 319 cv
249 319 li
243.667 319 241 316.333 241 311 cv
241 289 li
241 283.667 243.667 281 249 281 cv
cp
.0823529 .658824 1 rgb
f
249 281 mo
271 281 li
276.333 281 279 283.667 279 289 cv
279 311 li
279 316.333 276.333 319 271 319 cv
249 319 li
243.667 319 241 316.333 241 311 cv
241 289 li
241 283.667 243.667 281 249 281 cv
cp
0 0 0 rgb
@
289 281 mo
311 281 li
316.333 281 319 283.667 319 289 cv
319 311 li
319 316.333 316.333 319 311 319 cv
289 319 li
283.667 319 281 316.333 281 311 cv
281 289 li
281 283.667 283.667 281 289 281 cv
cp
0 .498039 .701961 rgb
f
289 281 mo
311 281 li
316.333 281 319 283.667 319 289 cv
319 311 li
319 316.333 316.333 319 311 319 cv
289 319 li
283.667 319 281 316.333 281 311 cv
281 289 li
281 283.667 283.667 281 289 281 cv
cp
0 0 0 rgb
@
329 281 mo
351 281 li
356.333 281 359 283.667 359 289 cv
359 311 li
359 316.333 356.333 319 351 319 cv
329 319 li
323.667 319 321 316.333 321 311 cv
321 289 li
321 283.667 323.667 281 329 281 cv
cp
.12549 .858824 .996078 rgb
f
329 281 mo
351 281 li
356.333 281 359 283.667 359 289 cv
359 311 li
359 316.333 356.333 319 351 319 cv
329 319 li
323.667 319 321 316.333 321 311 cv
321 289 li
321 283.667 323.667 281 329 281 cv
cp
0 0 0 rgb
@
369 281 mo
391 281 li
396.333 281 399 283.667 399 289 cv
399 311 li
399 316.333 396.333 319 391 319 cv
369 319 li
363.667 319 361 316.333 361 311 cv
361 289 li
361 283.667 363.667 281 369 281 cv
cp
.121569 .898039 .996078 rgb
f
369 281 mo
391 281 li
396.333 281 399 283.667 399 289 cv
399 311 li
399 316.333 396.333 319 391 319 cv
369 319 li
363.667 319 361 316.333 361 311 cv
361 289 li
361 283.667 363.667 281 369 281 cv
cp
0 0 0 rgb
@
409 281 mo
431 281 li
436.333 281 439 283.667 439 289 cv
439 311 li
439 316.333 436.333 319 431 319 cv
409 319 li
403.667 319 401 316.333 401 311 cv
401 289 li
401 283.667 403.667 281 409 281 cv
cp
.180392 .768627 .964706 rgb
f
409 281 mo
431 281 li
436.333 281 439 283.667 439 289 cv
439 311 li
439 316.333 436.333 319 431 319 cv
409 319 li
403.667 319 401 316.333 401 311 cv
401 289 li
401 283.667 403.667 281 409 281 cv
cp
0 0 0 rgb
@
449 281 mo
471 281 li
476.333 281 479 283.667 479 289 cv
479 311 li
479 316.333 476.333 319 471 319 cv
449 319 li
443.667 319 441 316.333 441 311 cv
441 289 li
441 283.667 443.667 281 449 281 cv
cp
0 .341176 .713726 rgb
f
449 281 mo
471 281 li
476.333 281 479 283.667 479 289 cv
479 311 li
479 316.333 476.333 319 471 319 cv
449 319 li
443.667 319 441 316.333 441 311 cv
441 289 li
441 283.667 443.667 281 449 281 cv
cp
0 0 0 rgb
@
489 281 mo
511 281 li
516.333 281 519 283.667 519 289 cv
519 311 li
519 316.333 516.333 319 511 319 cv
489 319 li
483.667 319 481 316.333 481 311 cv
481 289 li
481 283.667 483.667 281 489 281 cv
cp
.0156863 .505882 .882353 rgb
f
489 281 mo
511 281 li
516.333 281 519 283.667 519 289 cv
519 311 li
519 316.333 516.333 319 511 319 cv
489 319 li
483.667 319 481 316.333 481 311 cv
481 289 li
481 283.667 483.667 281 489 281 cv
cp
0 0 0 rgb
@
529 281 mo
551 281 li
556.333 281 559 283.667 559 289 cv
559 311 li
559 316.333 556.333 319 551 319 cv
529 319 li
523.667 319 521 316.333 521 311 cv
521 289 li
521 283.667 523.667 281 529 281 cv
cp
0 .411765 .552941 rgb
f
529 281 mo
551 281 li
556.333 281 559 283.667 559 289 cv
559 311 li
559 316.333 556.333 319 551 319 cv
529 319 li
523.667 319 521 316.333 521 311 cv
521 289 li
521 283.667 523.667 281 529 281 cv
cp
0 0 0 rgb
@
569 281 mo
591 281 li
596.333 281 599 283.667 599 289 cv
599 311 li
599 316.333 596.333 319 591 319 cv
569 319 li
563.667 319 561 316.333 561 311 cv
561 289 li
561 283.667 563.667 281 569 281 cv
cp
0 .580392 .894118 rgb
f
569 281 mo
591 281 li
596.333 281 599 283.667 599 289 cv
599 311 li
599 316.333 596.333 319 591 319 cv
569 319 li
563.667 319 561 316.333 561 311 cv
561 289 li
561 283.667 563.667 281 569 281 cv
cp
0 0 0 rgb
@
609 281 mo
631 281 li
636.333 281 639 283.667 639 289 cv
639 311 li
639 316.333 636.333 319 631 319 cv
609 319 li
603.667 319 601 316.333 601 311 cv
601 289 li
601 283.667 603.667 281 609 281 cv
cp
0 .521569 .811765 rgb
f
609 281 mo
631 281 li
636.333 281 639 283.667 639 289 cv
639 311 li
639 316.333 636.333 319 631 319 cv
609 319 li
603.667 319 601 316.333 601 311 cv
601 289 li
601 283.667 603.667 281 609 281 cv
cp
0 0 0 rgb
@
649 281 mo
671 281 li
676.333 281 679 283.667 679 289 cv
679 311 li
679 316.333 676.333 319 671 319 cv
649 319 li
643.667 319 641 316.333 641 311 cv
641 289 li
641 283.667 643.667 281 649 281 cv
cp
.313726 .937255 1 rgb
f
649 281 mo
671 281 li
676.333 281 679 283.667 679 289 cv
679 311 li
679 316.333 676.333 319 671 319 cv
649 319 li
643.667 319 641 316.333 641 311 cv
641 289 li
641 283.667 643.667 281 649 281 cv
cp
0 0 0 rgb
@
689 281 mo
711 281 li
716.333 281 719 283.667 719 289 cv
719 311 li
719 316.333 716.333 319 711 319 cv
689 319 li
683.667 319 681 316.333 681 311 cv
681 289 li
681 283.667 683.667 281 689 281 cv
cp
.129412 .803922 .921569 rgb
f
689 281 mo
711 281 li
716.333 281 719 283.667 719 289 cv
719 311 li
719 316.333 716.333 319 711 319 cv
689 319 li
683.667 319 681 316.333 681 311 cv
681 289 li
681 283.667 683.667 281 689 281 cv
cp
0 0 0 rgb
@
729 281 mo
751 281 li
756.333 281 759 283.667 759 289 cv
759 311 li
759 316.333 756.333 319 751 319 cv
729 319 li
723.667 319 721 316.333 721 311 cv
721 289 li
721 283.667 723.667 281 729 281 cv
cp
0 .27451 .635294 rgb
f
729 281 mo
751 281 li
756.333 281 759 283.667 759 289 cv
759 311 li
759 316.333 756.333 319 751 319 cv
729 319 li
723.667 319 721 316.333 721 311 cv
721 289 li
721 283.667 723.667 281 729 281 cv
cp
0 0 0 rgb
@
769 281 mo
791 281 li
796.333 281 799 283.667 799 289 cv
799 311 li
799 316.333 796.333 319 791 319 cv
769 319 li
763.667 319 761 316.333 761 311 cv
761 289 li
761 283.667 763.667 281 769 281 cv
cp
.207843 .854902 1 rgb
f
769 281 mo
791 281 li
796.333 281 799 283.667 799 289 cv
799 311 li
799 316.333 796.333 319 791 319 cv
769 319 li
763.667 319 761 316.333 761 311 cv
761 289 li
761 283.667 763.667 281 769 281 cv
cp
0 0 0 rgb
@
809 281 mo
831 281 li
836.333 281 839 283.667 839 289 cv
839 311 li
839 316.333 836.333 319 831 319 cv
809 319 li
803.667 319 801 316.333 801 311 cv
801 289 li
801 283.667 803.667 281 809 281 cv
cp
.290196 1 1 rgb
f
809 281 mo
831 281 li
836.333 281 839 283.667 839 289 cv
839 311 li
839 316.333 836.333 319 831 319 cv
809 319 li
803.667 319 801 316.333 801 311 cv
801 289 li
801 283.667 803.667 281 809 281 cv
cp
0 0 0 rgb
@
849 281 mo
871 281 li
876.333 281 879 283.667 879 289 cv
879 311 li
879 316.333 876.333 319 871 319 cv
849 319 li
843.667 319 841 316.333 841 311 cv
841 289 li
841 283.667 843.667 281 849 281 cv
cp
0 .623529 .827451 rgb
f
849 281 mo
871 281 li
876.333 281 879 283.667 879 289 cv
879 311 li
879 316.333 876.333 319 871 319 cv
849 319 li
843.667 319 841 316.333 841 311 cv
841 289 li
841 283.667 843.667 281 849 281 cv
cp
0 0 0 rgb
@
889 281 mo
911 281 li
916.333 281 919 283.667 919 289 cv
919 311 li
919 316.333 916.333 319 911 319 cv
889 319 li
883.667 319 881 316.333 881 311 cv
881 289 li
881 283.667 883.667 281 889 281 cv
cp
0 .568627 .737255 rgb
f
889 281 mo
911 281 li
916.333 281 919 283.667 919 289 cv
919 311 li
919 316.333 916.333 319 911 319 cv
889 319 li
883.667 319 881 316.333 881 311 cv
881 289 li
881 283.667 883.667 281 889 281 cv
cp
0 0 0 rgb
@
929 281 mo
951 281 li
956.333 281 959 283.667 959 289 cv
959 311 li
959 316.333 956.333 319 951 319 cv
929 319 li
923.667 319 921 316.333 921 311 cv
921 289 li
921 283.667 923.667 281 929 281 cv
cp
0 .611765 .72549 rgb
f
929 281 mo
951 281 li
956.333 281 959 283.667 959 289 cv
959 311 li
959 316.333 956.333 319 951 319 cv
929 319 li
923.667 319 921 316.333 921 311 cv
921 289 li
921 283.667 923.667 281 929 281 cv
cp
0 0 0 rgb
@
969 281 mo
991 281 li
996.333 281 999 283.667 999 289 cv
999 311 li
999 316.333 996.333 319 991 319 cv
969 319 li
963.667 319 961 316.333 961 311 cv
961 289 li
961 283.667 963.667 281 969 281 cv
cp
.301961 .905882 1 rgb
f
969 281 mo
991 281 li
996.333 281 999 283.667 999 289 cv
999 311 li
999 316.333 996.333 319 991 319 cv
969 319 li
963.667 319 961 316.333 961 311 cv
961 289 li
961 283.667 963.667 281 969 281 cv
cp
0 0 0 rgb
@
9 321 mo
31 321 li
36.3335 321 39 323.667 39 329 cv
39 351 li
39 356.333 36.3335 359 31 359 cv
9 359 li
3.6665 359 1 356.333 1 351 cv
1 329 li
1 323.667 3.6665 321 9 321 cv
cp
0 .596078 .819608 rgb
f
9 321 mo
31 321 li
36.3335 321 39 323.667 39 329 cv
39 351 li
39 356.333 36.3335 359 31 359 cv
9 359 li
3.6665 359 1 356.333 1 351 cv
1 329 li
1 323.667 3.6665 321 9 321 cv
cp
0 0 0 rgb
@
49 321 mo
71 321 li
76.3335 321 79 323.667 79 329 cv
79 351 li
79 356.333 76.3335 359 71 359 cv
49 359 li
43.6665 359 41 356.333 41 351 cv
41 329 li
41 323.667 43.6665 321 49 321 cv
cp
0 .568627 .827451 rgb
f
49 321 mo
71 321 li
76.3335 321 79 323.667 79 329 cv
79 351 li
79 356.333 76.3335 359 71 359 cv
49 359 li
43.6665 359 41 356.333 41 351 cv
41 329 li
41 323.667 43.6665 321 49 321 cv
cp
0 0 0 rgb
@
89 321 mo
111 321 li
116.333 321 119 323.667 119 329 cv
119 351 li
119 356.333 116.333 359 111 359 cv
89 359 li
83.6665 359 81 356.333 81 351 cv
81 329 li
81 323.667 83.6665 321 89 321 cv
cp
0 .521569 .713726 rgb
f
89 321 mo
111 321 li
116.333 321 119 323.667 119 329 cv
119 351 li
119 356.333 116.333 359 111 359 cv
89 359 li
83.6665 359 81 356.333 81 351 cv
81 329 li
81 323.667 83.6665 321 89 321 cv
cp
0 0 0 rgb
@
129 321 mo
151 321 li
156.333 321 159 323.667 159 329 cv
159 351 li
159 356.333 156.333 359 151 359 cv
129 359 li
123.667 359 121 356.333 121 351 cv
121 329 li
121 323.667 123.667 321 129 321 cv
cp
0 .615686 .917647 rgb
f
129 321 mo
151 321 li
156.333 321 159 323.667 159 329 cv
159 351 li
159 356.333 156.333 359 151 359 cv
129 359 li
123.667 359 121 356.333 121 351 cv
121 329 li
121 323.667 123.667 321 129 321 cv
cp
0 0 0 rgb
@
169 321 mo
191 321 li
196.333 321 199 323.667 199 329 cv
199 351 li
199 356.333 196.333 359 191 359 cv
169 359 li
163.667 359 161 356.333 161 351 cv
161 329 li
161 323.667 163.667 321 169 321 cv
cp
.113725 .721569 .901961 rgb
f
169 321 mo
191 321 li
196.333 321 199 323.667 199 329 cv
199 351 li
199 356.333 196.333 359 191 359 cv
169 359 li
163.667 359 161 356.333 161 351 cv
161 329 li
161 323.667 163.667 321 169 321 cv
cp
0 0 0 rgb
@
209 321 mo
231 321 li
236.333 321 239 323.667 239 329 cv
239 351 li
239 356.333 236.333 359 231 359 cv
209 359 li
203.667 359 201 356.333 201 351 cv
201 329 li
201 323.667 203.667 321 209 321 cv
cp
.372549 .992157 1 rgb
f
209 321 mo
231 321 li
236.333 321 239 323.667 239 329 cv
239 351 li
239 356.333 236.333 359 231 359 cv
209 359 li
203.667 359 201 356.333 201 351 cv
201 329 li
201 323.667 203.667 321 209 321 cv
cp
0 0 0 rgb
@
249 321 mo
271 321 li
276.333 321 279 323.667 279 329 cv
279 351 li
279 356.333 276.333 359 271 359 cv
249 359 li
243.667 359 241 356.333 241 351 cv
241 329 li
241 323.667 243.667 321 249 321 cv
cp
0 .588235 .788235 rgb
f
249 321 mo
271 321 li
276.333 321 279 323.667 279 329 cv
279 351 li
279 356.333 276.333 359 271 359 cv
249 359 li
243.667 359 241 356.333 241 351 cv
241 329 li
241 323.667 243.667 321 249 321 cv
cp
0 0 0 rgb
@
289 321 mo
311 321 li
316.333 321 319 323.667 319 329 cv
319 351 li
319 356.333 316.333 359 311 359 cv
289 359 li
283.667 359 281 356.333 281 351 cv
281 329 li
281 323.667 283.667 321 289 321 cv
cp
.262745 .756863 1 rgb
f
289 321 mo
311 321 li
316.333 321 319 323.667 319 329 cv
319 351 li
319 356.333 316.333 359 311 359 cv
289 359 li
283.667 359 281 356.333 281 351 cv
281 329 li
281 323.667 283.667 321 289 321 cv
cp
0 0 0 rgb
@
329 321 mo
351 321 li
356.333 321 359 323.667 359 329 cv
359 351 li
359 356.333 356.333 359 351 359 cv
329 359 li
323.667 359 321 356.333 321 351 cv
321 329 li
321 323.667 323.667 321 329 321 cv
cp
0 .27451 .521569 rgb
f
329 321 mo
351 321 li
356.333 321 359 323.667 359 329 cv
359 351 li
359 356.333 356.333 359 351 359 cv
329 359 li
323.667 359 321 356.333 321 351 cv
321 329 li
321 323.667 323.667 321 329 321 cv
cp
0 0 0 rgb
@
369 321 mo
391 321 li
396.333 321 399 323.667 399 329 cv
399 351 li
399 356.333 396.333 359 391 359 cv
369 359 li
363.667 359 361 356.333 361 351 cv
361 329 li
361 323.667 363.667 321 369 321 cv
cp
0 .572549 .819608 rgb
f
369 321 mo
391 321 li
396.333 321 399 323.667 399 329 cv
399 351 li
399 356.333 396.333 359 391 359 cv
369 359 li
363.667 359 361 356.333 361 351 cv
361 329 li
361 323.667 363.667 321 369 321 cv
cp
0 0 0 rgb
@
409 321 mo
431 321 li
436.333 321 439 323.667 439 329 cv
439 351 li
439 356.333 436.333 359 431 359 cv
409 359 li
403.667 359 401 356.333 401 351 cv
401 329 li
401 323.667 403.667 321 409 321 cv
cp
.0509804 .807843 .952941 rgb
f
409 321 mo
431 321 li
436.333 321 439 323.667 439 329 cv
439 351 li
439 356.333 436.333 359 431 359 cv
409 359 li
403.667 359 401 356.333 401 351 cv
401 329 li
401 323.667 403.667 321 409 321 cv
cp
0 0 0 rgb
@
449 321 mo
471 321 li
476.333 321 479 323.667 479 329 cv
479 351 li
479 356.333 476.333 359 471 359 cv
449 359 li
443.667 359 441 356.333 441 351 cv
441 329 li
441 323.667 443.667 321 449 321 cv
cp
.215686 .952941 1 rgb
f
449 321 mo
471 321 li
476.333 321 479 323.667 479 329 cv
479 351 li
479 356.333 476.333 359 471 359 cv
449 359 li
443.667 359 441 356.333 441 351 cv
441 329 li
441 323.667 443.667 321 449 321 cv
cp
0 0 0 rgb
@
489 321 mo
511 321 li
516.333 321 519 323.667 519 329 cv
519 351 li
519 356.333 516.333 359 511 359 cv
489 359 li
483.667 359 481 356.333 481 351 cv
481 329 li
481 323.667 483.667 321 489 321 cv
cp
.152941 .882353 .94902 rgb
f
489 321 mo
511 321 li
516.333 321 519 323.667 519 329 cv
519 351 li
519 356.333 516.333 359 511 359 cv
489 359 li
483.667 359 481 356.333 481 351 cv
481 329 li
481 323.667 483.667 321 489 321 cv
cp
0 0 0 rgb
@
529 321 mo
551 321 li
556.333 321 559 323.667 559 329 cv
559 351 li
559 356.333 556.333 359 551 359 cv
529 359 li
523.667 359 521 356.333 521 351 cv
521 329 li
521 323.667 523.667 321 529 321 cv
cp
.00392157 .756863 .898039 rgb
f
529 321 mo
551 321 li
556.333 321 559 323.667 559 329 cv
559 351 li
559 356.333 556.333 359 551 359 cv
529 359 li
523.667 359 521 356.333 521 351 cv
521 329 li
521 323.667 523.667 321 529 321 cv
cp
0 0 0 rgb
@
569 321 mo
591 321 li
596.333 321 599 323.667 599 329 cv
599 351 li
599 356.333 596.333 359 591 359 cv
569 359 li
563.667 359 561 356.333 561 351 cv
561 329 li
561 323.667 563.667 321 569 321 cv
cp
0 .454902 .65098 rgb
f
569 321 mo
591 321 li
596.333 321 599 323.667 599 329 cv
599 351 li
599 356.333 596.333 359 591 359 cv
569 359 li
563.667 359 561 356.333 561 351 cv
561 329 li
561 323.667 563.667 321 569 321 cv
cp
0 0 0 rgb
@
609 321 mo
631 321 li
636.333 321 639 323.667 639 329 cv
639 351 li
639 356.333 636.333 359 631 359 cv
609 359 li
603.667 359 601 356.333 601 351 cv
601 329 li
601 323.667 603.667 321 609 321 cv
cp
.0235294 .670588 .843137 rgb
f
609 321 mo
631 321 li
636.333 321 639 323.667 639 329 cv
639 351 li
639 356.333 636.333 359 631 359 cv
609 359 li
603.667 359 601 356.333 601 351 cv
601 329 li
601 323.667 603.667 321 609 321 cv
cp
0 0 0 rgb
@
649 321 mo
671 321 li
676.333 321 679 323.667 679 329 cv
679 351 li
679 356.333 676.333 359 671 359 cv
649 359 li
643.667 359 641 356.333 641 351 cv
641 329 li
641 323.667 643.667 321 649 321 cv
cp
.00784314 .745098 .921569 rgb
f
649 321 mo
671 321 li
676.333 321 679 323.667 679 329 cv
679 351 li
679 356.333 676.333 359 671 359 cv
649 359 li
643.667 359 641 356.333 641 351 cv
641 329 li
641 323.667 643.667 321 649 321 cv
cp
0 0 0 rgb
@
689 321 mo
711 321 li
716.333 321 719 323.667 719 329 cv
719 351 li
719 356.333 716.333 359 711 359 cv
689 359 li
683.667 359 681 356.333 681 351 cv
681 329 li
681 323.667 683.667 321 689 321 cv
cp
0 .643137 .788235 rgb
f
689 321 mo
711 321 li
716.333 321 719 323.667 719 329 cv
719 351 li
719 356.333 716.333 359 711 359 cv
689 359 li
683.667 359 681 356.333 681 351 cv
681 329 li
681 323.667 683.667 321 689 321 cv
cp
0 0 0 rgb
@
729 321 mo
751 321 li
756.333 321 759 323.667 759 329 cv
759 351 li
759 356.333 756.333 359 751 359 cv
729 359 li
723.667 359 721 356.333 721 351 cv
721 329 li
721 323.667 723.667 321 729 321 cv
cp
.211765 .976471 1 rgb
f
729 321 mo
751 321 li
756.333 321 759 323.667 759 329 cv
759 351 li
759 356.333 756.333 359 751 359 cv
729 359 li
723.667 359 721 356.333 721 351 cv
721 329 li
721 323.667 723.667 321 729 321 cv
cp
0 0 0 rgb
@
769 321 mo
791 321 li
796.333 321 799 323.667 799 329 cv
799 351 li
799 356.333 796.333 359 791 359 cv
769 359 li
763.667 359 761 356.333 761 351 cv
761 329 li
761 323.667 763.667 321 769 321 cv
cp
.415686 .996078 1 rgb
f
769 321 mo
791 321 li
796.333 321 799 323.667 799 329 cv
799 351 li
799 356.333 796.333 359 791 359 cv
769 359 li
763.667 359 761 356.333 761 351 cv
761 329 li
761 323.667 763.667 321 769 321 cv
cp
0 0 0 rgb
@
809 321 mo
831 321 li
836.333 321 839 323.667 839 329 cv
839 351 li
839 356.333 836.333 359 831 359 cv
809 359 li
803.667 359 801 356.333 801 351 cv
801 329 li
801 323.667 803.667 321 809 321 cv
cp
.172549 .756863 .976471 rgb
f
809 321 mo
831 321 li
836.333 321 839 323.667 839 329 cv
839 351 li
839 356.333 836.333 359 831 359 cv
809 359 li
803.667 359 801 356.333 801 351 cv
801 329 li
801 323.667 803.667 321 809 321 cv
cp
0 0 0 rgb
@
849 321 mo
871 321 li
876.333 321 879 323.667 879 329 cv
879 351 li
879 356.333 876.333 359 871 359 cv
849 359 li
843.667 359 841 356.333 841 351 cv
841 329 li
841 323.667 843.667 321 849 321 cv
cp
.333333 .956863 1 rgb
f
849 321 mo
871 321 li
876.333 321 879 323.667 879 329 cv
879 351 li
879 356.333 876.333 359 871 359 cv
849 359 li
843.667 359 841 356.333 841 351 cv
841 329 li
841 323.667 843.667 321 849 321 cv
cp
0 0 0 rgb
@
889 321 mo
911 321 li
916.333 321 919 323.667 919 329 cv
919 351 li
919 356.333 916.333 359 911 359 cv
889 359 li
883.667 359 881 356.333 881 351 cv
881 329 li
881 323.667 883.667 321 889 321 cv
cp
.211765 .933333 1 rgb
f
889 321 mo
911 321 li
916.333 321 919 323.667 919 329 cv
919 351 li
919 356.333 916.333 359 911 359 cv
889 359 li
883.667 359 881 356.333 881 351 cv
881 329 li
881 323.667 883.667 321 889 321 cv
cp
0 0 0 rgb
@
929 321 mo
951 321 li
956.333 321 959 323.667 959 329 cv
959 351 li
959 356.333 956.333 359 951 359 cv
929 359 li
923.667 359 921 356.333 921 351 cv
921 329 li
921 323.667 923.667 321 929 321 cv
cp
0 .47451 .701961 rgb
f
929 321 mo
951 321 li
956.333 321 959 323.667 959 329 cv
959 351 li
959 356.333 956.333 359 951 359 cv
929 359 li
923.667 359 921 356.333 921 351 cv
921 329 li
921 323.667 923.667 321 929 321 cv
cp
0 0 0 rgb
@
969 321 mo
991 321 li
996.333 321 999 323.667 999 329 cv
999 351 li
999 356.333 996.333 359 991 359 cv
969 359 li
963.667 359 961 356.333 961 351 cv
961 329 li
961 323.667 963.667 321 969 321 cv
cp
.286275 .921569 1 rgb
f
969 321 mo
991 321 li
996.333 321 999 323.667 999 329 cv
999 351 li
999 356.333 996.333 359 991 359 cv
969 359 li
963.667 359 961 356.333 961 351 cv
961 329 li
961 323.667 963.667 321 969 321 cv
cp
0 0 0 rgb
@
9 361 mo
31 361 li
36.3335 361 39 363.667 39 369 cv
39 391 li
39 396.333 36.3335 399 31 399 cv
9 399 li
3.6665 399 1 396.333 1 391 cv
1 369 li
1 363.667 3.6665 361 9 361 cv
cp
0 .6 .733333 rgb
f
9 361 mo
31 361 li
36.3335 361 39 363.667 39 369 cv
39 391 li
39 396.333 36.3335 399 31 399 cv
9 399 li
3.6665 399 1 396.333 1 391 cv
1 369 li
1 363.667 3.6665 361 9 361 cv
cp
0 0 0 rgb
@
49 361 mo
71 361 li
76.3335 361 79 363.667 79 369 cv
79 391 li
79 396.333 76.3335 399 71 399 cv
49 399 li
43.6665 399 41 396.333 41 391 cv
41 369 li
41 363.667 43.6665 361 49 361 cv
cp
.345098 1 1 rgb
f
49 361 mo
71 361 li
76.3335 361 79 363.667 79 369 cv
79 391 li
79 396.333 76.3335 399 71 399 cv
49 399 li
43.6665 399 41 396.333 41 391 cv
41 369 li
41 363.667 43.6665 361 49 361 cv
cp
0 0 0 rgb
@
89 361 mo
111 361 li
116.333 361 119 363.667 119 369 cv
119 391 li
119 396.333 116.333 399 111 399 cv
89 399 li
83.6665 399 81 396.333 81 391 cv
81 369 li
81 363.667 83.6665 361 89 361 cv
cp
0 .380392 .533333 rgb
f
89 361 mo
111 361 li
116.333 361 119 363.667 119 369 cv
119 391 li
119 396.333 116.333 399 111 399 cv
89 399 li
83.6665 399 81 396.333 81 391 cv
81 369 li
81 363.667 83.6665 361 89 361 cv
cp
0 0 0 rgb
@
129 361 mo
151 361 li
156.333 361 159 363.667 159 369 cv
159 391 li
159 396.333 156.333 399 151 399 cv
129 399 li
123.667 399 121 396.333 121 391 cv
121 369 li
121 363.667 123.667 361 129 361 cv
cp
0 .694118 .803922 rgb
f
129 361 mo
151 361 li
156.333 361 159 363.667 159 369 cv
159 391 li
159 396.333 156.333 399 151 399 cv
129 399 li
123.667 399 121 396.333 121 391 cv
121 369 li
121 363.667 123.667 361 129 361 cv
cp
0 0 0 rgb
@
169 361 mo
191 361 li
196.333 361 199 363.667 199 369 cv
199 391 li
199 396.333 196.333 399 191 399 cv
169 399 li
163.667 399 161 396.333 161 391 cv
161 369 li
161 363.667 163.667 361 169 361 cv
cp
0 .494118 .784314 rgb
f
169 361 mo
191 361 li
196.333 361 199 363.667 199 369 cv
199 391 li
199 396.333 196.333 399 191 399 cv
169 399 li
163.667 399 161 396.333 161 391 cv
161 369 li
161 363.667 163.667 361 169 361 cv
cp
0 0 0 rgb
@
209 361 mo
231 361 li
236.333 361 239 363.667 239 369 cv
239 391 li
239 396.333 236.333 399 231 399 cv
209 399 li
203.667 399 201 396.333 201 391 cv
201 369 li
201 363.667 203.667 361 209 361 cv
cp
0 .568627 .67451 rgb
f
209 361 mo
231 361 li
236.333 361 239 363.667 239 369 cv
239 391 li
239 396.333 236.333 399 231 399 cv
209 399 li
203.667 399 201 396.333 201 391 cv
201 369 li
201 363.667 203.667 361 209 361 cv
cp
0 0 0 rgb
@
249 361 mo
271 361 li
276.333 361 279 363.667 279 369 cv
279 391 li
279 396.333 276.333 399 271 399 cv
249 399 li
243.667 399 241 396.333 241 391 cv
241 369 li
241 363.667 243.667 361 249 361 cv
cp
.2 .894118 1 rgb
f
249 361 mo
271 361 li
276.333 361 279 363.667 279 369 cv
279 391 li
279 396.333 276.333 399 271 399 cv
249 399 li
243.667 399 241 396.333 241 391 cv
241 369 li
241 363.667 243.667 361 249 361 cv
cp
0 0 0 rgb
@
289 361 mo
311 361 li
316.333 361 319 363.667 319 369 cv
319 391 li
319 396.333 316.333 399 311 399 cv
289 399 li
283.667 399 281 396.333 281 391 cv
281 369 li
281 363.667 283.667 361 289 361 cv
cp
0 .439216 .745098 rgb
f
289 361 mo
311 361 li
316.333 361 319 363.667 319 369 cv
319 391 li
319 396.333 316.333 399 311 399 cv
289 399 li
283.667 399 281 396.333 281 391 cv
281 369 li
281 363.667 283.667 361 289 361 cv
cp
0 0 0 rgb
@
329 361 mo
351 361 li
356.333 361 359 363.667 359 369 cv
359 391 li
359 396.333 356.333 399 351 399 cv
329 399 li
323.667 399 321 396.333 321 391 cv
321 369 li
321 363.667 323.667 361 329 361 cv
cp
0 .266667 .47451 rgb
f
329 361 mo
351 361 li
356.333 361 359 363.667 359 369 cv
359 391 li
359 396.333 356.333 399 351 399 cv
329 399 li
323.667 399 321 396.333 321 391 cv
321 369 li
321 363.667 323.667 361 329 361 cv
cp
0 0 0 rgb
@
369 361 mo
391 361 li
396.333 361 399 363.667 399 369 cv
399 391 li
399 396.333 396.333 399 391 399 cv
369 399 li
363.667 399 361 396.333 361 391 cv
361 369 li
361 363.667 363.667 361 369 361 cv
cp
.278431 .980392 1 rgb
f
369 361 mo
391 361 li
396.333 361 399 363.667 399 369 cv
399 391 li
399 396.333 396.333 399 391 399 cv
369 399 li
363.667 399 361 396.333 361 391 cv
361 369 li
361 363.667 363.667 361 369 361 cv
cp
0 0 0 rgb
@
409 361 mo
431 361 li
436.333 361 439 363.667 439 369 cv
439 391 li
439 396.333 436.333 399 431 399 cv
409 399 li
403.667 399 401 396.333 401 391 cv
401 369 li
401 363.667 403.667 361 409 361 cv
cp
0 .376471 .541176 rgb
f
409 361 mo
431 361 li
436.333 361 439 363.667 439 369 cv
439 391 li
439 396.333 436.333 399 431 399 cv
409 399 li
403.667 399 401 396.333 401 391 cv
401 369 li
401 363.667 403.667 361 409 361 cv
cp
0 0 0 rgb
@
449 361 mo
471 361 li
476.333 361 479 363.667 479 369 cv
479 391 li
479 396.333 476.333 399 471 399 cv
449 399 li
443.667 399 441 396.333 441 391 cv
441 369 li
441 363.667 443.667 361 449 361 cv
cp
0 .513726 .6 rgb
f
449 361 mo
471 361 li
476.333 361 479 363.667 479 369 cv
479 391 li
479 396.333 476.333 399 471 399 cv
449 399 li
443.667 399 441 396.333 441 391 cv
441 369 li
441 363.667 443.667 361 449 361 cv
cp
0 0 0 rgb
@
489 361 mo
511 361 li
516.333 361 519 363.667 519 369 cv
519 391 li
519 396.333 516.333 399 511 399 cv
489 399 li
483.667 399 481 396.333 481 391 cv
481 369 li
481 363.667 483.667 361 489 361 cv
cp
.0196078 .647059 .878431 rgb
f
489 361 mo
511 361 li
516.333 361 519 363.667 519 369 cv
519 391 li
519 396.333 516.333 399 511 399 cv
489 399 li
483.667 399 481 396.333 481 391 cv
481 369 li
481 363.667 483.667 361 489 361 cv
cp
0 0 0 rgb
@
529 361 mo
551 361 li
556.333 361 559 363.667 559 369 cv
559 391 li
559 396.333 556.333 399 551 399 cv
529 399 li
523.667 399 521 396.333 521 391 cv
521 369 li
521 363.667 523.667 361 529 361 cv
cp
.258824 .823529 1 rgb
f
529 361 mo
551 361 li
556.333 361 559 363.667 559 369 cv
559 391 li
559 396.333 556.333 399 551 399 cv
529 399 li
523.667 399 521 396.333 521 391 cv
521 369 li
521 363.667 523.667 361 529 361 cv
cp
0 0 0 rgb
@
569 361 mo
591 361 li
596.333 361 599 363.667 599 369 cv
599 391 li
599 396.333 596.333 399 591 399 cv
569 399 li
563.667 399 561 396.333 561 391 cv
561 369 li
561 363.667 563.667 361 569 361 cv
cp
0 .470588 .537255 rgb
f
569 361 mo
591 361 li
596.333 361 599 363.667 599 369 cv
599 391 li
599 396.333 596.333 399 591 399 cv
569 399 li
563.667 399 561 396.333 561 391 cv
561 369 li
561 363.667 563.667 361 569 361 cv
cp
0 0 0 rgb
@
609 361 mo
631 361 li
636.333 361 639 363.667 639 369 cv
639 391 li
639 396.333 636.333 399 631 399 cv
609 399 li
603.667 399 601 396.333 601 391 cv
601 369 li
601 363.667 603.667 361 609 361 cv
cp
0 .572549 .721569 rgb
f
609 361 mo
631 361 li
636.333 361 639 363.667 639 369 cv
639 391 li
639 396.333 636.333 399 631 399 cv
609 399 li
603.667 399 601 396.333 601 391 cv
601 369 li
601 363.667 603.667 361 609 361 cv
cp
0 0 0 rgb
@
649 361 mo
671 361 li
676.333 361 679 363.667 679 369 cv
679 391 li
679 396.333 676.333 399 671 399 cv
649 399 li
643.667 399 641 396.333 641 391 cv
641 369 li
641 363.667 643.667 361 649 361 cv
cp
.133333 .72549 1 rgb
f
649 361 mo
671 361 li
676.333 361 679 363.667 679 369 cv
679 391 li
679 396.333 676.333 399 671 399 cv
649 399 li
643.667 399 641 396.333 641 391 cv
641 369 li
641 363.667 643.667 361 649 361 cv
cp
0 0 0 rgb
@
689 361 mo
711 361 li
716.333 361 719 363.667 719 369 cv
719 391 li
719 396.333 716.333 399 711 399 cv
689 399 li
683.667 399 681 396.333 681 391 cv
681 369 li
681 363.667 683.667 361 689 361 cv
cp
.188235 .815686 1 rgb
f
689 361 mo
711 361 li
716.333 361 719 363.667 719 369 cv
719 391 li
719 396.333 716.333 399 711 399 cv
689 399 li
683.667 399 681 396.333 681 391 cv
681 369 li
681 363.667 683.667 361 689 361 cv
cp
0 0 0 rgb
@
729 361 mo
751 361 li
756.333 361 759 363.667 759 369 cv
759 391 li
759 396.333 756.333 399 751 399 cv
729 399 li
723.667 399 721 396.333 721 391 cv
721 369 li
721 363.667 723.667 361 729 361 cv
cp
.337255 .988235 1 rgb
f
729 361 mo
751 361 li
756.333 361 759 363.667 759 369 cv
759 391 li
759 396.333 756.333 399 751 399 cv
729 399 li
723.667 399 721 396.333 721 391 cv
721 369 li
721 363.667 723.667 361 729 361 cv
cp
0 0 0 rgb
@
769 361 mo
791 361 li
796.333 361 799 363.667 799 369 cv
799 391 li
799 396.333 796.333 399 791 399 cv
769 399 li
763.667 399 761 396.333 761 391 cv
761 369 li
761 363.667 763.667 361 769 361 cv
cp
.262745 .776471 1 rgb
f
769 361 mo
791 361 li
796.333 361 799 363.667 799 369 cv
799 391 li
799 396.333 796.333 399 791 399 cv
769 399 li
763.667 399 761 396.333 761 391 cv
761 369 li
761 363.667 763.667 361 769 361 cv
cp
0 0 0 rgb
@
809 361 mo
831 361 li
836.333 361 839 363.667 839 369 cv
839 391 li
839 396.333 836.333 399 831 399 cv
809 399 li
803.667 399 801 396.333 801 391 cv
801 369 li
801 363.667 803.667 361 809 361 cv
cp
.0980392 .682353 .945098 rgb
f
809 361 mo
831 361 li
836.333 361 839 363.667 839 369 cv
839 391 li
839 396.333 836.333 399 831 399 cv
809 399 li
803.667 399 801 396.333 801 391 cv
801 369 li
801 363.667 803.667 361 809 361 cv
cp
0 0 0 rgb
@
849 361 mo
871 361 li
876.333 361 879 363.667 879 369 cv
879 391 li
879 396.333 876.333 399 871 399 cv
849 399 li
843.667 399 841 396.333 841 391 cv
841 369 li
841 363.667 843.667 361 849 361 cv
cp
0 .407843 .596078 rgb
f
849 361 mo
871 361 li
876.333 361 879 363.667 879 369 cv
879 391 li
879 396.333 876.333 399 871 399 cv
849 399 li
843.667 399 841 396.333 841 391 cv
841 369 li
841 363.667 843.667 361 849 361 cv
cp
0 0 0 rgb
@
889 361 mo
911 361 li
916.333 361 919 363.667 919 369 cv
919 391 li
919 396.333 916.333 399 911 399 cv
889 399 li
883.667 399 881 396.333 881 391 cv
881 369 li
881 363.667 883.667 361 889 361 cv
cp
0 .662745 .870588 rgb
f
889 361 mo
911 361 li
916.333 361 919 363.667 919 369 cv
919 391 li
919 396.333 916.333 399 911 399 cv
889 399 li
883.667 399 881 396.333 881 391 cv
881 369 li
881 363.667 883.667 361 889 361 cv
cp
0 0 0 rgb
@
929 361 mo
951 361 li
956.333 361 959 363.667 959 369 cv
959 391 li
959 396.333 956.333 399 951 399 cv
929 399 li
923.667 399 921 396.333 921 391 cv
921 369 li
921 363.667 923.667 361 929 361 cv
cp
0 .584314 .843137 rgb
f
929 361 mo
951 361 li
956.333 361 959 363.667 959 369 cv
959 391 li
959 396.333 956.333 399 951 399 cv
929 399 li
923.667 399 921 396.333 921 391 cv
921 369 li
921 363.667 923.667 361 929 361 cv
cp
0 0 0 rgb
@
969 361 mo
991 361 li
996.333 361 999 363.667 999 369 cv
999 391 li
999 396.333 996.333 399 991 399 cv
969 399 li
963.667 399 961 396.333 961 391 cv
961 369 li
961 363.667 963.667 361 969 361 cv
cp
0 .341176 .611765 rgb
f
969 361 mo
991 361 li
996.333 361 999 363.667 999 369 cv
999 391 li
999 396.333 996.333 399 991 399 cv
969 399 li
963.667 399 961 396.333 961 391 cv
961 369 li
961 363.667 963.667 361 969 361 cv
cp
0 0 0 rgb
@
9 401 mo
31 401 li
36.3335 401 39 403.667 39 409 cv
39 431 li
39 436.333 36.3335 439 31 439 cv
9 439 li
3.6665 439 1 436.333 1 431 cv
1 409 li
1 403.667 3.6665 401 9 401 cv
cp
.0705882 .705882 .886275 rgb
f
9 401 mo
31 401 li
36.3335 401 39 403.667 39 409 cv
39 431 li
39 436.333 36.3335 439 31 439 cv
9 439 li
3.6665 439 1 436.333 1 431 cv
1 409 li
1 403.667 3.6665 401 9 401 cv
cp
0 0 0 rgb
@
49 401 mo
71 401 li
76.3335 401 79 403.667 79 409 cv
79 431 li
79 436.333 76.3335 439 71 439 cv
49 439 li
43.6665 439 41 436.333 41 431 cv
41 409 li
41 403.667 43.6665 401 49 401 cv
cp
.0862745 .760784 1 rgb
f
49 401 mo
71 401 li
76.3335 401 79 403.667 79 409 cv
79 431 li
79 436.333 76.3335 439 71 439 cv
49 439 li
43.6665 439 41 436.333 41 431 cv
41 409 li
41 403.667 43.6665 401 49 401 cv
cp
0 0 0 rgb
@
89 401 mo
111 401 li
116.333 401 119 403.667 119 409 cv
119 431 li
119 436.333 116.333 439 111 439 cv
89 439 li
83.6665 439 81 436.333 81 431 cv
81 409 li
81 403.667 83.6665 401 89 401 cv
cp
0 .376471 .67451 rgb
f
89 401 mo
111 401 li
116.333 401 119 403.667 119 409 cv
119 431 li
119 436.333 116.333 439 111 439 cv
89 439 li
83.6665 439 81 436.333 81 431 cv
81 409 li
81 403.667 83.6665 401 89 401 cv
cp
0 0 0 rgb
@
129 401 mo
151 401 li
156.333 401 159 403.667 159 409 cv
159 431 li
159 436.333 156.333 439 151 439 cv
129 439 li
123.667 439 121 436.333 121 431 cv
121 409 li
121 403.667 123.667 401 129 401 cv
cp
0 .607843 .815686 rgb
f
129 401 mo
151 401 li
156.333 401 159 403.667 159 409 cv
159 431 li
159 436.333 156.333 439 151 439 cv
129 439 li
123.667 439 121 436.333 121 431 cv
121 409 li
121 403.667 123.667 401 129 401 cv
cp
0 0 0 rgb
@
169 401 mo
191 401 li
196.333 401 199 403.667 199 409 cv
199 431 li
199 436.333 196.333 439 191 439 cv
169 439 li
163.667 439 161 436.333 161 431 cv
161 409 li
161 403.667 163.667 401 169 401 cv
cp
0 .435294 .709804 rgb
f
169 401 mo
191 401 li
196.333 401 199 403.667 199 409 cv
199 431 li
199 436.333 196.333 439 191 439 cv
169 439 li
163.667 439 161 436.333 161 431 cv
161 409 li
161 403.667 163.667 401 169 401 cv
cp
0 0 0 rgb
@
209 401 mo
231 401 li
236.333 401 239 403.667 239 409 cv
239 431 li
239 436.333 236.333 439 231 439 cv
209 439 li
203.667 439 201 436.333 201 431 cv
201 409 li
201 403.667 203.667 401 209 401 cv
cp
.105882 .737255 1 rgb
f
209 401 mo
231 401 li
236.333 401 239 403.667 239 409 cv
239 431 li
239 436.333 236.333 439 231 439 cv
209 439 li
203.667 439 201 436.333 201 431 cv
201 409 li
201 403.667 203.667 401 209 401 cv
cp
0 0 0 rgb
@
249 401 mo
271 401 li
276.333 401 279 403.667 279 409 cv
279 431 li
279 436.333 276.333 439 271 439 cv
249 439 li
243.667 439 241 436.333 241 431 cv
241 409 li
241 403.667 243.667 401 249 401 cv
cp
0 .490196 .768627 rgb
f
249 401 mo
271 401 li
276.333 401 279 403.667 279 409 cv
279 431 li
279 436.333 276.333 439 271 439 cv
249 439 li
243.667 439 241 436.333 241 431 cv
241 409 li
241 403.667 243.667 401 249 401 cv
cp
0 0 0 rgb
@
289 401 mo
311 401 li
316.333 401 319 403.667 319 409 cv
319 431 li
319 436.333 316.333 439 311 439 cv
289 439 li
283.667 439 281 436.333 281 431 cv
281 409 li
281 403.667 283.667 401 289 401 cv
cp
.0666667 .74902 1 rgb
f
289 401 mo
311 401 li
316.333 401 319 403.667 319 409 cv
319 431 li
319 436.333 316.333 439 311 439 cv
289 439 li
283.667 439 281 436.333 281 431 cv
281 409 li
281 403.667 283.667 401 289 401 cv
cp
0 0 0 rgb
@
329 401 mo
351 401 li
356.333 401 359 403.667 359 409 cv
359 431 li
359 436.333 356.333 439 351 439 cv
329 439 li
323.667 439 321 436.333 321 431 cv
321 409 li
321 403.667 323.667 401 329 401 cv
cp
0 .317647 .623529 rgb
f
329 401 mo
351 401 li
356.333 401 359 403.667 359 409 cv
359 431 li
359 436.333 356.333 439 351 439 cv
329 439 li
323.667 439 321 436.333 321 431 cv
321 409 li
321 403.667 323.667 401 329 401 cv
cp
0 0 0 rgb
@
369 401 mo
391 401 li
396.333 401 399 403.667 399 409 cv
399 431 li
399 436.333 396.333 439 391 439 cv
369 439 li
363.667 439 361 436.333 361 431 cv
361 409 li
361 403.667 363.667 401 369 401 cv
cp
0 .419608 .607843 rgb
f
369 401 mo
391 401 li
396.333 401 399 403.667 399 409 cv
399 431 li
399 436.333 396.333 439 391 439 cv
369 439 li
363.667 439 361 436.333 361 431 cv
361 409 li
361 403.667 363.667 401 369 401 cv
cp
0 0 0 rgb
@
409 401 mo
431 401 li
436.333 401 439 403.667 439 409 cv
439 431 li
439 436.333 436.333 439 431 439 cv
409 439 li
403.667 439 401 436.333 401 431 cv
401 409 li
401 403.667 403.667 401 409 401 cv
cp
.0941176 .760784 .94902 rgb
f
409 401 mo
431 401 li
436.333 401 439 403.667 439 409 cv
439 431 li
439 436.333 436.333 439 431 439 cv
409 439 li
403.667 439 401 436.333 401 431 cv
401 409 li
401 403.667 403.667 401 409 401 cv
cp
0 0 0 rgb
@
449 401 mo
471 401 li
476.333 401 479 403.667 479 409 cv
479 431 li
479 436.333 476.333 439 471 439 cv
449 439 li
443.667 439 441 436.333 441 431 cv
441 409 li
441 403.667 443.667 401 449 401 cv
cp
0 .596078 .835294 rgb
f
449 401 mo
471 401 li
476.333 401 479 403.667 479 409 cv
479 431 li
479 436.333 476.333 439 471 439 cv
449 439 li
443.667 439 441 436.333 441 431 cv
441 409 li
441 403.667 443.667 401 449 401 cv
cp
0 0 0 rgb
@
489 401 mo
511 401 li
516.333 401 519 403.667 519 409 cv
519 431 li
519 436.333 516.333 439 511 439 cv
489 439 li
483.667 439 481 436.333 481 431 cv
481 409 li
481 403.667 483.667 401 489 401 cv
cp
0 .52549 .796078 rgb
f
489 401 mo
511 401 li
516.333 401 519 403.667 519 409 cv
519 431 li
519 436.333 516.333 439 511 439 cv
489 439 li
483.667 439 481 436.333 481 431 cv
481 409 li
481 403.667 483.667 401 489 401 cv
cp
0 0 0 rgb
@
529 401 mo
551 401 li
556.333 401 559 403.667 559 409 cv
559 431 li
559 436.333 556.333 439 551 439 cv
529 439 li
523.667 439 521 436.333 521 431 cv
521 409 li
521 403.667 523.667 401 529 401 cv
cp
.0941176 .701961 .929412 rgb
f
529 401 mo
551 401 li
556.333 401 559 403.667 559 409 cv
559 431 li
559 436.333 556.333 439 551 439 cv
529 439 li
523.667 439 521 436.333 521 431 cv
521 409 li
521 403.667 523.667 401 529 401 cv
cp
0 0 0 rgb
@
569 401 mo
591 401 li
596.333 401 599 403.667 599 409 cv
599 431 li
599 436.333 596.333 439 591 439 cv
569 439 li
563.667 439 561 436.333 561 431 cv
561 409 li
561 403.667 563.667 401 569 401 cv
cp
0 .282353 .490196 rgb
f
569 401 mo
591 401 li
596.333 401 599 403.667 599 409 cv
599 431 li
599 436.333 596.333 439 591 439 cv
569 439 li
563.667 439 561 436.333 561 431 cv
561 409 li
561 403.667 563.667 401 569 401 cv
cp
0 0 0 rgb
@
609 401 mo
631 401 li
636.333 401 639 403.667 639 409 cv
639 431 li
639 436.333 636.333 439 631 439 cv
609 439 li
603.667 439 601 436.333 601 431 cv
601 409 li
601 403.667 603.667 401 609 401 cv
cp
.184314 .866667 1 rgb
f
609 401 mo
631 401 li
636.333 401 639 403.667 639 409 cv
639 431 li
639 436.333 636.333 439 631 439 cv
609 439 li
603.667 439 601 436.333 601 431 cv
601 409 li
601 403.667 603.667 401 609 401 cv
cp
0 0 0 rgb
@
649 401 mo
671 401 li
676.333 401 679 403.667 679 409 cv
679 431 li
679 436.333 676.333 439 671 439 cv
649 439 li
643.667 439 641 436.333 641 431 cv
641 409 li
641 403.667 643.667 401 649 401 cv
cp
.137255 .709804 .882353 rgb
f
649 401 mo
671 401 li
676.333 401 679 403.667 679 409 cv
679 431 li
679 436.333 676.333 439 671 439 cv
649 439 li
643.667 439 641 436.333 641 431 cv
641 409 li
641 403.667 643.667 401 649 401 cv
cp
0 0 0 rgb
@
689 401 mo
711 401 li
716.333 401 719 403.667 719 409 cv
719 431 li
719 436.333 716.333 439 711 439 cv
689 439 li
683.667 439 681 436.333 681 431 cv
681 409 li
681 403.667 683.667 401 689 401 cv
cp
.235294 .866667 1 rgb
f
689 401 mo
711 401 li
716.333 401 719 403.667 719 409 cv
719 431 li
719 436.333 716.333 439 711 439 cv
689 439 li
683.667 439 681 436.333 681 431 cv
681 409 li
681 403.667 683.667 401 689 401 cv
cp
0 0 0 rgb
@
729 401 mo
751 401 li
756.333 401 759 403.667 759 409 cv
759 431 li
759 436.333 756.333 439 751 439 cv
729 439 li
723.667 439 721 436.333 721 431 cv
721 409 li
721 403.667 723.667 401 729 401 cv
cp
.160784 .858824 1 rgb
f
729 401 mo
751 401 li
756.333 401 759 403.667 759 409 cv
759 431 li
759 436.333 756.333 439 751 439 cv
729 439 li
723.667 439 721 436.333 721 431 cv
721 409 li
721 403.667 723.667 401 729 401 cv
cp
0 0 0 rgb
@
769 401 mo
791 401 li
796.333 401 799 403.667 799 409 cv
799 431 li
799 436.333 796.333 439 791 439 cv
769 439 li
763.667 439 761 436.333 761 431 cv
761 409 li
761 403.667 763.667 401 769 401 cv
cp
.396078 1 1 rgb
f
769 401 mo
791 401 li
796.333 401 799 403.667 799 409 cv
799 431 li
799 436.333 796.333 439 791 439 cv
769 439 li
763.667 439 761 436.333 761 431 cv
761 409 li
761 403.667 763.667 401 769 401 cv
cp
0 0 0 rgb
@
809 401 mo
831 401 li
836.333 401 839 403.667 839 409 cv
839 431 li
839 436.333 836.333 439 831 439 cv
809 439 li
803.667 439 801 436.333 801 431 cv
801 409 li
801 403.667 803.667 401 809 401 cv
cp
0 .501961 .686275 rgb
f
809 401 mo
831 401 li
836.333 401 839 403.667 839 409 cv
839 431 li
839 436.333 836.333 439 831 439 cv
809 439 li
803.667 439 801 436.333 801 431 cv
801 409 li
801 403.667 803.667 401 809 401 cv
cp
0 0 0 rgb
@
849 401 mo
871 401 li
876.333 401 879 403.667 879 409 cv
879 431 li
879 436.333 876.333 439 871 439 cv
849 439 li
843.667 439 841 436.333 841 431 cv
841 409 li
841 403.667 843.667 401 849 401 cv
cp
.054902 .729412 .835294 rgb
f
849 401 mo
871 401 li
876.333 401 879 403.667 879 409 cv
879 431 li
879 436.333 876.333 439 871 439 cv
849 439 li
843.667 439 841 436.333 841 431 cv
841 409 li
841 403.667 843.667 401 849 401 cv
cp
0 0 0 rgb
@
889 401 mo
911 401 li
916.333 401 919 403.667 919 409 cv
919 431 li
919 436.333 916.333 439 911 439 cv
889 439 li
883.667 439 881 436.333 881 431 cv
881 409 li
881 403.667 883.667 401 889 401 cv
cp
.203922 .866667 1 rgb
f
889 401 mo
911 401 li
916.333 401 919 403.667 919 409 cv
919 431 li
919 436.333 916.333 439 911 439 cv
889 439 li
883.667 439 881 436.333 881 431 cv
881 409 li
881 403.667 883.667 401 889 401 cv
cp
0 0 0 rgb
@
929 401 mo
951 401 li
956.333 401 959 403.667 959 409 cv
959 431 li
959 436.333 956.333 439 951 439 cv
929 439 li
923.667 439 921 436.333 921 431 cv
921 409 li
921 403.667 923.667 401 929 401 cv
cp
.278431 1 1 rgb
f
929 401 mo
951 401 li
956.333 401 959 403.667 959 409 cv
959 431 li
959 436.333 956.333 439 951 439 cv
929 439 li
923.667 439 921 436.333 921 431 cv
921 409 li
921 403.667 923.667 401 929 401 cv
cp
0 0 0 rgb
@
969 401 mo
991 401 li
996.333 401 999 403.667 999 409 cv
999 431 li
999 436.333 996.333 439 991 439 cv
969 439 li
963.667 439 961 436.333 961 431 cv
961 409 li
961 403.667 963.667 401 969 401 cv
cp
.32549 .996078 1 rgb
f
969 401 mo
991 401 li
996.333 401 999 403.667 999 409 cv
999 431 li
999 436.333 996.333 439 991 439 cv
969 439 li
963.667 439 961 436.333 961 431 cv
961 409 li
961 403.667 963.667 401 969 401 cv
cp
0 0 0 rgb
@
9 441 mo
31 441 li
36.3335 441 39 443.667 39 449 cv
39 471 li
39 476.333 36.3335 479 31 479 cv
9 479 li
3.6665 479 1 476.333 1 471 cv
1 449 li
1 443.667 3.6665 441 9 441 cv
cp
0 .301961 .596078 rgb
f
9 441 mo
31 441 li
36.3335 441 39 443.667 39 449 cv
39 471 li
39 476.333 36.3335 479 31 479 cv
9 479 li
3.6665 479 1 476.333 1 471 cv
1 449 li
1 443.667 3.6665 441 9 441 cv
cp
0 0 0 rgb
@
49 441 mo
71 441 li
76.3335 441 79 443.667 79 449 cv
79 471 li
79 476.333 76.3335 479 71 479 cv
49 479 li
43.6665 479 41 476.333 41 471 cv
41 449 li
41 443.667 43.6665 441 49 441 cv
cp
.2 .843137 1 rgb
f
49 441 mo
71 441 li
76.3335 441 79 443.667 79 449 cv
79 471 li
79 476.333 76.3335 479 71 479 cv
49 479 li
43.6665 479 41 476.333 41 471 cv
41 449 li
41 443.667 43.6665 441 49 441 cv
cp
0 0 0 rgb
@
89 441 mo
111 441 li
116.333 441 119 443.667 119 449 cv
119 471 li
119 476.333 116.333 479 111 479 cv
89 479 li
83.6665 479 81 476.333 81 471 cv
81 449 li
81 443.667 83.6665 441 89 441 cv
cp
.0235294 .784314 .996078 rgb
f
89 441 mo
111 441 li
116.333 441 119 443.667 119 449 cv
119 471 li
119 476.333 116.333 479 111 479 cv
89 479 li
83.6665 479 81 476.333 81 471 cv
81 449 li
81 443.667 83.6665 441 89 441 cv
cp
0 0 0 rgb
@
129 441 mo
151 441 li
156.333 441 159 443.667 159 449 cv
159 471 li
159 476.333 156.333 479 151 479 cv
129 479 li
123.667 479 121 476.333 121 471 cv
121 449 li
121 443.667 123.667 441 129 441 cv
cp
.337255 1 1 rgb
f
129 441 mo
151 441 li
156.333 441 159 443.667 159 449 cv
159 471 li
159 476.333 156.333 479 151 479 cv
129 479 li
123.667 479 121 476.333 121 471 cv
121 449 li
121 443.667 123.667 441 129 441 cv
cp
0 0 0 rgb
@
169 441 mo
191 441 li
196.333 441 199 443.667 199 449 cv
199 471 li
199 476.333 196.333 479 191 479 cv
169 479 li
163.667 479 161 476.333 161 471 cv
161 449 li
161 443.667 163.667 441 169 441 cv
cp
0 .47451 .717647 rgb
f
169 441 mo
191 441 li
196.333 441 199 443.667 199 449 cv
199 471 li
199 476.333 196.333 479 191 479 cv
169 479 li
163.667 479 161 476.333 161 471 cv
161 449 li
161 443.667 163.667 441 169 441 cv
cp
0 0 0 rgb
@
209 441 mo
231 441 li
236.333 441 239 443.667 239 449 cv
239 471 li
239 476.333 236.333 479 231 479 cv
209 479 li
203.667 479 201 476.333 201 471 cv
201 449 li
201 443.667 203.667 441 209 441 cv
cp
0 .431373 .592157 rgb
f
209 441 mo
231 441 li
236.333 441 239 443.667 239 449 cv
239 471 li
239 476.333 236.333 479 231 479 cv
209 479 li
203.667 479 201 476.333 201 471 cv
201 449 li
201 443.667 203.667 441 209 441 cv
cp
0 0 0 rgb
@
249 441 mo
271 441 li
276.333 441 279 443.667 279 449 cv
279 471 li
279 476.333 276.333 479 271 479 cv
249 479 li
243.667 479 241 476.333 241 471 cv
241 449 li
241 443.667 243.667 441 249 441 cv
cp
.34902 .945098 1 rgb
f
249 441 mo
271 441 li
276.333 441 279 443.667 279 449 cv
279 471 li
279 476.333 276.333 479 271 479 cv
249 479 li
243.667 479 241 476.333 241 471 cv
241 449 li
241 443.667 243.667 441 249 441 cv
cp
0 0 0 rgb
@
289 441 mo
311 441 li
316.333 441 319 443.667 319 449 cv
319 471 li
319 476.333 316.333 479 311 479 cv
289 479 li
283.667 479 281 476.333 281 471 cv
281 449 li
281 443.667 283.667 441 289 441 cv
cp
0 .439216 .607843 rgb
f
289 441 mo
311 441 li
316.333 441 319 443.667 319 449 cv
319 471 li
319 476.333 316.333 479 311 479 cv
289 479 li
283.667 479 281 476.333 281 471 cv
281 449 li
281 443.667 283.667 441 289 441 cv
cp
0 0 0 rgb
@
329 441 mo
351 441 li
356.333 441 359 443.667 359 449 cv
359 471 li
359 476.333 356.333 479 351 479 cv
329 479 li
323.667 479 321 476.333 321 471 cv
321 449 li
321 443.667 323.667 441 329 441 cv
cp
0 .521569 .65098 rgb
f
329 441 mo
351 441 li
356.333 441 359 443.667 359 449 cv
359 471 li
359 476.333 356.333 479 351 479 cv
329 479 li
323.667 479 321 476.333 321 471 cv
321 449 li
321 443.667 323.667 441 329 441 cv
cp
0 0 0 rgb
@
369 441 mo
391 441 li
396.333 441 399 443.667 399 449 cv
399 471 li
399 476.333 396.333 479 391 479 cv
369 479 li
363.667 479 361 476.333 361 471 cv
361 449 li
361 443.667 363.667 441 369 441 cv
cp
.215686 .894118 1 rgb
f
369 441 mo
391 441 li
396.333 441 399 443.667 399 449 cv
399 471 li
399 476.333 396.333 479 391 479 cv
369 479 li
363.667 479 361 476.333 361 471 cv
361 449 li
361 443.667 363.667 441 369 441 cv
cp
0 0 0 rgb
@
409 441 mo
431 441 li
436.333 441 439 443.667 439 449 cv
439 471 li
439 476.333 436.333 479 431 479 cv
409 479 li
403.667 479 401 476.333 401 471 cv
401 449 li
401 443.667 403.667 441 409 441 cv
cp
.352941 .980392 1 rgb
f
409 441 mo
431 441 li
436.333 441 439 443.667 439 449 cv
439 471 li
439 476.333 436.333 479 431 479 cv
409 479 li
403.667 479 401 476.333 401 471 cv
401 449 li
401 443.667 403.667 441 409 441 cv
cp
0 0 0 rgb
@
449 441 mo
471 441 li
476.333 441 479 443.667 479 449 cv
479 471 li
479 476.333 476.333 479 471 479 cv
449 479 li
443.667 479 441 476.333 441 471 cv
441 449 li
441 443.667 443.667 441 449 441 cv
cp
.207843 .843137 .933333 rgb
f
449 441 mo
471 441 li
476.333 441 479 443.667 479 449 cv
479 471 li
479 476.333 476.333 479 471 479 cv
449 479 li
443.667 479 441 476.333 441 471 cv
441 449 li
441 443.667 443.667 441 449 441 cv
cp
0 0 0 rgb
@
489 441 mo
511 441 li
516.333 441 519 443.667 519 449 cv
519 471 li
519 476.333 516.333 479 511 479 cv
489 479 li
483.667 479 481 476.333 481 471 cv
481 449 li
481 443.667 483.667 441 489 441 cv
cp
.282353 1 1 rgb
f
489 441 mo
511 441 li
516.333 441 519 443.667 519 449 cv
519 471 li
519 476.333 516.333 479 511 479 cv
489 479 li
483.667 479 481 476.333 481 471 cv
481 449 li
481 443.667 483.667 441 489 441 cv
cp
0 0 0 rgb
@
529 441 mo
551 441 li
556.333 441 559 443.667 559 449 cv
559 471 li
559 476.333 556.333 479 551 479 cv
529 479 li
523.667 479 521 476.333 521 471 cv
521 449 li
521 443.667 523.667 441 529 441 cv
cp
.054902 .784314 .968627 rgb
f
529 441 mo
551 441 li
556.333 441 559 443.667 559 449 cv
559 471 li
559 476.333 556.333 479 551 479 cv
529 479 li
523.667 479 521 476.333 521 471 cv
521 449 li
521 443.667 523.667 441 529 441 cv
cp
0 0 0 rgb
@
569 441 mo
591 441 li
596.333 441 599 443.667 599 449 cv
599 471 li
599 476.333 596.333 479 591 479 cv
569 479 li
563.667 479 561 476.333 561 471 cv
561 449 li
561 443.667 563.667 441 569 441 cv
cp
.215686 .901961 1 rgb
f
569 441 mo
591 441 li
596.333 441 599 443.667 599 449 cv
599 471 li
599 476.333 596.333 479 591 479 cv
569 479 li
563.667 479 561 476.333 561 471 cv
561 449 li
561 443.667 563.667 441 569 441 cv
cp
0 0 0 rgb
@
609 441 mo
631 441 li
636.333 441 639 443.667 639 449 cv
639 471 li
639 476.333 636.333 479 631 479 cv
609 479 li
603.667 479 601 476.333 601 471 cv
601 449 li
601 443.667 603.667 441 609 441 cv
cp
0 .498039 .796078 rgb
f
609 441 mo
631 441 li
636.333 441 639 443.667 639 449 cv
639 471 li
639 476.333 636.333 479 631 479 cv
609 479 li
603.667 479 601 476.333 601 471 cv
601 449 li
601 443.667 603.667 441 609 441 cv
cp
0 0 0 rgb
@
649 441 mo
671 441 li
676.333 441 679 443.667 679 449 cv
679 471 li
679 476.333 676.333 479 671 479 cv
649 479 li
643.667 479 641 476.333 641 471 cv
641 449 li
641 443.667 643.667 441 649 441 cv
cp
0 .454902 .682353 rgb
f
649 441 mo
671 441 li
676.333 441 679 443.667 679 449 cv
679 471 li
679 476.333 676.333 479 671 479 cv
649 479 li
643.667 479 641 476.333 641 471 cv
641 449 li
641 443.667 643.667 441 649 441 cv
cp
0 0 0 rgb
@
689 441 mo
711 441 li
716.333 441 719 443.667 719 449 cv
719 471 li
719 476.333 716.333 479 711 479 cv
689 479 li
683.667 479 681 476.333 681 471 cv
681 449 li
681 443.667 683.667 441 689 441 cv
cp
.027451 .654902 .921569 rgb
f
689 441 mo
711 441 li
716.333 441 719 443.667 719 449 cv
719 471 li
719 476.333 716.333 479 711 479 cv
689 479 li
683.667 479 681 476.333 681 471 cv
681 449 li
681 443.667 683.667 441 689 441 cv
cp
0 0 0 rgb
@
729 441 mo
751 441 li
756.333 441 759 443.667 759 449 cv
759 471 li
759 476.333 756.333 479 751 479 cv
729 479 li
723.667 479 721 476.333 721 471 cv
721 449 li
721 443.667 723.667 441 729 441 cv
cp
0 .521569 .705882 rgb
f
729 441 mo
751 441 li
756.333 441 759 443.667 759 449 cv
759 471 li
759 476.333 756.333 479 751 479 cv
729 479 li
723.667 479 721 476.333 721 471 cv
721 449 li
721 443.667 723.667 441 729 441 cv
cp
0 0 0 rgb
@
769 441 mo
791 441 li
796.333 441 799 443.667 799 449 cv
799 471 li
799 476.333 796.333 479 791 479 cv
769 479 li
763.667 479 761 476.333 761 471 cv
761 449 li
761 443.667 763.667 441 769 441 cv
cp
0 .482353 .745098 rgb
f
769 441 mo
791 441 li
796.333 441 799 443.667 799 449 cv
799 471 li
799 476.333 796.333 479 791 479 cv
769 479 li
763.667 479 761 476.333 761 471 cv
761 449 li
761 443.667 763.667 441 769 441 cv
cp
0 0 0 rgb
@
809 441 mo
831 441 li
836.333 441 839 443.667 839 449 cv
839 471 li
839 476.333 836.333 479 831 479 cv
809 479 li
803.667 479 801 476.333 801 471 cv
801 449 li
801 443.667 803.667 441 809 441 cv
cp
0 .690196 .776471 rgb
f
809 441 mo
831 441 li
836.333 441 839 443.667 839 449 cv
839 471 li
839 476.333 836.333 479 831 479 cv
809 479 li
803.667 479 801 476.333 801 471 cv
801 449 li
801 443.667 803.667 441 809 441 cv
cp
0 0 0 rgb
@
849 441 mo
871 441 li
876.333 441 879 443.667 879 449 cv
879 471 li
879 476.333 876.333 479 871 479 cv
849 479 li
843.667 479 841 476.333 841 471 cv
841 449 li
841 443.667 843.667 441 849 441 cv
cp
.309804 .85098 1 rgb
f
849 441 mo
871 441 li
876.333 441 879 443.667 879 449 cv
879 471 li
879 476.333 876.333 479 871 479 cv
849 479 li
843.667 479 841 476.333 841 471 cv
841 449 li
841 443.667 843.667 441 849 441 cv
cp
0 0 0 rgb
@
889 441 mo
911 441 li
916.333 441 919 443.667 919 449 cv
919 471 li
919 476.333 916.333 479 911 479 cv
889 479 li
883.667 479 881 476.333 881 471 cv
881 449 li
881 443.667 883.667 441 889 441 cv
cp
.0588235 .745098 .847059 rgb
f
889 441 mo
911 441 li
916.333 441 919 443.667 919 449 cv
919 471 li
919 476.333 916.333 479 911 479 cv
889 479 li
883.667 479 881 476.333 881 471 cv
881 449 li
881 443.667 883.667 441 889 441 cv
cp
0 0 0 rgb
@
929 441 mo
951 441 li
956.333 441 959 443.667 959 449 cv
959 471 li
959 476.333 956.333 479 951 479 cv
929 479 li
923.667 479 921 476.333 921 471 cv
921 449 li
921 443.667 923.667 441 929 441 cv
cp
0 .443137 .784314 rgb
f
929 441 mo
951 441 li
956.333 441 959 443.667 959 449 cv
959 471 li
959 476.333 956.333 479 951 479 cv
929 479 li
923.667 479 921 476.333 921 471 cv
921 449 li
921 443.667 923.667 441 929 441 cv
cp
0 0 0 rgb
@
969 441 mo
991 441 li
996.333 441 999 443.667 999 449 cv
999 471 li
999 476.333 996.333 479 991 479 cv
969 479 li
963.667 479 961 476.333 961 471 cv
961 449 li
961 443.667 963.667 441 969 441 cv
cp
0 .454902 .686275 rgb
f
969 441 mo
991 441 li
996.333 441 999 443.667 999 449 cv
999 471 li
999 476.333 996.333 479 991 479 cv
969 479 li
963.667 479 961 476.333 961 471 cv
961 449 li
961 443.667 963.667 441 969 441 cv
cp
0 0 0 rgb
@
9 481 mo
31 481 li
36.3335 481 39 483.667 39 489 cv
39 511 li
39 516.333 36.3335 519 31 519 cv
9 519 li
3.6665 519 1 516.333 1 511 cv
1 489 li
1 483.667 3.6665 481 9 481 cv
cp
0 .478431 .721569 rgb
f
9 481 mo
31 481 li
36.3335 481 39 483.667 39 489 cv
39 511 li
39 516.333 36.3335 519 31 519 cv
9 519 li
3.6665 519 1 516.333 1 511 cv
1 489 li
1 483.667 3.6665 481 9 481 cv
cp
0 0 0 rgb
@
49 481 mo
71 481 li
76.3335 481 79 483.667 79 489 cv
79 511 li
79 516.333 76.3335 519 71 519 cv
49 519 li
43.6665 519 41 516.333 41 511 cv
41 489 li
41 483.667 43.6665 481 49 481 cv
cp
.0392157 .670588 .796078 rgb
f
49 481 mo
71 481 li
76.3335 481 79 483.667 79 489 cv
79 511 li
79 516.333 76.3335 519 71 519 cv
49 519 li
43.6665 519 41 516.333 41 511 cv
41 489 li
41 483.667 43.6665 481 49 481 cv
cp
0 0 0 rgb
@
89 481 mo
111 481 li
116.333 481 119 483.667 119 489 cv
119 511 li
119 516.333 116.333 519 111 519 cv
89 519 li
83.6665 519 81 516.333 81 511 cv
81 489 li
81 483.667 83.6665 481 89 481 cv
cp
.0745098 .733333 .909804 rgb
f
89 481 mo
111 481 li
116.333 481 119 483.667 119 489 cv
119 511 li
119 516.333 116.333 519 111 519 cv
89 519 li
83.6665 519 81 516.333 81 511 cv
81 489 li
81 483.667 83.6665 481 89 481 cv
cp
0 0 0 rgb
@
129 481 mo
151 481 li
156.333 481 159 483.667 159 489 cv
159 511 li
159 516.333 156.333 519 151 519 cv
129 519 li
123.667 519 121 516.333 121 511 cv
121 489 li
121 483.667 123.667 481 129 481 cv
cp
.227451 .996078 1 rgb
f
129 481 mo
151 481 li
156.333 481 159 483.667 159 489 cv
159 511 li
159 516.333 156.333 519 151 519 cv
129 519 li
123.667 519 121 516.333 121 511 cv
121 489 li
121 483.667 123.667 481 129 481 cv
cp
0 0 0 rgb
@
169 481 mo
191 481 li
196.333 481 199 483.667 199 489 cv
199 511 li
199 516.333 196.333 519 191 519 cv
169 519 li
163.667 519 161 516.333 161 511 cv
161 489 li
161 483.667 163.667 481 169 481 cv
cp
.364706 .984314 1 rgb
f
169 481 mo
191 481 li
196.333 481 199 483.667 199 489 cv
199 511 li
199 516.333 196.333 519 191 519 cv
169 519 li
163.667 519 161 516.333 161 511 cv
161 489 li
161 483.667 163.667 481 169 481 cv
cp
0 0 0 rgb
@
209 481 mo
231 481 li
236.333 481 239 483.667 239 489 cv
239 511 li
239 516.333 236.333 519 231 519 cv
209 519 li
203.667 519 201 516.333 201 511 cv
201 489 li
201 483.667 203.667 481 209 481 cv
cp
0 .478431 .564706 rgb
f
209 481 mo
231 481 li
236.333 481 239 483.667 239 489 cv
239 511 li
239 516.333 236.333 519 231 519 cv
209 519 li
203.667 519 201 516.333 201 511 cv
201 489 li
201 483.667 203.667 481 209 481 cv
cp
0 0 0 rgb
@
249 481 mo
271 481 li
276.333 481 279 483.667 279 489 cv
279 511 li
279 516.333 276.333 519 271 519 cv
249 519 li
243.667 519 241 516.333 241 511 cv
241 489 li
241 483.667 243.667 481 249 481 cv
cp
0 .454902 .572549 rgb
f
249 481 mo
271 481 li
276.333 481 279 483.667 279 489 cv
279 511 li
279 516.333 276.333 519 271 519 cv
249 519 li
243.667 519 241 516.333 241 511 cv
241 489 li
241 483.667 243.667 481 249 481 cv
cp
0 0 0 rgb
@
289 481 mo
311 481 li
316.333 481 319 483.667 319 489 cv
319 511 li
319 516.333 316.333 519 311 519 cv
289 519 li
283.667 519 281 516.333 281 511 cv
281 489 li
281 483.667 283.667 481 289 481 cv
cp
0 .337255 .670588 rgb
f
289 481 mo
311 481 li
316.333 481 319 483.667 319 489 cv
319 511 li
319 516.333 316.333 519 311 519 cv
289 519 li
283.667 519 281 516.333 281 511 cv
281 489 li
281 483.667 283.667 481 289 481 cv
cp
0 0 0 rgb
@
329 481 mo
351 481 li
356.333 481 359 483.667 359 489 cv
359 511 li
359 516.333 356.333 519 351 519 cv
329 519 li
323.667 519 321 516.333 321 511 cv
321 489 li
321 483.667 323.667 481 329 481 cv
cp
.309804 .913725 1 rgb
f
329 481 mo
351 481 li
356.333 481 359 483.667 359 489 cv
359 511 li
359 516.333 356.333 519 351 519 cv
329 519 li
323.667 519 321 516.333 321 511 cv
321 489 li
321 483.667 323.667 481 329 481 cv
cp
0 0 0 rgb
@
369 481 mo
391 481 li
396.333 481 399 483.667 399 489 cv
399 511 li
399 516.333 396.333 519 391 519 cv
369 519 li
363.667 519 361 516.333 361 511 cv
361 489 li
361 483.667 363.667 481 369 481 cv
cp
.121569 .709804 .870588 rgb
f
369 481 mo
391 481 li
396.333 481 399 483.667 399 489 cv
399 511 li
399 516.333 396.333 519 391 519 cv
369 519 li
363.667 519 361 516.333 361 511 cv
361 489 li
361 483.667 363.667 481 369 481 cv
cp
0 0 0 rgb
@
409 481 mo
431 481 li
436.333 481 439 483.667 439 489 cv
439 511 li
439 516.333 436.333 519 431 519 cv
409 519 li
403.667 519 401 516.333 401 511 cv
401 489 li
401 483.667 403.667 481 409 481 cv
cp
.247059 .87451 1 rgb
f
409 481 mo
431 481 li
436.333 481 439 483.667 439 489 cv
439 511 li
439 516.333 436.333 519 431 519 cv
409 519 li
403.667 519 401 516.333 401 511 cv
401 489 li
401 483.667 403.667 481 409 481 cv
cp
0 0 0 rgb
@
449 481 mo
471 481 li
476.333 481 479 483.667 479 489 cv
479 511 li
479 516.333 476.333 519 471 519 cv
449 519 li
443.667 519 441 516.333 441 511 cv
441 489 li
441 483.667 443.667 481 449 481 cv
cp
0 .462745 .564706 rgb
f
449 481 mo
471 481 li
476.333 481 479 483.667 479 489 cv
479 511 li
479 516.333 476.333 519 471 519 cv
449 519 li
443.667 519 441 516.333 441 511 cv
441 489 li
441 483.667 443.667 481 449 481 cv
cp
0 0 0 rgb
@
489 481 mo
511 481 li
516.333 481 519 483.667 519 489 cv
519 511 li
519 516.333 516.333 519 511 519 cv
489 519 li
483.667 519 481 516.333 481 511 cv
481 489 li
481 483.667 483.667 481 489 481 cv
cp
.392157 1 1 rgb
f
489 481 mo
511 481 li
516.333 481 519 483.667 519 489 cv
519 511 li
519 516.333 516.333 519 511 519 cv
489 519 li
483.667 519 481 516.333 481 511 cv
481 489 li
481 483.667 483.667 481 489 481 cv
cp
0 0 0 rgb
@
529 481 mo
551 481 li
556.333 481 559 483.667 559 489 cv
559 511 li
559 516.333 556.333 519 551 519 cv
529 519 li
523.667 519 521 516.333 521 511 cv
521 489 li
521 483.667 523.667 481 529 481 cv
cp
.219608 .819608 .984314 rgb
f
529 481 mo
551 481 li
556.333 481 559 483.667 559 489 cv
559 511 li
559 516.333 556.333 519 551 519 cv
529 519 li
523.667 519 521 516.333 521 511 cv
521 489 li
521 483.667 523.667 481 529 481 cv
cp
0 0 0 rgb
@
569 481 mo
591 481 li
596.333 481 599 483.667 599 489 cv
599 511 li
599 516.333 596.333 519 591 519 cv
569 519 li
563.667 519 561 516.333 561 511 cv
561 489 li
561 483.667 563.667 481 569 481 cv
cp
.341176 .894118 1 rgb
f
569 481 mo
591 481 li
596.333 481 599 483.667 599 489 cv
599 511 li
599 516.333 596.333 519 591 519 cv
569 519 li
563.667 519 561 516.333 561 511 cv
561 489 li
561 483.667 563.667 481 569 481 cv
cp
0 0 0 rgb
@
609 481 mo
631 481 li
636.333 481 639 483.667 639 489 cv
639 511 li
639 516.333 636.333 519 631 519 cv
609 519 li
603.667 519 601 516.333 601 511 cv
601 489 li
601 483.667 603.667 481 609 481 cv
cp
.333333 1 1 rgb
f
609 481 mo
631 481 li
636.333 481 639 483.667 639 489 cv
639 511 li
639 516.333 636.333 519 631 519 cv
609 519 li
603.667 519 601 516.333 601 511 cv
601 489 li
601 483.667 603.667 481 609 481 cv
cp
0 0 0 rgb
@
649 481 mo
671 481 li
676.333 481 679 483.667 679 489 cv
679 511 li
679 516.333 676.333 519 671 519 cv
649 519 li
643.667 519 641 516.333 641 511 cv
641 489 li
641 483.667 643.667 481 649 481 cv
cp
0 .513726 .8 rgb
f
649 481 mo
671 481 li
676.333 481 679 483.667 679 489 cv
679 511 li
679 516.333 676.333 519 671 519 cv
649 519 li
643.667 519 641 516.333 641 511 cv
641 489 li
641 483.667 643.667 481 649 481 cv
cp
0 0 0 rgb
@
689 481 mo
711 481 li
716.333 481 719 483.667 719 489 cv
719 511 li
719 516.333 716.333 519 711 519 cv
689 519 li
683.667 519 681 516.333 681 511 cv
681 489 li
681 483.667 683.667 481 689 481 cv
cp
0 .631373 .913725 rgb
f
689 481 mo
711 481 li
716.333 481 719 483.667 719 489 cv
719 511 li
719 516.333 716.333 519 711 519 cv
689 519 li
683.667 519 681 516.333 681 511 cv
681 489 li
681 483.667 683.667 481 689 481 cv
cp
0 0 0 rgb
@
729 481 mo
751 481 li
756.333 481 759 483.667 759 489 cv
759 511 li
759 516.333 756.333 519 751 519 cv
729 519 li
723.667 519 721 516.333 721 511 cv
721 489 li
721 483.667 723.667 481 729 481 cv
cp
0 .34902 .607843 rgb
f
729 481 mo
751 481 li
756.333 481 759 483.667 759 489 cv
759 511 li
759 516.333 756.333 519 751 519 cv
729 519 li
723.667 519 721 516.333 721 511 cv
721 489 li
721 483.667 723.667 481 729 481 cv
cp
0 0 0 rgb
@
769 481 mo
791 481 li
796.333 481 799 483.667 799 489 cv
799 511 li
799 516.333 796.333 519 791 519 cv
769 519 li
763.667 519 761 516.333 761 511 cv
761 489 li
761 483.667 763.667 481 769 481 cv
cp
0 .541176 .698039 rgb
f
769 481 mo
791 481 li
796.333 481 799 483.667 799 489 cv
799 511 li
799 516.333 796.333 519 791 519 cv
769 519 li
763.667 519 761 516.333 761 511 cv
761 489 li
761 483.667 763.667 481 769 481 cv
cp
0 0 0 rgb
@
809 481 mo
831 481 li
836.333 481 839 483.667 839 489 cv
839 511 li
839 516.333 836.333 519 831 519 cv
809 519 li
803.667 519 801 516.333 801 511 cv
801 489 li
801 483.667 803.667 481 809 481 cv
cp
.215686 .905882 1 rgb
f
809 481 mo
831 481 li
836.333 481 839 483.667 839 489 cv
839 511 li
839 516.333 836.333 519 831 519 cv
809 519 li
803.667 519 801 516.333 801 511 cv
801 489 li
801 483.667 803.667 481 809 481 cv
cp
0 0 0 rgb
@
849 481 mo
871 481 li
876.333 481 879 483.667 879 489 cv
879 511 li
879 516.333 876.333 519 871 519 cv
849 519 li
843.667 519 841 516.333 841 511 cv
841 489 li
841 483.667 843.667 481 849 481 cv
cp
0 .32549 .47451 rgb
f
849 481 mo
871 481 li
876.333 481 879 483.667 879 489 cv
879 511 li
879 516.333 876.333 519 871 519 cv
849 519 li
843.667 519 841 516.333 841 511 cv
841 489 li
841 483.667 843.667 481 849 481 cv
cp
0 0 0 rgb
@
889 481 mo
911 481 li
916.333 481 919 483.667 919 489 cv
919 511 li
919 516.333 916.333 519 911 519 cv
889 519 li
883.667 519 881 516.333 881 511 cv
881 489 li
881 483.667 883.667 481 889 481 cv
cp
.027451 .682353 .796078 rgb
f
889 481 mo
911 481 li
916.333 481 919 483.667 919 489 cv
919 511 li
919 516.333 916.333 519 911 519 cv
889 519 li
883.667 519 881 516.333 881 511 cv
881 489 li
881 483.667 883.667 481 889 481 cv
cp
0 0 0 rgb
@
929 481 mo
951 481 li
956.333 481 959 483.667 959 489 cv
959 511 li
959 516.333 956.333 519 951 519 cv
929 519 li
923.667 519 921 516.333 921 511 cv
921 489 li
921 483.667 923.667 481 929 481 cv
cp
.054902 .666667 .929412 rgb
f
929 481 mo
951 481 li
956.333 481 959 483.667 959 489 cv
959 511 li
959 516.333 956.333 519 951 519 cv
929 519 li
923.667 519 921 516.333 921 511 cv
921 489 li
921 483.667 923.667 481 929 481 cv
cp
0 0 0 rgb
@
969 481 mo
991 481 li
996.333 481 999 483.667 999 489 cv
999 511 li
999 516.333 996.333 519 991 519 cv
969 519 li
963.667 519 961 516.333 961 511 cv
961 489 li
961 483.667 963.667 481 969 481 cv
cp
.141176 .72549 1 rgb
f
969 481 mo
991 481 li
996.333 481 999 483.667 999 489 cv
999 511 li
999 516.333 996.333 519 991 519 cv
969 519 li
963.667 519 961 516.333 961 511 cv
961 489 li
961 483.667 963.667 481 969 481 cv
cp
0 0 0 rgb
@
9 521 mo
31 521 li
36.3335 521 39 523.667 39 529 cv
39 551 li
39 556.333 36.3335 559 31 559 cv
9 559 li
3.6665 559 1 556.333 1 551 cv
1 529 li
1 523.667 3.6665 521 9 521 cv
cp
0 .443137 .752941 rgb
f
9 521 mo
31 521 li
36.3335 521 39 523.667 39 529 cv
39 551 li
39 556.333 36.3335 559 31 559 cv
9 559 li
3.6665 559 1 556.333 1 551 cv
1 529 li
1 523.667 3.6665 521 9 521 cv
cp
0 0 0 rgb
@
49 521 mo
71 521 li
76.3335 521 79 523.667 79 529 cv
79 551 li
79 556.333 76.3335 559 71 559 cv
49 559 li
43.6665 559 41 556.333 41 551 cv
41 529 li
41 523.667 43.6665 521 49 521 cv
cp
0 .439216 .698039 rgb
f
49 521 mo
71 521 li
76.3335 521 79 523.667 79 529 cv
79 551 li
79 556.333 76.3335 559 71 559 cv
49 559 li
43.6665 559 41 556.333 41 551 cv
41 529 li
41 523.667 43.6665 521 49 521 cv
cp
0 0 0 rgb
@
89 521 mo
111 521 li
116.333 521 119 523.667 119 529 cv
119 551 li
119 556.333 116.333 559 111 559 cv
89 559 li
83.6665 559 81 556.333 81 551 cv
81 529 li
81 523.667 83.6665 521 89 521 cv
cp
0 .501961 .8 rgb
f
89 521 mo
111 521 li
116.333 521 119 523.667 119 529 cv
119 551 li
119 556.333 116.333 559 111 559 cv
89 559 li
83.6665 559 81 556.333 81 551 cv
81 529 li
81 523.667 83.6665 521 89 521 cv
cp
0 0 0 rgb
@
129 521 mo
151 521 li
156.333 521 159 523.667 159 529 cv
159 551 li
159 556.333 156.333 559 151 559 cv
129 559 li
123.667 559 121 556.333 121 551 cv
121 529 li
121 523.667 123.667 521 129 521 cv
cp
.196078 .698039 1 rgb
f
129 521 mo
151 521 li
156.333 521 159 523.667 159 529 cv
159 551 li
159 556.333 156.333 559 151 559 cv
129 559 li
123.667 559 121 556.333 121 551 cv
121 529 li
121 523.667 123.667 521 129 521 cv
cp
0 0 0 rgb
@
169 521 mo
191 521 li
196.333 521 199 523.667 199 529 cv
199 551 li
199 556.333 196.333 559 191 559 cv
169 559 li
163.667 559 161 556.333 161 551 cv
161 529 li
161 523.667 163.667 521 169 521 cv
cp
0 .443137 .670588 rgb
f
169 521 mo
191 521 li
196.333 521 199 523.667 199 529 cv
199 551 li
199 556.333 196.333 559 191 559 cv
169 559 li
163.667 559 161 556.333 161 551 cv
161 529 li
161 523.667 163.667 521 169 521 cv
cp
0 0 0 rgb
@
209 521 mo
231 521 li
236.333 521 239 523.667 239 529 cv
239 551 li
239 556.333 236.333 559 231 559 cv
209 559 li
203.667 559 201 556.333 201 551 cv
201 529 li
201 523.667 203.667 521 209 521 cv
cp
.407843 1 1 rgb
f
209 521 mo
231 521 li
236.333 521 239 523.667 239 529 cv
239 551 li
239 556.333 236.333 559 231 559 cv
209 559 li
203.667 559 201 556.333 201 551 cv
201 529 li
201 523.667 203.667 521 209 521 cv
cp
0 0 0 rgb
@
249 521 mo
271 521 li
276.333 521 279 523.667 279 529 cv
279 551 li
279 556.333 276.333 559 271 559 cv
249 559 li
243.667 559 241 556.333 241 551 cv
241 529 li
241 523.667 243.667 521 249 521 cv
cp
.305882 .941176 1 rgb
f
249 521 mo
271 521 li
276.333 521 279 523.667 279 529 cv
279 551 li
279 556.333 276.333 559 271 559 cv
249 559 li
243.667 559 241 556.333 241 551 cv
241 529 li
241 523.667 243.667 521 249 521 cv
cp
0 0 0 rgb
@
289 521 mo
311 521 li
316.333 521 319 523.667 319 529 cv
319 551 li
319 556.333 316.333 559 311 559 cv
289 559 li
283.667 559 281 556.333 281 551 cv
281 529 li
281 523.667 283.667 521 289 521 cv
cp
.207843 1 1 rgb
f
289 521 mo
311 521 li
316.333 521 319 523.667 319 529 cv
319 551 li
319 556.333 316.333 559 311 559 cv
289 559 li
283.667 559 281 556.333 281 551 cv
281 529 li
281 523.667 283.667 521 289 521 cv
cp
0 0 0 rgb
@
329 521 mo
351 521 li
356.333 521 359 523.667 359 529 cv
359 551 li
359 556.333 356.333 559 351 559 cv
329 559 li
323.667 559 321 556.333 321 551 cv
321 529 li
321 523.667 323.667 521 329 521 cv
cp
.411765 1 1 rgb
f
329 521 mo
351 521 li
356.333 521 359 523.667 359 529 cv
359 551 li
359 556.333 356.333 559 351 559 cv
329 559 li
323.667 559 321 556.333 321 551 cv
321 529 li
321 523.667 323.667 521 329 521 cv
cp
0 0 0 rgb
@
369 521 mo
391 521 li
396.333 521 399 523.667 399 529 cv
399 551 li
399 556.333 396.333 559 391 559 cv
369 559 li
363.667 559 361 556.333 361 551 cv
361 529 li
361 523.667 363.667 521 369 521 cv
cp
0 .415686 .580392 rgb
f
369 521 mo
391 521 li
396.333 521 399 523.667 399 529 cv
399 551 li
399 556.333 396.333 559 391 559 cv
369 559 li
363.667 559 361 556.333 361 551 cv
361 529 li
361 523.667 363.667 521 369 521 cv
cp
0 0 0 rgb
@
409 521 mo
431 521 li
436.333 521 439 523.667 439 529 cv
439 551 li
439 556.333 436.333 559 431 559 cv
409 559 li
403.667 559 401 556.333 401 551 cv
401 529 li
401 523.667 403.667 521 409 521 cv
cp
0 .533333 .709804 rgb
f
409 521 mo
431 521 li
436.333 521 439 523.667 439 529 cv
439 551 li
439 556.333 436.333 559 431 559 cv
409 559 li
403.667 559 401 556.333 401 551 cv
401 529 li
401 523.667 403.667 521 409 521 cv
cp
0 0 0 rgb
@
449 521 mo
471 521 li
476.333 521 479 523.667 479 529 cv
479 551 li
479 556.333 476.333 559 471 559 cv
449 559 li
443.667 559 441 556.333 441 551 cv
441 529 li
441 523.667 443.667 521 449 521 cv
cp
0 .552941 .764706 rgb
f
449 521 mo
471 521 li
476.333 521 479 523.667 479 529 cv
479 551 li
479 556.333 476.333 559 471 559 cv
449 559 li
443.667 559 441 556.333 441 551 cv
441 529 li
441 523.667 443.667 521 449 521 cv
cp
0 0 0 rgb
@
489 521 mo
511 521 li
516.333 521 519 523.667 519 529 cv
519 551 li
519 556.333 516.333 559 511 559 cv
489 559 li
483.667 559 481 556.333 481 551 cv
481 529 li
481 523.667 483.667 521 489 521 cv
cp
.0235294 .623529 .839216 rgb
f
489 521 mo
511 521 li
516.333 521 519 523.667 519 529 cv
519 551 li
519 556.333 516.333 559 511 559 cv
489 559 li
483.667 559 481 556.333 481 551 cv
481 529 li
481 523.667 483.667 521 489 521 cv
cp
0 0 0 rgb
@
529 521 mo
551 521 li
556.333 521 559 523.667 559 529 cv
559 551 li
559 556.333 556.333 559 551 559 cv
529 559 li
523.667 559 521 556.333 521 551 cv
521 529 li
521 523.667 523.667 521 529 521 cv
cp
0 .458824 .745098 rgb
f
529 521 mo
551 521 li
556.333 521 559 523.667 559 529 cv
559 551 li
559 556.333 556.333 559 551 559 cv
529 559 li
523.667 559 521 556.333 521 551 cv
521 529 li
521 523.667 523.667 521 529 521 cv
cp
0 0 0 rgb
@
569 521 mo
591 521 li
596.333 521 599 523.667 599 529 cv
599 551 li
599 556.333 596.333 559 591 559 cv
569 559 li
563.667 559 561 556.333 561 551 cv
561 529 li
561 523.667 563.667 521 569 521 cv
cp
0 .54902 .741176 rgb
f
569 521 mo
591 521 li
596.333 521 599 523.667 599 529 cv
599 551 li
599 556.333 596.333 559 591 559 cv
569 559 li
563.667 559 561 556.333 561 551 cv
561 529 li
561 523.667 563.667 521 569 521 cv
cp
0 0 0 rgb
@
609 521 mo
631 521 li
636.333 521 639 523.667 639 529 cv
639 551 li
639 556.333 636.333 559 631 559 cv
609 559 li
603.667 559 601 556.333 601 551 cv
601 529 li
601 523.667 603.667 521 609 521 cv
cp
.247059 .984314 1 rgb
f
609 521 mo
631 521 li
636.333 521 639 523.667 639 529 cv
639 551 li
639 556.333 636.333 559 631 559 cv
609 559 li
603.667 559 601 556.333 601 551 cv
601 529 li
601 523.667 603.667 521 609 521 cv
cp
0 0 0 rgb
@
649 521 mo
671 521 li
676.333 521 679 523.667 679 529 cv
679 551 li
679 556.333 676.333 559 671 559 cv
649 559 li
643.667 559 641 556.333 641 551 cv
641 529 li
641 523.667 643.667 521 649 521 cv
cp
.0431373 .631373 .917647 rgb
f
649 521 mo
671 521 li
676.333 521 679 523.667 679 529 cv
679 551 li
679 556.333 676.333 559 671 559 cv
649 559 li
643.667 559 641 556.333 641 551 cv
641 529 li
641 523.667 643.667 521 649 521 cv
cp
0 0 0 rgb
@
689 521 mo
711 521 li
716.333 521 719 523.667 719 529 cv
719 551 li
719 556.333 716.333 559 711 559 cv
689 559 li
683.667 559 681 556.333 681 551 cv
681 529 li
681 523.667 683.667 521 689 521 cv
cp
.329412 .827451 1 rgb
f
689 521 mo
711 521 li
716.333 521 719 523.667 719 529 cv
719 551 li
719 556.333 716.333 559 711 559 cv
689 559 li
683.667 559 681 556.333 681 551 cv
681 529 li
681 523.667 683.667 521 689 521 cv
cp
0 0 0 rgb
@
729 521 mo
751 521 li
756.333 521 759 523.667 759 529 cv
759 551 li
759 556.333 756.333 559 751 559 cv
729 559 li
723.667 559 721 556.333 721 551 cv
721 529 li
721 523.667 723.667 521 729 521 cv
cp
.337255 .996078 1 rgb
f
729 521 mo
751 521 li
756.333 521 759 523.667 759 529 cv
759 551 li
759 556.333 756.333 559 751 559 cv
729 559 li
723.667 559 721 556.333 721 551 cv
721 529 li
721 523.667 723.667 521 729 521 cv
cp
0 0 0 rgb
@
769 521 mo
791 521 li
796.333 521 799 523.667 799 529 cv
799 551 li
799 556.333 796.333 559 791 559 cv
769 559 li
763.667 559 761 556.333 761 551 cv
761 529 li
761 523.667 763.667 521 769 521 cv
cp
.27451 .843137 1 rgb
f
769 521 mo
791 521 li
796.333 521 799 523.667 799 529 cv
799 551 li
799 556.333 796.333 559 791 559 cv
769 559 li
763.667 559 761 556.333 761 551 cv
761 529 li
761 523.667 763.667 521 769 521 cv
cp
0 0 0 rgb
@
809 521 mo
831 521 li
836.333 521 839 523.667 839 529 cv
839 551 li
839 556.333 836.333 559 831 559 cv
809 559 li
803.667 559 801 556.333 801 551 cv
801 529 li
801 523.667 803.667 521 809 521 cv
cp
0 .517647 .807843 rgb
f
809 521 mo
831 521 li
836.333 521 839 523.667 839 529 cv
839 551 li
839 556.333 836.333 559 831 559 cv
809 559 li
803.667 559 801 556.333 801 551 cv
801 529 li
801 523.667 803.667 521 809 521 cv
cp
0 0 0 rgb
@
849 521 mo
871 521 li
876.333 521 879 523.667 879 529 cv
879 551 li
879 556.333 876.333 559 871 559 cv
849 559 li
843.667 559 841 556.333 841 551 cv
841 529 li
841 523.667 843.667 521 849 521 cv
cp
.027451 .627451 .956863 rgb
f
849 521 mo
871 521 li
876.333 521 879 523.667 879 529 cv
879 551 li
879 556.333 876.333 559 871 559 cv
849 559 li
843.667 559 841 556.333 841 551 cv
841 529 li
841 523.667 843.667 521 849 521 cv
cp
0 0 0 rgb
@
889 521 mo
911 521 li
916.333 521 919 523.667 919 529 cv
919 551 li
919 556.333 916.333 559 911 559 cv
889 559 li
883.667 559 881 556.333 881 551 cv
881 529 li
881 523.667 883.667 521 889 521 cv
cp
.00784314 .6 .8 rgb
f
889 521 mo
911 521 li
916.333 521 919 523.667 919 529 cv
919 551 li
919 556.333 916.333 559 911 559 cv
889 559 li
883.667 559 881 556.333 881 551 cv
881 529 li
881 523.667 883.667 521 889 521 cv
cp
0 0 0 rgb
@
929 521 mo
951 521 li
956.333 521 959 523.667 959 529 cv
959 551 li
959 556.333 956.333 559 951 559 cv
929 559 li
923.667 559 921 556.333 921 551 cv
921 529 li
921 523.667 923.667 521 929 521 cv
cp
.258824 .858824 1 rgb
f
929 521 mo
951 521 li
956.333 521 959 523.667 959 529 cv
959 551 li
959 556.333 956.333 559 951 559 cv
929 559 li
923.667 559 921 556.333 921 551 cv
921 529 li
921 523.667 923.667 521 929 521 cv
cp
0 0 0 rgb
@
969 521 mo
991 521 li
996.333 521 999 523.667 999 529 cv
999 551 li
999 556.333 996.333 559 991 559 cv
969 559 li
963.667 559 961 556.333 961 551 cv
961 529 li
961 523.667 963.667 521 969 521 cv
cp
.376471 1 1 rgb
f
969 521 mo
991 521 li
996.333 521 999 523.667 999 529 cv
999 551 li
999 556.333 996.333 559 991 559 cv
969 559 li
963.667 559 961 556.333 961 551 cv
961 529 li
961 523.667 963.667 521 969 521 cv
cp
0 0 0 rgb
@
9 561 mo
31 561 li
36.3335 561 39 563.667 39 569 cv
39 591 li
39 596.333 36.3335 599 31 599 cv
9 599 li
3.6665 599 1 596.333 1 591 cv
1 569 li
1 563.667 3.6665 561 9 561 cv
cp
.027451 .756863 .831373 rgb
f
9 561 mo
31 561 li
36.3335 561 39 563.667 39 569 cv
39 591 li
39 596.333 36.3335 599 31 599 cv
9 599 li
3.6665 599 1 596.333 1 591 cv
1 569 li
1 563.667 3.6665 561 9 561 cv
cp
0 0 0 rgb
@
49 561 mo
71 561 li
76.3335 561 79 563.667 79 569 cv
79 591 li
79 596.333 76.3335 599 71 599 cv
49 599 li
43.6665 599 41 596.333 41 591 cv
41 569 li
41 563.667 43.6665 561 49 561 cv
cp
.0745098 .8 .992157 rgb
f
49 561 mo
71 561 li
76.3335 561 79 563.667 79 569 cv
79 591 li
79 596.333 76.3335 599 71 599 cv
49 599 li
43.6665 599 41 596.333 41 591 cv
41 569 li
41 563.667 43.6665 561 49 561 cv
cp
0 0 0 rgb
@
89 561 mo
111 561 li
116.333 561 119 563.667 119 569 cv
119 591 li
119 596.333 116.333 599 111 599 cv
89 599 li
83.6665 599 81 596.333 81 591 cv
81 569 li
81 563.667 83.6665 561 89 561 cv
cp
0 .47451 .639216 rgb
f
89 561 mo
111 561 li
116.333 561 119 563.667 119 569 cv
119 591 li
119 596.333 116.333 599 111 599 cv
89 599 li
83.6665 599 81 596.333 81 591 cv
81 569 li
81 563.667 83.6665 561 89 561 cv
cp
0 0 0 rgb
@
129 561 mo
151 561 li
156.333 561 159 563.667 159 569 cv
159 591 li
159 596.333 156.333 599 151 599 cv
129 599 li
123.667 599 121 596.333 121 591 cv
121 569 li
121 563.667 123.667 561 129 561 cv
cp
0 .478431 .752941 rgb
f
129 561 mo
151 561 li
156.333 561 159 563.667 159 569 cv
159 591 li
159 596.333 156.333 599 151 599 cv
129 599 li
123.667 599 121 596.333 121 591 cv
121 569 li
121 563.667 123.667 561 129 561 cv
cp
0 0 0 rgb
@
169 561 mo
191 561 li
196.333 561 199 563.667 199 569 cv
199 591 li
199 596.333 196.333 599 191 599 cv
169 599 li
163.667 599 161 596.333 161 591 cv
161 569 li
161 563.667 163.667 561 169 561 cv
cp
.160784 .862745 .968627 rgb
f
169 561 mo
191 561 li
196.333 561 199 563.667 199 569 cv
199 591 li
199 596.333 196.333 599 191 599 cv
169 599 li
163.667 599 161 596.333 161 591 cv
161 569 li
161 563.667 163.667 561 169 561 cv
cp
0 0 0 rgb
@
209 561 mo
231 561 li
236.333 561 239 563.667 239 569 cv
239 591 li
239 596.333 236.333 599 231 599 cv
209 599 li
203.667 599 201 596.333 201 591 cv
201 569 li
201 563.667 203.667 561 209 561 cv
cp
.00392157 .709804 1 rgb
f
209 561 mo
231 561 li
236.333 561 239 563.667 239 569 cv
239 591 li
239 596.333 236.333 599 231 599 cv
209 599 li
203.667 599 201 596.333 201 591 cv
201 569 li
201 563.667 203.667 561 209 561 cv
cp
0 0 0 rgb
@
249 561 mo
271 561 li
276.333 561 279 563.667 279 569 cv
279 591 li
279 596.333 276.333 599 271 599 cv
249 599 li
243.667 599 241 596.333 241 591 cv
241 569 li
241 563.667 243.667 561 249 561 cv
cp
.25098 .792157 1 rgb
f
249 561 mo
271 561 li
276.333 561 279 563.667 279 569 cv
279 591 li
279 596.333 276.333 599 271 599 cv
249 599 li
243.667 599 241 596.333 241 591 cv
241 569 li
241 563.667 243.667 561 249 561 cv
cp
0 0 0 rgb
@
289 561 mo
311 561 li
316.333 561 319 563.667 319 569 cv
319 591 li
319 596.333 316.333 599 311 599 cv
289 599 li
283.667 599 281 596.333 281 591 cv
281 569 li
281 563.667 283.667 561 289 561 cv
cp
0 .54902 .807843 rgb
f
289 561 mo
311 561 li
316.333 561 319 563.667 319 569 cv
319 591 li
319 596.333 316.333 599 311 599 cv
289 599 li
283.667 599 281 596.333 281 591 cv
281 569 li
281 563.667 283.667 561 289 561 cv
cp
0 0 0 rgb
@
329 561 mo
351 561 li
356.333 561 359 563.667 359 569 cv
359 591 li
359 596.333 356.333 599 351 599 cv
329 599 li
323.667 599 321 596.333 321 591 cv
321 569 li
321 563.667 323.667 561 329 561 cv
cp
0 .392157 .643137 rgb
f
329 561 mo
351 561 li
356.333 561 359 563.667 359 569 cv
359 591 li
359 596.333 356.333 599 351 599 cv
329 599 li
323.667 599 321 596.333 321 591 cv
321 569 li
321 563.667 323.667 561 329 561 cv
cp
0 0 0 rgb
@
369 561 mo
391 561 li
396.333 561 399 563.667 399 569 cv
399 591 li
399 596.333 396.333 599 391 599 cv
369 599 li
363.667 599 361 596.333 361 591 cv
361 569 li
361 563.667 363.667 561 369 561 cv
cp
0 .490196 .647059 rgb
f
369 561 mo
391 561 li
396.333 561 399 563.667 399 569 cv
399 591 li
399 596.333 396.333 599 391 599 cv
369 599 li
363.667 599 361 596.333 361 591 cv
361 569 li
361 563.667 363.667 561 369 561 cv
cp
0 0 0 rgb
@
409 561 mo
431 561 li
436.333 561 439 563.667 439 569 cv
439 591 li
439 596.333 436.333 599 431 599 cv
409 599 li
403.667 599 401 596.333 401 591 cv
401 569 li
401 563.667 403.667 561 409 561 cv
cp
0 .541176 .811765 rgb
f
409 561 mo
431 561 li
436.333 561 439 563.667 439 569 cv
439 591 li
439 596.333 436.333 599 431 599 cv
409 599 li
403.667 599 401 596.333 401 591 cv
401 569 li
401 563.667 403.667 561 409 561 cv
cp
0 0 0 rgb
@
449 561 mo
471 561 li
476.333 561 479 563.667 479 569 cv
479 591 li
479 596.333 476.333 599 471 599 cv
449 599 li
443.667 599 441 596.333 441 591 cv
441 569 li
441 563.667 443.667 561 449 561 cv
cp
0 .317647 .494118 rgb
f
449 561 mo
471 561 li
476.333 561 479 563.667 479 569 cv
479 591 li
479 596.333 476.333 599 471 599 cv
449 599 li
443.667 599 441 596.333 441 591 cv
441 569 li
441 563.667 443.667 561 449 561 cv
cp
0 0 0 rgb
@
489 561 mo
511 561 li
516.333 561 519 563.667 519 569 cv
519 591 li
519 596.333 516.333 599 511 599 cv
489 599 li
483.667 599 481 596.333 481 591 cv
481 569 li
481 563.667 483.667 561 489 561 cv
cp
.0941176 .807843 .956863 rgb
f
489 561 mo
511 561 li
516.333 561 519 563.667 519 569 cv
519 591 li
519 596.333 516.333 599 511 599 cv
489 599 li
483.667 599 481 596.333 481 591 cv
481 569 li
481 563.667 483.667 561 489 561 cv
cp
0 0 0 rgb
@
529 561 mo
551 561 li
556.333 561 559 563.667 559 569 cv
559 591 li
559 596.333 556.333 599 551 599 cv
529 599 li
523.667 599 521 596.333 521 591 cv
521 569 li
521 563.667 523.667 561 529 561 cv
cp
0 .705882 .835294 rgb
f
529 561 mo
551 561 li
556.333 561 559 563.667 559 569 cv
559 591 li
559 596.333 556.333 599 551 599 cv
529 599 li
523.667 599 521 596.333 521 591 cv
521 569 li
521 563.667 523.667 561 529 561 cv
cp
0 0 0 rgb
@
569 561 mo
591 561 li
596.333 561 599 563.667 599 569 cv
599 591 li
599 596.333 596.333 599 591 599 cv
569 599 li
563.667 599 561 596.333 561 591 cv
561 569 li
561 563.667 563.667 561 569 561 cv
cp
.0431373 .619608 .847059 rgb
f
569 561 mo
591 561 li
596.333 561 599 563.667 599 569 cv
599 591 li
599 596.333 596.333 599 591 599 cv
569 599 li
563.667 599 561 596.333 561 591 cv
561 569 li
561 563.667 563.667 561 569 561 cv
cp
0 0 0 rgb
@
609 561 mo
631 561 li
636.333 561 639 563.667 639 569 cv
639 591 li
639 596.333 636.333 599 631 599 cv
609 599 li
603.667 599 601 596.333 601 591 cv
601 569 li
601 563.667 603.667 561 609 561 cv
cp
.0627451 .698039 .898039 rgb
f
609 561 mo
631 561 li
636.333 561 639 563.667 639 569 cv
639 591 li
639 596.333 636.333 599 631 599 cv
609 599 li
603.667 599 601 596.333 601 591 cv
601 569 li
601 563.667 603.667 561 609 561 cv
cp
0 0 0 rgb
@
649 561 mo
671 561 li
676.333 561 679 563.667 679 569 cv
679 591 li
679 596.333 676.333 599 671 599 cv
649 599 li
643.667 599 641 596.333 641 591 cv
641 569 li
641 563.667 643.667 561 649 561 cv
cp
.0705882 .647059 .803922 rgb
f
649 561 mo
671 561 li
676.333 561 679 563.667 679 569 cv
679 591 li
679 596.333 676.333 599 671 599 cv
649 599 li
643.667 599 641 596.333 641 591 cv
641 569 li
641 563.667 643.667 561 649 561 cv
cp
0 0 0 rgb
@
689 561 mo
711 561 li
716.333 561 719 563.667 719 569 cv
719 591 li
719 596.333 716.333 599 711 599 cv
689 599 li
683.667 599 681 596.333 681 591 cv
681 569 li
681 563.667 683.667 561 689 561 cv
cp
.0235294 .796078 1 rgb
f
689 561 mo
711 561 li
716.333 561 719 563.667 719 569 cv
719 591 li
719 596.333 716.333 599 711 599 cv
689 599 li
683.667 599 681 596.333 681 591 cv
681 569 li
681 563.667 683.667 561 689 561 cv
cp
0 0 0 rgb
@
729 561 mo
751 561 li
756.333 561 759 563.667 759 569 cv
759 591 li
759 596.333 756.333 599 751 599 cv
729 599 li
723.667 599 721 596.333 721 591 cv
721 569 li
721 563.667 723.667 561 729 561 cv
cp
.133333 .670588 .964706 rgb
f
729 561 mo
751 561 li
756.333 561 759 563.667 759 569 cv
759 591 li
759 596.333 756.333 599 751 599 cv
729 599 li
723.667 599 721 596.333 721 591 cv
721 569 li
721 563.667 723.667 561 729 561 cv
cp
0 0 0 rgb
@
769 561 mo
791 561 li
796.333 561 799 563.667 799 569 cv
799 591 li
799 596.333 796.333 599 791 599 cv
769 599 li
763.667 599 761 596.333 761 591 cv
761 569 li
761 563.667 763.667 561 769 561 cv
cp
.172549 .776471 .937255 rgb
f
769 561 mo
791 561 li
796.333 561 799 563.667 799 569 cv
799 591 li
799 596.333 796.333 599 791 599 cv
769 599 li
763.667 599 761 596.333 761 591 cv
761 569 li
761 563.667 763.667 561 769 561 cv
cp
0 0 0 rgb
@
809 561 mo
831 561 li
836.333 561 839 563.667 839 569 cv
839 591 li
839 596.333 836.333 599 831 599 cv
809 599 li
803.667 599 801 596.333 801 591 cv
801 569 li
801 563.667 803.667 561 809 561 cv
cp
0 .639216 .917647 rgb
f
809 561 mo
831 561 li
836.333 561 839 563.667 839 569 cv
839 591 li
839 596.333 836.333 599 831 599 cv
809 599 li
803.667 599 801 596.333 801 591 cv
801 569 li
801 563.667 803.667 561 809 561 cv
cp
0 0 0 rgb
@
849 561 mo
871 561 li
876.333 561 879 563.667 879 569 cv
879 591 li
879 596.333 876.333 599 871 599 cv
849 599 li
843.667 599 841 596.333 841 591 cv
841 569 li
841 563.667 843.667 561 849 561 cv
cp
0 .588235 .815686 rgb
f
849 561 mo
871 561 li
876.333 561 879 563.667 879 569 cv
879 591 li
879 596.333 876.333 599 871 599 cv
849 599 li
843.667 599 841 596.333 841 591 cv
841 569 li
841 563.667 843.667 561 849 561 cv
cp
0 0 0 rgb
@
889 561 mo
911 561 li
916.333 561 919 563.667 919 569 cv
919 591 li
919 596.333 916.333 599 911 599 cv
889 599 li
883.667 599 881 596.333 881 591 cv
881 569 li
881 563.667 883.667 561 889 561 cv
cp
.356863 1 1 rgb
f
889 561 mo
911 561 li
916.333 561 919 563.667 919 569 cv
919 591 li
919 596.333 916.333 599 911 599 cv
889 599 li
883.667 599 881 596.333 881 591 cv
881 569 li
881 563.667 883.667 561 889 561 cv
cp
0 0 0 rgb
@
929 561 mo
951 561 li
956.333 561 959 563.667 959 569 cv
959 591 li
959 596.333 956.333 599 951 599 cv
929 599 li
923.667 599 921 596.333 921 591 cv
921 569 li
921 563.667 923.667 561 929 561 cv
cp
0 .733333 .964706 rgb
f
929 561 mo
951 561 li
956.333 561 959 563.667 959 569 cv
959 591 li
959 596.333 956.333 599 951 599 cv
929 599 li
923.667 599 921 596.333 921 591 cv
921 569 li
921 563.667 923.667 561 929 561 cv
cp
0 0 0 rgb
@
969 561 mo
991 561 li
996.333 561 999 563.667 999 569 cv
999 591 li
999 596.333 996.333 599 991 599 cv
969 599 li
963.667 599 961 596.333 961 591 cv
961 569 li
961 563.667 963.667 561 969 561 cv
cp
.243137 .784314 1 rgb
f
969 561 mo
991 561 li
996.333 561 999 563.667 999 569 cv
999 591 li
999 596.333 996.333 599 991 599 cv
969 599 li
963.667 599 961 596.333 961 591 cv
961 569 li
961 563.667 963.667 561 969 561 cv
cp
0 0 0 rgb
@
9 601 mo
31 601 li
36.3335 601 39 603.667 39 609 cv
39 631 li
39 636.333 36.3335 639 31 639 cv
9 639 li
3.6665 639 1 636.333 1 631 cv
1 609 li
1 603.667 3.6665 601 9 601 cv
cp
.235294 .984314 1 rgb
f
9 601 mo
31 601 li
36.3335 601 39 603.667 39 609 cv
39 631 li
39 636.333 36.3335 639 31 639 cv
9 639 li
3.6665 639 1 636.333 1 631 cv
1 609 li
1 603.667 3.6665 601 9 601 cv
cp
0 0 0 rgb
@
49 601 mo
71 601 li
76.3335 601 79 603.667 79 609 cv
79 631 li
79 636.333 76.3335 639 71 639 cv
49 639 li
43.6665 639 41 636.333 41 631 cv
41 609 li
41 603.667 43.6665 601 49 601 cv
cp
.160784 .690196 .913725 rgb
f
49 601 mo
71 601 li
76.3335 601 79 603.667 79 609 cv
79 631 li
79 636.333 76.3335 639 71 639 cv
49 639 li
43.6665 639 41 636.333 41 631 cv
41 609 li
41 603.667 43.6665 601 49 601 cv
cp
0 0 0 rgb
@
89 601 mo
111 601 li
116.333 601 119 603.667 119 609 cv
119 631 li
119 636.333 116.333 639 111 639 cv
89 639 li
83.6665 639 81 636.333 81 631 cv
81 609 li
81 603.667 83.6665 601 89 601 cv
cp
0 .396078 .631373 rgb
f
89 601 mo
111 601 li
116.333 601 119 603.667 119 609 cv
119 631 li
119 636.333 116.333 639 111 639 cv
89 639 li
83.6665 639 81 636.333 81 631 cv
81 609 li
81 603.667 83.6665 601 89 601 cv
cp
0 0 0 rgb
@
129 601 mo
151 601 li
156.333 601 159 603.667 159 609 cv
159 631 li
159 636.333 156.333 639 151 639 cv
129 639 li
123.667 639 121 636.333 121 631 cv
121 609 li
121 603.667 123.667 601 129 601 cv
cp
0 .533333 .678431 rgb
f
129 601 mo
151 601 li
156.333 601 159 603.667 159 609 cv
159 631 li
159 636.333 156.333 639 151 639 cv
129 639 li
123.667 639 121 636.333 121 631 cv
121 609 li
121 603.667 123.667 601 129 601 cv
cp
0 0 0 rgb
@
169 601 mo
191 601 li
196.333 601 199 603.667 199 609 cv
199 631 li
199 636.333 196.333 639 191 639 cv
169 639 li
163.667 639 161 636.333 161 631 cv
161 609 li
161 603.667 163.667 601 169 601 cv
cp
0 .360784 .596078 rgb
f
169 601 mo
191 601 li
196.333 601 199 603.667 199 609 cv
199 631 li
199 636.333 196.333 639 191 639 cv
169 639 li
163.667 639 161 636.333 161 631 cv
161 609 li
161 603.667 163.667 601 169 601 cv
cp
0 0 0 rgb
@
209 601 mo
231 601 li
236.333 601 239 603.667 239 609 cv
239 631 li
239 636.333 236.333 639 231 639 cv
209 639 li
203.667 639 201 636.333 201 631 cv
201 609 li
201 603.667 203.667 601 209 601 cv
cp
0 .65098 .917647 rgb
f
209 601 mo
231 601 li
236.333 601 239 603.667 239 609 cv
239 631 li
239 636.333 236.333 639 231 639 cv
209 639 li
203.667 639 201 636.333 201 631 cv
201 609 li
201 603.667 203.667 601 209 601 cv
cp
0 0 0 rgb
@
249 601 mo
271 601 li
276.333 601 279 603.667 279 609 cv
279 631 li
279 636.333 276.333 639 271 639 cv
249 639 li
243.667 639 241 636.333 241 631 cv
241 609 li
241 603.667 243.667 601 249 601 cv
cp
.0235294 .658824 .835294 rgb
f
249 601 mo
271 601 li
276.333 601 279 603.667 279 609 cv
279 631 li
279 636.333 276.333 639 271 639 cv
249 639 li
243.667 639 241 636.333 241 631 cv
241 609 li
241 603.667 243.667 601 249 601 cv
cp
0 0 0 rgb
@
289 601 mo
311 601 li
316.333 601 319 603.667 319 609 cv
319 631 li
319 636.333 316.333 639 311 639 cv
289 639 li
283.667 639 281 636.333 281 631 cv
281 609 li
281 603.667 283.667 601 289 601 cv
cp
.388235 .988235 1 rgb
f
289 601 mo
311 601 li
316.333 601 319 603.667 319 609 cv
319 631 li
319 636.333 316.333 639 311 639 cv
289 639 li
283.667 639 281 636.333 281 631 cv
281 609 li
281 603.667 283.667 601 289 601 cv
cp
0 0 0 rgb
@
329 601 mo
351 601 li
356.333 601 359 603.667 359 609 cv
359 631 li
359 636.333 356.333 639 351 639 cv
329 639 li
323.667 639 321 636.333 321 631 cv
321 609 li
321 603.667 323.667 601 329 601 cv
cp
0 .341176 .568627 rgb
f
329 601 mo
351 601 li
356.333 601 359 603.667 359 609 cv
359 631 li
359 636.333 356.333 639 351 639 cv
329 639 li
323.667 639 321 636.333 321 631 cv
321 609 li
321 603.667 323.667 601 329 601 cv
cp
0 0 0 rgb
@
369 601 mo
391 601 li
396.333 601 399 603.667 399 609 cv
399 631 li
399 636.333 396.333 639 391 639 cv
369 639 li
363.667 639 361 636.333 361 631 cv
361 609 li
361 603.667 363.667 601 369 601 cv
cp
0 .592157 .835294 rgb
f
369 601 mo
391 601 li
396.333 601 399 603.667 399 609 cv
399 631 li
399 636.333 396.333 639 391 639 cv
369 639 li
363.667 639 361 636.333 361 631 cv
361 609 li
361 603.667 363.667 601 369 601 cv
cp
0 0 0 rgb
@
409 601 mo
431 601 li
436.333 601 439 603.667 439 609 cv
439 631 li
439 636.333 436.333 639 431 639 cv
409 639 li
403.667 639 401 636.333 401 631 cv
401 609 li
401 603.667 403.667 601 409 601 cv
cp
.109804 .623529 .847059 rgb
f
409 601 mo
431 601 li
436.333 601 439 603.667 439 609 cv
439 631 li
439 636.333 436.333 639 431 639 cv
409 639 li
403.667 639 401 636.333 401 631 cv
401 609 li
401 603.667 403.667 601 409 601 cv
cp
0 0 0 rgb
@
449 601 mo
471 601 li
476.333 601 479 603.667 479 609 cv
479 631 li
479 636.333 476.333 639 471 639 cv
449 639 li
443.667 639 441 636.333 441 631 cv
441 609 li
441 603.667 443.667 601 449 601 cv
cp
.298039 .870588 1 rgb
f
449 601 mo
471 601 li
476.333 601 479 603.667 479 609 cv
479 631 li
479 636.333 476.333 639 471 639 cv
449 639 li
443.667 639 441 636.333 441 631 cv
441 609 li
441 603.667 443.667 601 449 601 cv
cp
0 0 0 rgb
@
489 601 mo
511 601 li
516.333 601 519 603.667 519 609 cv
519 631 li
519 636.333 516.333 639 511 639 cv
489 639 li
483.667 639 481 636.333 481 631 cv
481 609 li
481 603.667 483.667 601 489 601 cv
cp
.12549 .745098 1 rgb
f
489 601 mo
511 601 li
516.333 601 519 603.667 519 609 cv
519 631 li
519 636.333 516.333 639 511 639 cv
489 639 li
483.667 639 481 636.333 481 631 cv
481 609 li
481 603.667 483.667 601 489 601 cv
cp
0 0 0 rgb
@
529 601 mo
551 601 li
556.333 601 559 603.667 559 609 cv
559 631 li
559 636.333 556.333 639 551 639 cv
529 639 li
523.667 639 521 636.333 521 631 cv
521 609 li
521 603.667 523.667 601 529 601 cv
cp
.188235 .862745 1 rgb
f
529 601 mo
551 601 li
556.333 601 559 603.667 559 609 cv
559 631 li
559 636.333 556.333 639 551 639 cv
529 639 li
523.667 639 521 636.333 521 631 cv
521 609 li
521 603.667 523.667 601 529 601 cv
cp
0 0 0 rgb
@
569 601 mo
591 601 li
596.333 601 599 603.667 599 609 cv
599 631 li
599 636.333 596.333 639 591 639 cv
569 639 li
563.667 639 561 636.333 561 631 cv
561 609 li
561 603.667 563.667 601 569 601 cv
cp
0 .470588 .678431 rgb
f
569 601 mo
591 601 li
596.333 601 599 603.667 599 609 cv
599 631 li
599 636.333 596.333 639 591 639 cv
569 639 li
563.667 639 561 636.333 561 631 cv
561 609 li
561 603.667 563.667 601 569 601 cv
cp
0 0 0 rgb
@
609 601 mo
631 601 li
636.333 601 639 603.667 639 609 cv
639 631 li
639 636.333 636.333 639 631 639 cv
609 639 li
603.667 639 601 636.333 601 631 cv
601 609 li
601 603.667 603.667 601 609 601 cv
cp
.333333 1 1 rgb
f
609 601 mo
631 601 li
636.333 601 639 603.667 639 609 cv
639 631 li
639 636.333 636.333 639 631 639 cv
609 639 li
603.667 639 601 636.333 601 631 cv
601 609 li
601 603.667 603.667 601 609 601 cv
cp
0 0 0 rgb
@
649 601 mo
671 601 li
676.333 601 679 603.667 679 609 cv
679 631 li
679 636.333 676.333 639 671 639 cv
649 639 li
643.667 639 641 636.333 641 631 cv
641 609 li
641 603.667 643.667 601 649 601 cv
cp
0 .305882 .498039 rgb
f
649 601 mo
671 601 li
676.333 601 679 603.667 679 609 cv
679 631 li
679 636.333 676.333 639 671 639 cv
649 639 li
643.667 639 641 636.333 641 631 cv
641 609 li
641 603.667 643.667 601 649 601 cv
cp
0 0 0 rgb
@
689 601 mo
711 601 li
716.333 601 719 603.667 719 609 cv
719 631 li
719 636.333 716.333 639 711 639 cv
689 639 li
683.667 639 681 636.333 681 631 cv
681 609 li
681 603.667 683.667 601 689 601 cv
cp
0 .560784 .737255 rgb
f
689 601 mo
711 601 li
716.333 601 719 603.667 719 609 cv
719 631 li
719 636.333 716.333 639 711 639 cv
689 639 li
683.667 639 681 636.333 681 631 cv
681 609 li
681 603.667 683.667 601 689 601 cv
cp
0 0 0 rgb
@
729 601 mo
751 601 li
756.333 601 759 603.667 759 609 cv
759 631 li
759 636.333 756.333 639 751 639 cv
729 639 li
723.667 639 721 636.333 721 631 cv
721 609 li
721 603.667 723.667 601 729 601 cv
cp
.227451 .921569 1 rgb
f
729 601 mo
751 601 li
756.333 601 759 603.667 759 609 cv
759 631 li
759 636.333 756.333 639 751 639 cv
729 639 li
723.667 639 721 636.333 721 631 cv
721 609 li
721 603.667 723.667 601 729 601 cv
cp
0 0 0 rgb
@
769 601 mo
791 601 li
796.333 601 799 603.667 799 609 cv
799 631 li
799 636.333 796.333 639 791 639 cv
769 639 li
763.667 639 761 636.333 761 631 cv
761 609 li
761 603.667 763.667 601 769 601 cv
cp
0 .537255 .854902 rgb
f
769 601 mo
791 601 li
796.333 601 799 603.667 799 609 cv
799 631 li
799 636.333 796.333 639 791 639 cv
769 639 li
763.667 639 761 636.333 761 631 cv
761 609 li
761 603.667 763.667 601 769 601 cv
cp
0 0 0 rgb
@
809 601 mo
831 601 li
836.333 601 839 603.667 839 609 cv
839 631 li
839 636.333 836.333 639 831 639 cv
809 639 li
803.667 639 801 636.333 801 631 cv
801 609 li
801 603.667 803.667 601 809 601 cv
cp
0 .470588 .635294 rgb
f
809 601 mo
831 601 li
836.333 601 839 603.667 839 609 cv
839 631 li
839 636.333 836.333 639 831 639 cv
809 639 li
803.667 639 801 636.333 801 631 cv
801 609 li
801 603.667 803.667 601 809 601 cv
cp
0 0 0 rgb
@
849 601 mo
871 601 li
876.333 601 879 603.667 879 609 cv
879 631 li
879 636.333 876.333 639 871 639 cv
849 639 li
843.667 639 841 636.333 841 631 cv
841 609 li
841 603.667 843.667 601 849 601 cv
cp
.427451 .960784 1 rgb
f
849 601 mo
871 601 li
876.333 601 879 603.667 879 609 cv
879 631 li
879 636.333 876.333 639 871 639 cv
849 639 li
843.667 639 841 636.333 841 631 cv
841 609 li
841 603.667 843.667 601 849 601 cv
cp
0 0 0 rgb
@
889 601 mo
911 601 li
916.333 601 919 603.667 919 609 cv
919 631 li
919 636.333 916.333 639 911 639 cv
889 639 li
883.667 639 881 636.333 881 631 cv
881 609 li
881 603.667 883.667 601 889 601 cv
cp
.435294 1 1 rgb
f
889 601 mo
911 601 li
916.333 601 919 603.667 919 609 cv
919 631 li
919 636.333 916.333 639 911 639 cv
889 639 li
883.667 639 881 636.333 881 631 cv
881 609 li
881 603.667 883.667 601 889 601 cv
cp
0 0 0 rgb
@
929 601 mo
951 601 li
956.333 601 959 603.667 959 609 cv
959 631 li
959 636.333 956.333 639 951 639 cv
929 639 li
923.667 639 921 636.333 921 631 cv
921 609 li
921 603.667 923.667 601 929 601 cv
cp
.254902 .878431 1 rgb
f
929 601 mo
951 601 li
956.333 601 959 603.667 959 609 cv
959 631 li
959 636.333 956.333 639 951 639 cv
929 639 li
923.667 639 921 636.333 921 631 cv
921 609 li
921 603.667 923.667 601 929 601 cv
cp
0 0 0 rgb
@
969 601 mo
991 601 li
996.333 601 999 603.667 999 609 cv
999 631 li
999 636.333 996.333 639 991 639 cv
969 639 li
963.667 639 961 636.333 961 631 cv
961 609 li
961 603.667 963.667 601 969 601 cv
cp
.372549 1 1 rgb
f
969 601 mo
991 601 li
996.333 601 999 603.667 999 609 cv
999 631 li
999 636.333 996.333 639 991 639 cv
969 639 li
963.667 639 961 636.333 961 631 cv
961 609 li
961 603.667 963.667 601 969 601 cv
cp
0 0 0 rgb
@
9 641 mo
31 641 li
36.3335 641 39 643.667 39 649 cv
39 671 li
39 676.333 36.3335 679 31 679 cv
9 679 li
3.6665 679 1 676.333 1 671 cv
1 649 li
1 643.667 3.6665 641 9 641 cv
cp
.294118 .964706 1 rgb
f
9 641 mo
31 641 li
36.3335 641 39 643.667 39 649 cv
39 671 li
39 676.333 36.3335 679 31 679 cv
9 679 li
3.6665 679 1 676.333 1 671 cv
1 649 li
1 643.667 3.6665 641 9 641 cv
cp
0 0 0 rgb
@
49 641 mo
71 641 li
76.3335 641 79 643.667 79 649 cv
79 671 li
79 676.333 76.3335 679 71 679 cv
49 679 li
43.6665 679 41 676.333 41 671 cv
41 649 li
41 643.667 43.6665 641 49 641 cv
cp
.321569 .92549 1 rgb
f
49 641 mo
71 641 li
76.3335 641 79 643.667 79 649 cv
79 671 li
79 676.333 76.3335 679 71 679 cv
49 679 li
43.6665 679 41 676.333 41 671 cv
41 649 li
41 643.667 43.6665 641 49 641 cv
cp
0 0 0 rgb
@
89 641 mo
111 641 li
116.333 641 119 643.667 119 649 cv
119 671 li
119 676.333 116.333 679 111 679 cv
89 679 li
83.6665 679 81 676.333 81 671 cv
81 649 li
81 643.667 83.6665 641 89 641 cv
cp
.137255 .819608 1 rgb
f
89 641 mo
111 641 li
116.333 641 119 643.667 119 649 cv
119 671 li
119 676.333 116.333 679 111 679 cv
89 679 li
83.6665 679 81 676.333 81 671 cv
81 649 li
81 643.667 83.6665 641 89 641 cv
cp
0 0 0 rgb
@
129 641 mo
151 641 li
156.333 641 159 643.667 159 649 cv
159 671 li
159 676.333 156.333 679 151 679 cv
129 679 li
123.667 679 121 676.333 121 671 cv
121 649 li
121 643.667 123.667 641 129 641 cv
cp
.0509804 .627451 .890196 rgb
f
129 641 mo
151 641 li
156.333 641 159 643.667 159 649 cv
159 671 li
159 676.333 156.333 679 151 679 cv
129 679 li
123.667 679 121 676.333 121 671 cv
121 649 li
121 643.667 123.667 641 129 641 cv
cp
0 0 0 rgb
@
169 641 mo
191 641 li
196.333 641 199 643.667 199 649 cv
199 671 li
199 676.333 196.333 679 191 679 cv
169 679 li
163.667 679 161 676.333 161 671 cv
161 649 li
161 643.667 163.667 641 169 641 cv
cp
0 .396078 .592157 rgb
f
169 641 mo
191 641 li
196.333 641 199 643.667 199 649 cv
199 671 li
199 676.333 196.333 679 191 679 cv
169 679 li
163.667 679 161 676.333 161 671 cv
161 649 li
161 643.667 163.667 641 169 641 cv
cp
0 0 0 rgb
@
209 641 mo
231 641 li
236.333 641 239 643.667 239 649 cv
239 671 li
239 676.333 236.333 679 231 679 cv
209 679 li
203.667 679 201 676.333 201 671 cv
201 649 li
201 643.667 203.667 641 209 641 cv
cp
.0666667 .658824 .839216 rgb
f
209 641 mo
231 641 li
236.333 641 239 643.667 239 649 cv
239 671 li
239 676.333 236.333 679 231 679 cv
209 679 li
203.667 679 201 676.333 201 671 cv
201 649 li
201 643.667 203.667 641 209 641 cv
cp
0 0 0 rgb
@
249 641 mo
271 641 li
276.333 641 279 643.667 279 649 cv
279 671 li
279 676.333 276.333 679 271 679 cv
249 679 li
243.667 679 241 676.333 241 671 cv
241 649 li
241 643.667 243.667 641 249 641 cv
cp
.152941 .741176 1 rgb
f
249 641 mo
271 641 li
276.333 641 279 643.667 279 649 cv
279 671 li
279 676.333 276.333 679 271 679 cv
249 679 li
243.667 679 241 676.333 241 671 cv
241 649 li
241 643.667 243.667 641 249 641 cv
cp
0 0 0 rgb
@
289 641 mo
311 641 li
316.333 641 319 643.667 319 649 cv
319 671 li
319 676.333 316.333 679 311 679 cv
289 679 li
283.667 679 281 676.333 281 671 cv
281 649 li
281 643.667 283.667 641 289 641 cv
cp
.133333 .796078 1 rgb
f
289 641 mo
311 641 li
316.333 641 319 643.667 319 649 cv
319 671 li
319 676.333 316.333 679 311 679 cv
289 679 li
283.667 679 281 676.333 281 671 cv
281 649 li
281 643.667 283.667 641 289 641 cv
cp
0 0 0 rgb
@
329 641 mo
351 641 li
356.333 641 359 643.667 359 649 cv
359 671 li
359 676.333 356.333 679 351 679 cv
329 679 li
323.667 679 321 676.333 321 671 cv
321 649 li
321 643.667 323.667 641 329 641 cv
cp
.0431373 .529412 .835294 rgb
f
329 641 mo
351 641 li
356.333 641 359 643.667 359 649 cv
359 671 li
359 676.333 356.333 679 351 679 cv
329 679 li
323.667 679 321 676.333 321 671 cv
321 649 li
321 643.667 323.667 641 329 641 cv
cp
0 0 0 rgb
@
369 641 mo
391 641 li
396.333 641 399 643.667 399 649 cv
399 671 li
399 676.333 396.333 679 391 679 cv
369 679 li
363.667 679 361 676.333 361 671 cv
361 649 li
361 643.667 363.667 641 369 641 cv
cp
.388235 .996078 1 rgb
f
369 641 mo
391 641 li
396.333 641 399 643.667 399 649 cv
399 671 li
399 676.333 396.333 679 391 679 cv
369 679 li
363.667 679 361 676.333 361 671 cv
361 649 li
361 643.667 363.667 641 369 641 cv
cp
0 0 0 rgb
@
409 641 mo
431 641 li
436.333 641 439 643.667 439 649 cv
439 671 li
439 676.333 436.333 679 431 679 cv
409 679 li
403.667 679 401 676.333 401 671 cv
401 649 li
401 643.667 403.667 641 409 641 cv
cp
.298039 .992157 1 rgb
f
409 641 mo
431 641 li
436.333 641 439 643.667 439 649 cv
439 671 li
439 676.333 436.333 679 431 679 cv
409 679 li
403.667 679 401 676.333 401 671 cv
401 649 li
401 643.667 403.667 641 409 641 cv
cp
0 0 0 rgb
@
449 641 mo
471 641 li
476.333 641 479 643.667 479 649 cv
479 671 li
479 676.333 476.333 679 471 679 cv
449 679 li
443.667 679 441 676.333 441 671 cv
441 649 li
441 643.667 443.667 641 449 641 cv
cp
.247059 .847059 1 rgb
f
449 641 mo
471 641 li
476.333 641 479 643.667 479 649 cv
479 671 li
479 676.333 476.333 679 471 679 cv
449 679 li
443.667 679 441 676.333 441 671 cv
441 649 li
441 643.667 443.667 641 449 641 cv
cp
0 0 0 rgb
@
489 641 mo
511 641 li
516.333 641 519 643.667 519 649 cv
519 671 li
519 676.333 516.333 679 511 679 cv
489 679 li
483.667 679 481 676.333 481 671 cv
481 649 li
481 643.667 483.667 641 489 641 cv
cp
.305882 .996078 1 rgb
f
489 641 mo
511 641 li
516.333 641 519 643.667 519 649 cv
519 671 li
519 676.333 516.333 679 511 679 cv
489 679 li
483.667 679 481 676.333 481 671 cv
481 649 li
481 643.667 483.667 641 489 641 cv
cp
0 0 0 rgb
@
529 641 mo
551 641 li
556.333 641 559 643.667 559 649 cv
559 671 li
559 676.333 556.333 679 551 679 cv
529 679 li
523.667 679 521 676.333 521 671 cv
521 649 li
521 643.667 523.667 641 529 641 cv
cp
.392157 1 1 rgb
f
529 641 mo
551 641 li
556.333 641 559 643.667 559 649 cv
559 671 li
559 676.333 556.333 679 551 679 cv
529 679 li
523.667 679 521 676.333 521 671 cv
521 649 li
521 643.667 523.667 641 529 641 cv
cp
0 0 0 rgb
@
569 641 mo
591 641 li
596.333 641 599 643.667 599 649 cv
599 671 li
599 676.333 596.333 679 591 679 cv
569 679 li
563.667 679 561 676.333 561 671 cv
561 649 li
561 643.667 563.667 641 569 641 cv
cp
0 .494118 .729412 rgb
f
569 641 mo
591 641 li
596.333 641 599 643.667 599 649 cv
599 671 li
599 676.333 596.333 679 591 679 cv
569 679 li
563.667 679 561 676.333 561 671 cv
561 649 li
561 643.667 563.667 641 569 641 cv
cp
0 0 0 rgb
@
609 641 mo
631 641 li
636.333 641 639 643.667 639 649 cv
639 671 li
639 676.333 636.333 679 631 679 cv
609 679 li
603.667 679 601 676.333 601 671 cv
601 649 li
601 643.667 603.667 641 609 641 cv
cp
0 .603922 .866667 rgb
f
609 641 mo
631 641 li
636.333 641 639 643.667 639 649 cv
639 671 li
639 676.333 636.333 679 631 679 cv
609 679 li
603.667 679 601 676.333 601 671 cv
601 649 li
601 643.667 603.667 641 609 641 cv
cp
0 0 0 rgb
@
649 641 mo
671 641 li
676.333 641 679 643.667 679 649 cv
679 671 li
679 676.333 676.333 679 671 679 cv
649 679 li
643.667 679 641 676.333 641 671 cv
641 649 li
641 643.667 643.667 641 649 641 cv
cp
.321569 .886275 1 rgb
f
649 641 mo
671 641 li
676.333 641 679 643.667 679 649 cv
679 671 li
679 676.333 676.333 679 671 679 cv
649 679 li
643.667 679 641 676.333 641 671 cv
641 649 li
641 643.667 643.667 641 649 641 cv
cp
0 0 0 rgb
@
689 641 mo
711 641 li
716.333 641 719 643.667 719 649 cv
719 671 li
719 676.333 716.333 679 711 679 cv
689 679 li
683.667 679 681 676.333 681 671 cv
681 649 li
681 643.667 683.667 641 689 641 cv
cp
.258824 .776471 1 rgb
f
689 641 mo
711 641 li
716.333 641 719 643.667 719 649 cv
719 671 li
719 676.333 716.333 679 711 679 cv
689 679 li
683.667 679 681 676.333 681 671 cv
681 649 li
681 643.667 683.667 641 689 641 cv
cp
0 0 0 rgb
@
729 641 mo
751 641 li
756.333 641 759 643.667 759 649 cv
759 671 li
759 676.333 756.333 679 751 679 cv
729 679 li
723.667 679 721 676.333 721 671 cv
721 649 li
721 643.667 723.667 641 729 641 cv
cp
0 .32549 .592157 rgb
f
729 641 mo
751 641 li
756.333 641 759 643.667 759 649 cv
759 671 li
759 676.333 756.333 679 751 679 cv
729 679 li
723.667 679 721 676.333 721 671 cv
721 649 li
721 643.667 723.667 641 729 641 cv
cp
0 0 0 rgb
@
769 641 mo
791 641 li
796.333 641 799 643.667 799 649 cv
799 671 li
799 676.333 796.333 679 791 679 cv
769 679 li
763.667 679 761 676.333 761 671 cv
761 649 li
761 643.667 763.667 641 769 641 cv
cp
.25098 .960784 1 rgb
f
769 641 mo
791 641 li
796.333 641 799 643.667 799 649 cv
799 671 li
799 676.333 796.333 679 791 679 cv
769 679 li
763.667 679 761 676.333 761 671 cv
761 649 li
761 643.667 763.667 641 769 641 cv
cp
0 0 0 rgb
@
809 641 mo
831 641 li
836.333 641 839 643.667 839 649 cv
839 671 li
839 676.333 836.333 679 831 679 cv
809 679 li
803.667 679 801 676.333 801 671 cv
801 649 li
801 643.667 803.667 641 809 641 cv
cp
.298039 .933333 1 rgb
f
809 641 mo
831 641 li
836.333 641 839 643.667 839 649 cv
839 671 li
839 676.333 836.333 679 831 679 cv
809 679 li
803.667 679 801 676.333 801 671 cv
801 649 li
801 643.667 803.667 641 809 641 cv
cp
0 0 0 rgb
@
849 641 mo
871 641 li
876.333 641 879 643.667 879 649 cv
879 671 li
879 676.333 876.333 679 871 679 cv
849 679 li
843.667 679 841 676.333 841 671 cv
841 649 li
841 643.667 843.667 641 849 641 cv
cp
0 .572549 .72549 rgb
f
849 641 mo
871 641 li
876.333 641 879 643.667 879 649 cv
879 671 li
879 676.333 876.333 679 871 679 cv
849 679 li
843.667 679 841 676.333 841 671 cv
841 649 li
841 643.667 843.667 641 849 641 cv
cp
0 0 0 rgb
@
889 641 mo
911 641 li
916.333 641 919 643.667 919 649 cv
919 671 li
919 676.333 916.333 679 911 679 cv
889 679 li
883.667 679 881 676.333 881 671 cv
881 649 li
881 643.667 883.667 641 889 641 cv
cp
.243137 1 1 rgb
f
889 641 mo
911 641 li
916.333 641 919 643.667 919 649 cv
919 671 li
919 676.333 916.333 679 911 679 cv
889 679 li
883.667 679 881 676.333 881 671 cv
881 649 li
881 643.667 883.667 641 889 641 cv
cp
0 0 0 rgb
@
929 641 mo
951 641 li
956.333 641 959 643.667 959 649 cv
959 671 li
959 676.333 956.333 679 951 679 cv
929 679 li
923.667 679 921 676.333 921 671 cv
921 649 li
921 643.667 923.667 641 929 641 cv
cp
.309804 1 1 rgb
f
929 641 mo
951 641 li
956.333 641 959 643.667 959 649 cv
959 671 li
959 676.333 956.333 679 951 679 cv
929 679 li
923.667 679 921 676.333 921 671 cv
921 649 li
921 643.667 923.667 641 929 641 cv
cp
0 0 0 rgb
@
969 641 mo
991 641 li
996.333 641 999 643.667 999 649 cv
999 671 li
999 676.333 996.333 679 991 679 cv
969 679 li
963.667 679 961 676.333 961 671 cv
961 649 li
961 643.667 963.667 641 969 641 cv
cp
0 .403922 .658824 rgb
f
969 641 mo
991 641 li
996.333 641 999 643.667 999 649 cv
999 671 li
999 676.333 996.333 679 991 679 cv
969 679 li
963.667 679 961 676.333 961 671 cv
961 649 li
961 643.667 963.667 641 969 641 cv
cp
0 0 0 rgb
@
9 681 mo
31 681 li
36.3335 681 39 683.667 39 689 cv
39 711 li
39 716.333 36.3335 719 31 719 cv
9 719 li
3.6665 719 1 716.333 1 711 cv
1 689 li
1 683.667 3.6665 681 9 681 cv
cp
.0980392 .619608 .862745 rgb
f
9 681 mo
31 681 li
36.3335 681 39 683.667 39 689 cv
39 711 li
39 716.333 36.3335 719 31 719 cv
9 719 li
3.6665 719 1 716.333 1 711 cv
1 689 li
1 683.667 3.6665 681 9 681 cv
cp
0 0 0 rgb
@
49 681 mo
71 681 li
76.3335 681 79 683.667 79 689 cv
79 711 li
79 716.333 76.3335 719 71 719 cv
49 719 li
43.6665 719 41 716.333 41 711 cv
41 689 li
41 683.667 43.6665 681 49 681 cv
cp
0 .270588 .580392 rgb
f
49 681 mo
71 681 li
76.3335 681 79 683.667 79 689 cv
79 711 li
79 716.333 76.3335 719 71 719 cv
49 719 li
43.6665 719 41 716.333 41 711 cv
41 689 li
41 683.667 43.6665 681 49 681 cv
cp
0 0 0 rgb
@
89 681 mo
111 681 li
116.333 681 119 683.667 119 689 cv
119 711 li
119 716.333 116.333 719 111 719 cv
89 719 li
83.6665 719 81 716.333 81 711 cv
81 689 li
81 683.667 83.6665 681 89 681 cv
cp
.223529 .956863 1 rgb
f
89 681 mo
111 681 li
116.333 681 119 683.667 119 689 cv
119 711 li
119 716.333 116.333 719 111 719 cv
89 719 li
83.6665 719 81 716.333 81 711 cv
81 689 li
81 683.667 83.6665 681 89 681 cv
cp
0 0 0 rgb
@
129 681 mo
151 681 li
156.333 681 159 683.667 159 689 cv
159 711 li
159 716.333 156.333 719 151 719 cv
129 719 li
123.667 719 121 716.333 121 711 cv
121 689 li
121 683.667 123.667 681 129 681 cv
cp
.0862745 .756863 .968627 rgb
f
129 681 mo
151 681 li
156.333 681 159 683.667 159 689 cv
159 711 li
159 716.333 156.333 719 151 719 cv
129 719 li
123.667 719 121 716.333 121 711 cv
121 689 li
121 683.667 123.667 681 129 681 cv
cp
0 0 0 rgb
@
169 681 mo
191 681 li
196.333 681 199 683.667 199 689 cv
199 711 li
199 716.333 196.333 719 191 719 cv
169 719 li
163.667 719 161 716.333 161 711 cv
161 689 li
161 683.667 163.667 681 169 681 cv
cp
.0823529 .72549 .819608 rgb
f
169 681 mo
191 681 li
196.333 681 199 683.667 199 689 cv
199 711 li
199 716.333 196.333 719 191 719 cv
169 719 li
163.667 719 161 716.333 161 711 cv
161 689 li
161 683.667 163.667 681 169 681 cv
cp
0 0 0 rgb
@
209 681 mo
231 681 li
236.333 681 239 683.667 239 689 cv
239 711 li
239 716.333 236.333 719 231 719 cv
209 719 li
203.667 719 201 716.333 201 711 cv
201 689 li
201 683.667 203.667 681 209 681 cv
cp
0 .560784 .701961 rgb
f
209 681 mo
231 681 li
236.333 681 239 683.667 239 689 cv
239 711 li
239 716.333 236.333 719 231 719 cv
209 719 li
203.667 719 201 716.333 201 711 cv
201 689 li
201 683.667 203.667 681 209 681 cv
cp
0 0 0 rgb
@
249 681 mo
271 681 li
276.333 681 279 683.667 279 689 cv
279 711 li
279 716.333 276.333 719 271 719 cv
249 719 li
243.667 719 241 716.333 241 711 cv
241 689 li
241 683.667 243.667 681 249 681 cv
cp
0 .596078 .705882 rgb
f
249 681 mo
271 681 li
276.333 681 279 683.667 279 689 cv
279 711 li
279 716.333 276.333 719 271 719 cv
249 719 li
243.667 719 241 716.333 241 711 cv
241 689 li
241 683.667 243.667 681 249 681 cv
cp
0 0 0 rgb
@
289 681 mo
311 681 li
316.333 681 319 683.667 319 689 cv
319 711 li
319 716.333 316.333 719 311 719 cv
289 719 li
283.667 719 281 716.333 281 711 cv
281 689 li
281 683.667 283.667 681 289 681 cv
cp
0 .533333 .635294 rgb
f
289 681 mo
311 681 li
316.333 681 319 683.667 319 689 cv
319 711 li
319 716.333 316.333 719 311 719 cv
289 719 li
283.667 719 281 716.333 281 711 cv
281 689 li
281 683.667 283.667 681 289 681 cv
cp
0 0 0 rgb
@
329 681 mo
351 681 li
356.333 681 359 683.667 359 689 cv
359 711 li
359 716.333 356.333 719 351 719 cv
329 719 li
323.667 719 321 716.333 321 711 cv
321 689 li
321 683.667 323.667 681 329 681 cv
cp
0 .352941 .584314 rgb
f
329 681 mo
351 681 li
356.333 681 359 683.667 359 689 cv
359 711 li
359 716.333 356.333 719 351 719 cv
329 719 li
323.667 719 321 716.333 321 711 cv
321 689 li
321 683.667 323.667 681 329 681 cv
cp
0 0 0 rgb
@
369 681 mo
391 681 li
396.333 681 399 683.667 399 689 cv
399 711 li
399 716.333 396.333 719 391 719 cv
369 719 li
363.667 719 361 716.333 361 711 cv
361 689 li
361 683.667 363.667 681 369 681 cv
cp
.270588 1 1 rgb
f
369 681 mo
391 681 li
396.333 681 399 683.667 399 689 cv
399 711 li
399 716.333 396.333 719 391 719 cv
369 719 li
363.667 719 361 716.333 361 711 cv
361 689 li
361 683.667 363.667 681 369 681 cv
cp
0 0 0 rgb
@
409 681 mo
431 681 li
436.333 681 439 683.667 439 689 cv
439 711 li
439 716.333 436.333 719 431 719 cv
409 719 li
403.667 719 401 716.333 401 711 cv
401 689 li
401 683.667 403.667 681 409 681 cv
cp
.176471 .843137 .964706 rgb
f
409 681 mo
431 681 li
436.333 681 439 683.667 439 689 cv
439 711 li
439 716.333 436.333 719 431 719 cv
409 719 li
403.667 719 401 716.333 401 711 cv
401 689 li
401 683.667 403.667 681 409 681 cv
cp
0 0 0 rgb
@
449 681 mo
471 681 li
476.333 681 479 683.667 479 689 cv
479 711 li
479 716.333 476.333 719 471 719 cv
449 719 li
443.667 719 441 716.333 441 711 cv
441 689 li
441 683.667 443.667 681 449 681 cv
cp
0 .290196 .564706 rgb
f
449 681 mo
471 681 li
476.333 681 479 683.667 479 689 cv
479 711 li
479 716.333 476.333 719 471 719 cv
449 719 li
443.667 719 441 716.333 441 711 cv
441 689 li
441 683.667 443.667 681 449 681 cv
cp
0 0 0 rgb
@
489 681 mo
511 681 li
516.333 681 519 683.667 519 689 cv
519 711 li
519 716.333 516.333 719 511 719 cv
489 719 li
483.667 719 481 716.333 481 711 cv
481 689 li
481 683.667 483.667 681 489 681 cv
cp
0 .760784 .886275 rgb
f
489 681 mo
511 681 li
516.333 681 519 683.667 519 689 cv
519 711 li
519 716.333 516.333 719 511 719 cv
489 719 li
483.667 719 481 716.333 481 711 cv
481 689 li
481 683.667 483.667 681 489 681 cv
cp
0 0 0 rgb
@
529 681 mo
551 681 li
556.333 681 559 683.667 559 689 cv
559 711 li
559 716.333 556.333 719 551 719 cv
529 719 li
523.667 719 521 716.333 521 711 cv
521 689 li
521 683.667 523.667 681 529 681 cv
cp
.0627451 .701961 1 rgb
f
529 681 mo
551 681 li
556.333 681 559 683.667 559 689 cv
559 711 li
559 716.333 556.333 719 551 719 cv
529 719 li
523.667 719 521 716.333 521 711 cv
521 689 li
521 683.667 523.667 681 529 681 cv
cp
0 0 0 rgb
@
569 681 mo
591 681 li
596.333 681 599 683.667 599 689 cv
599 711 li
599 716.333 596.333 719 591 719 cv
569 719 li
563.667 719 561 716.333 561 711 cv
561 689 li
561 683.667 563.667 681 569 681 cv
cp
.0352941 .788235 1 rgb
f
569 681 mo
591 681 li
596.333 681 599 683.667 599 689 cv
599 711 li
599 716.333 596.333 719 591 719 cv
569 719 li
563.667 719 561 716.333 561 711 cv
561 689 li
561 683.667 563.667 681 569 681 cv
cp
0 0 0 rgb
@
609 681 mo
631 681 li
636.333 681 639 683.667 639 689 cv
639 711 li
639 716.333 636.333 719 631 719 cv
609 719 li
603.667 719 601 716.333 601 711 cv
601 689 li
601 683.667 603.667 681 609 681 cv
cp
0 .376471 .760784 rgb
f
609 681 mo
631 681 li
636.333 681 639 683.667 639 689 cv
639 711 li
639 716.333 636.333 719 631 719 cv
609 719 li
603.667 719 601 716.333 601 711 cv
601 689 li
601 683.667 603.667 681 609 681 cv
cp
0 0 0 rgb
@
649 681 mo
671 681 li
676.333 681 679 683.667 679 689 cv
679 711 li
679 716.333 676.333 719 671 719 cv
649 719 li
643.667 719 641 716.333 641 711 cv
641 689 li
641 683.667 643.667 681 649 681 cv
cp
.0862745 .694118 1 rgb
f
649 681 mo
671 681 li
676.333 681 679 683.667 679 689 cv
679 711 li
679 716.333 676.333 719 671 719 cv
649 719 li
643.667 719 641 716.333 641 711 cv
641 689 li
641 683.667 643.667 681 649 681 cv
cp
0 0 0 rgb
@
689 681 mo
711 681 li
716.333 681 719 683.667 719 689 cv
719 711 li
719 716.333 716.333 719 711 719 cv
689 719 li
683.667 719 681 716.333 681 711 cv
681 689 li
681 683.667 683.667 681 689 681 cv
cp
.156863 .721569 1 rgb
f
689 681 mo
711 681 li
716.333 681 719 683.667 719 689 cv
719 711 li
719 716.333 716.333 719 711 719 cv
689 719 li
683.667 719 681 716.333 681 711 cv
681 689 li
681 683.667 683.667 681 689 681 cv
cp
0 0 0 rgb
@
729 681 mo
751 681 li
756.333 681 759 683.667 759 689 cv
759 711 li
759 716.333 756.333 719 751 719 cv
729 719 li
723.667 719 721 716.333 721 711 cv
721 689 li
721 683.667 723.667 681 729 681 cv
cp
0 .611765 .741176 rgb
f
729 681 mo
751 681 li
756.333 681 759 683.667 759 689 cv
759 711 li
759 716.333 756.333 719 751 719 cv
729 719 li
723.667 719 721 716.333 721 711 cv
721 689 li
721 683.667 723.667 681 729 681 cv
cp
0 0 0 rgb
@
769 681 mo
791 681 li
796.333 681 799 683.667 799 689 cv
799 711 li
799 716.333 796.333 719 791 719 cv
769 719 li
763.667 719 761 716.333 761 711 cv
761 689 li
761 683.667 763.667 681 769 681 cv
cp
.141176 .792157 .866667 rgb
f
769 681 mo
791 681 li
796.333 681 799 683.667 799 689 cv
799 711 li
799 716.333 796.333 719 791 719 cv
769 719 li
763.667 719 761 716.333 761 711 cv
761 689 li
761 683.667 763.667 681 769 681 cv
cp
0 0 0 rgb
@
809 681 mo
831 681 li
836.333 681 839 683.667 839 689 cv
839 711 li
839 716.333 836.333 719 831 719 cv
809 719 li
803.667 719 801 716.333 801 711 cv
801 689 li
801 683.667 803.667 681 809 681 cv
cp
.0431373 .686275 .929412 rgb
f
809 681 mo
831 681 li
836.333 681 839 683.667 839 689 cv
839 711 li
839 716.333 836.333 719 831 719 cv
809 719 li
803.667 719 801 716.333 801 711 cv
801 689 li
801 683.667 803.667 681 809 681 cv
cp
0 0 0 rgb
@
849 681 mo
871 681 li
876.333 681 879 683.667 879 689 cv
879 711 li
879 716.333 876.333 719 871 719 cv
849 719 li
843.667 719 841 716.333 841 711 cv
841 689 li
841 683.667 843.667 681 849 681 cv
cp
.207843 .901961 1 rgb
f
849 681 mo
871 681 li
876.333 681 879 683.667 879 689 cv
879 711 li
879 716.333 876.333 719 871 719 cv
849 719 li
843.667 719 841 716.333 841 711 cv
841 689 li
841 683.667 843.667 681 849 681 cv
cp
0 0 0 rgb
@
889 681 mo
911 681 li
916.333 681 919 683.667 919 689 cv
919 711 li
919 716.333 916.333 719 911 719 cv
889 719 li
883.667 719 881 716.333 881 711 cv
881 689 li
881 683.667 883.667 681 889 681 cv
cp
.219608 .862745 1 rgb
f
889 681 mo
911 681 li
916.333 681 919 683.667 919 689 cv
919 711 li
919 716.333 916.333 719 911 719 cv
889 719 li
883.667 719 881 716.333 881 711 cv
881 689 li
881 683.667 883.667 681 889 681 cv
cp
0 0 0 rgb
@
929 681 mo
951 681 li
956.333 681 959 683.667 959 689 cv
959 711 li
959 716.333 956.333 719 951 719 cv
929 719 li
923.667 719 921 716.333 921 711 cv
921 689 li
921 683.667 923.667 681 929 681 cv
cp
0 .454902 .682353 rgb
f
929 681 mo
951 681 li
956.333 681 959 683.667 959 689 cv
959 711 li
959 716.333 956.333 719 951 719 cv
929 719 li
923.667 719 921 716.333 921 711 cv
921 689 li
921 683.667 923.667 681 929 681 cv
cp
0 0 0 rgb
@
969 681 mo
991 681 li
996.333 681 999 683.667 999 689 cv
999 711 li
999 716.333 996.333 719 991 719 cv
969 719 li
963.667 719 961 716.333 961 711 cv
961 689 li
961 683.667 963.667 681 969 681 cv
cp
0 .376471 .494118 rgb
f
969 681 mo
991 681 li
996.333 681 999 683.667 999 689 cv
999 711 li
999 716.333 996.333 719 991 719 cv
969 719 li
963.667 719 961 716.333 961 711 cv
961 689 li
961 683.667 963.667 681 969 681 cv
cp
0 0 0 rgb
@
9 721 mo
31 721 li
36.3335 721 39 723.667 39 729 cv
39 751 li
39 756.333 36.3335 759 31 759 cv
9 759 li
3.6665 759 1 756.333 1 751 cv
1 729 li
1 723.667 3.6665 721 9 721 cv
cp
0 .509804 .764706 rgb
f
9 721 mo
31 721 li
36.3335 721 39 723.667 39 729 cv
39 751 li
39 756.333 36.3335 759 31 759 cv
9 759 li
3.6665 759 1 756.333 1 751 cv
1 729 li
1 723.667 3.6665 721 9 721 cv
cp
0 0 0 rgb
@
49 721 mo
71 721 li
76.3335 721 79 723.667 79 729 cv
79 751 li
79 756.333 76.3335 759 71 759 cv
49 759 li
43.6665 759 41 756.333 41 751 cv
41 729 li
41 723.667 43.6665 721 49 721 cv
cp
.372549 .996078 1 rgb
f
49 721 mo
71 721 li
76.3335 721 79 723.667 79 729 cv
79 751 li
79 756.333 76.3335 759 71 759 cv
49 759 li
43.6665 759 41 756.333 41 751 cv
41 729 li
41 723.667 43.6665 721 49 721 cv
cp
0 0 0 rgb
@
89 721 mo
111 721 li
116.333 721 119 723.667 119 729 cv
119 751 li
119 756.333 116.333 759 111 759 cv
89 759 li
83.6665 759 81 756.333 81 751 cv
81 729 li
81 723.667 83.6665 721 89 721 cv
cp
.227451 1 1 rgb
f
89 721 mo
111 721 li
116.333 721 119 723.667 119 729 cv
119 751 li
119 756.333 116.333 759 111 759 cv
89 759 li
83.6665 759 81 756.333 81 751 cv
81 729 li
81 723.667 83.6665 721 89 721 cv
cp
0 0 0 rgb
@
129 721 mo
151 721 li
156.333 721 159 723.667 159 729 cv
159 751 li
159 756.333 156.333 759 151 759 cv
129 759 li
123.667 759 121 756.333 121 751 cv
121 729 li
121 723.667 123.667 721 129 721 cv
cp
0 .498039 .772549 rgb
f
129 721 mo
151 721 li
156.333 721 159 723.667 159 729 cv
159 751 li
159 756.333 156.333 759 151 759 cv
129 759 li
123.667 759 121 756.333 121 751 cv
121 729 li
121 723.667 123.667 721 129 721 cv
cp
0 0 0 rgb
@
169 721 mo
191 721 li
196.333 721 199 723.667 199 729 cv
199 751 li
199 756.333 196.333 759 191 759 cv
169 759 li
163.667 759 161 756.333 161 751 cv
161 729 li
161 723.667 163.667 721 169 721 cv
cp
.329412 .992157 1 rgb
f
169 721 mo
191 721 li
196.333 721 199 723.667 199 729 cv
199 751 li
199 756.333 196.333 759 191 759 cv
169 759 li
163.667 759 161 756.333 161 751 cv
161 729 li
161 723.667 163.667 721 169 721 cv
cp
0 0 0 rgb
@
209 721 mo
231 721 li
236.333 721 239 723.667 239 729 cv
239 751 li
239 756.333 236.333 759 231 759 cv
209 759 li
203.667 759 201 756.333 201 751 cv
201 729 li
201 723.667 203.667 721 209 721 cv
cp
.207843 .831373 1 rgb
f
209 721 mo
231 721 li
236.333 721 239 723.667 239 729 cv
239 751 li
239 756.333 236.333 759 231 759 cv
209 759 li
203.667 759 201 756.333 201 751 cv
201 729 li
201 723.667 203.667 721 209 721 cv
cp
0 0 0 rgb
@
249 721 mo
271 721 li
276.333 721 279 723.667 279 729 cv
279 751 li
279 756.333 276.333 759 271 759 cv
249 759 li
243.667 759 241 756.333 241 751 cv
241 729 li
241 723.667 243.667 721 249 721 cv
cp
.286275 .972549 1 rgb
f
249 721 mo
271 721 li
276.333 721 279 723.667 279 729 cv
279 751 li
279 756.333 276.333 759 271 759 cv
249 759 li
243.667 759 241 756.333 241 751 cv
241 729 li
241 723.667 243.667 721 249 721 cv
cp
0 0 0 rgb
@
289 721 mo
311 721 li
316.333 721 319 723.667 319 729 cv
319 751 li
319 756.333 316.333 759 311 759 cv
289 759 li
283.667 759 281 756.333 281 751 cv
281 729 li
281 723.667 283.667 721 289 721 cv
cp
0 .494118 .686275 rgb
f
289 721 mo
311 721 li
316.333 721 319 723.667 319 729 cv
319 751 li
319 756.333 316.333 759 311 759 cv
289 759 li
283.667 759 281 756.333 281 751 cv
281 729 li
281 723.667 283.667 721 289 721 cv
cp
0 0 0 rgb
@
329 721 mo
351 721 li
356.333 721 359 723.667 359 729 cv
359 751 li
359 756.333 356.333 759 351 759 cv
329 759 li
323.667 759 321 756.333 321 751 cv
321 729 li
321 723.667 323.667 721 329 721 cv
cp
.223529 .72549 1 rgb
f
329 721 mo
351 721 li
356.333 721 359 723.667 359 729 cv
359 751 li
359 756.333 356.333 759 351 759 cv
329 759 li
323.667 759 321 756.333 321 751 cv
321 729 li
321 723.667 323.667 721 329 721 cv
cp
0 0 0 rgb
@
369 721 mo
391 721 li
396.333 721 399 723.667 399 729 cv
399 751 li
399 756.333 396.333 759 391 759 cv
369 759 li
363.667 759 361 756.333 361 751 cv
361 729 li
361 723.667 363.667 721 369 721 cv
cp
0 .545098 .780392 rgb
f
369 721 mo
391 721 li
396.333 721 399 723.667 399 729 cv
399 751 li
399 756.333 396.333 759 391 759 cv
369 759 li
363.667 759 361 756.333 361 751 cv
361 729 li
361 723.667 363.667 721 369 721 cv
cp
0 0 0 rgb
@
409 721 mo
431 721 li
436.333 721 439 723.667 439 729 cv
439 751 li
439 756.333 436.333 759 431 759 cv
409 759 li
403.667 759 401 756.333 401 751 cv
401 729 li
401 723.667 403.667 721 409 721 cv
cp
0 .376471 .666667 rgb
f
409 721 mo
431 721 li
436.333 721 439 723.667 439 729 cv
439 751 li
439 756.333 436.333 759 431 759 cv
409 759 li
403.667 759 401 756.333 401 751 cv
401 729 li
401 723.667 403.667 721 409 721 cv
cp
0 0 0 rgb
@
449 721 mo
471 721 li
476.333 721 479 723.667 479 729 cv
479 751 li
479 756.333 476.333 759 471 759 cv
449 759 li
443.667 759 441 756.333 441 751 cv
441 729 li
441 723.667 443.667 721 449 721 cv
cp
.278431 .921569 1 rgb
f
449 721 mo
471 721 li
476.333 721 479 723.667 479 729 cv
479 751 li
479 756.333 476.333 759 471 759 cv
449 759 li
443.667 759 441 756.333 441 751 cv
441 729 li
441 723.667 443.667 721 449 721 cv
cp
0 0 0 rgb
@
489 721 mo
511 721 li
516.333 721 519 723.667 519 729 cv
519 751 li
519 756.333 516.333 759 511 759 cv
489 759 li
483.667 759 481 756.333 481 751 cv
481 729 li
481 723.667 483.667 721 489 721 cv
cp
.25098 .792157 1 rgb
f
489 721 mo
511 721 li
516.333 721 519 723.667 519 729 cv
519 751 li
519 756.333 516.333 759 511 759 cv
489 759 li
483.667 759 481 756.333 481 751 cv
481 729 li
481 723.667 483.667 721 489 721 cv
cp
0 0 0 rgb
@
529 721 mo
551 721 li
556.333 721 559 723.667 559 729 cv
559 751 li
559 756.333 556.333 759 551 759 cv
529 759 li
523.667 759 521 756.333 521 751 cv
521 729 li
521 723.667 523.667 721 529 721 cv
cp
.168627 .858824 1 rgb
f
529 721 mo
551 721 li
556.333 721 559 723.667 559 729 cv
559 751 li
559 756.333 556.333 759 551 759 cv
529 759 li
523.667 759 521 756.333 521 751 cv
521 729 li
521 723.667 523.667 721 529 721 cv
cp
0 0 0 rgb
@
569 721 mo
591 721 li
596.333 721 599 723.667 599 729 cv
599 751 li
599 756.333 596.333 759 591 759 cv
569 759 li
563.667 759 561 756.333 561 751 cv
561 729 li
561 723.667 563.667 721 569 721 cv
cp
.0627451 .65098 .831373 rgb
f
569 721 mo
591 721 li
596.333 721 599 723.667 599 729 cv
599 751 li
599 756.333 596.333 759 591 759 cv
569 759 li
563.667 759 561 756.333 561 751 cv
561 729 li
561 723.667 563.667 721 569 721 cv
cp
0 0 0 rgb
@
609 721 mo
631 721 li
636.333 721 639 723.667 639 729 cv
639 751 li
639 756.333 636.333 759 631 759 cv
609 759 li
603.667 759 601 756.333 601 751 cv
601 729 li
601 723.667 603.667 721 609 721 cv
cp
0 .501961 .858824 rgb
f
609 721 mo
631 721 li
636.333 721 639 723.667 639 729 cv
639 751 li
639 756.333 636.333 759 631 759 cv
609 759 li
603.667 759 601 756.333 601 751 cv
601 729 li
601 723.667 603.667 721 609 721 cv
cp
0 0 0 rgb
@
649 721 mo
671 721 li
676.333 721 679 723.667 679 729 cv
679 751 li
679 756.333 676.333 759 671 759 cv
649 759 li
643.667 759 641 756.333 641 751 cv
641 729 li
641 723.667 643.667 721 649 721 cv
cp
0 .282353 .537255 rgb
f
649 721 mo
671 721 li
676.333 721 679 723.667 679 729 cv
679 751 li
679 756.333 676.333 759 671 759 cv
649 759 li
643.667 759 641 756.333 641 751 cv
641 729 li
641 723.667 643.667 721 649 721 cv
cp
0 0 0 rgb
@
689 721 mo
711 721 li
716.333 721 719 723.667 719 729 cv
719 751 li
719 756.333 716.333 759 711 759 cv
689 759 li
683.667 759 681 756.333 681 751 cv
681 729 li
681 723.667 683.667 721 689 721 cv
cp
.121569 .878431 1 rgb
f
689 721 mo
711 721 li
716.333 721 719 723.667 719 729 cv
719 751 li
719 756.333 716.333 759 711 759 cv
689 759 li
683.667 759 681 756.333 681 751 cv
681 729 li
681 723.667 683.667 721 689 721 cv
cp
0 0 0 rgb
@
729 721 mo
751 721 li
756.333 721 759 723.667 759 729 cv
759 751 li
759 756.333 756.333 759 751 759 cv
729 759 li
723.667 759 721 756.333 721 751 cv
721 729 li
721 723.667 723.667 721 729 721 cv
cp
0 .360784 .713726 rgb
f
729 721 mo
751 721 li
756.333 721 759 723.667 759 729 cv
759 751 li
759 756.333 756.333 759 751 759 cv
729 759 li
723.667 759 721 756.333 721 751 cv
721 729 li
721 723.667 723.667 721 729 721 cv
cp
0 0 0 rgb
@
769 721 mo
791 721 li
796.333 721 799 723.667 799 729 cv
799 751 li
799 756.333 796.333 759 791 759 cv
769 759 li
763.667 759 761 756.333 761 751 cv
761 729 li
761 723.667 763.667 721 769 721 cv
cp
.0823529 .686275 .933333 rgb
f
769 721 mo
791 721 li
796.333 721 799 723.667 799 729 cv
799 751 li
799 756.333 796.333 759 791 759 cv
769 759 li
763.667 759 761 756.333 761 751 cv
761 729 li
761 723.667 763.667 721 769 721 cv
cp
0 0 0 rgb
@
809 721 mo
831 721 li
836.333 721 839 723.667 839 729 cv
839 751 li
839 756.333 836.333 759 831 759 cv
809 759 li
803.667 759 801 756.333 801 751 cv
801 729 li
801 723.667 803.667 721 809 721 cv
cp
.145098 .654902 .960784 rgb
f
809 721 mo
831 721 li
836.333 721 839 723.667 839 729 cv
839 751 li
839 756.333 836.333 759 831 759 cv
809 759 li
803.667 759 801 756.333 801 751 cv
801 729 li
801 723.667 803.667 721 809 721 cv
cp
0 0 0 rgb
@
849 721 mo
871 721 li
876.333 721 879 723.667 879 729 cv
879 751 li
879 756.333 876.333 759 871 759 cv
849 759 li
843.667 759 841 756.333 841 751 cv
841 729 li
841 723.667 843.667 721 849 721 cv
cp
.105882 .6 .882353 rgb
f
849 721 mo
871 721 li
876.333 721 879 723.667 879 729 cv
879 751 li
879 756.333 876.333 759 871 759 cv
849 759 li
843.667 759 841 756.333 841 751 cv
841 729 li
841 723.667 843.667 721 849 721 cv
cp
0 0 0 rgb
@
889 721 mo
911 721 li
916.333 721 919 723.667 919 729 cv
919 751 li
919 756.333 916.333 759 911 759 cv
889 759 li
883.667 759 881 756.333 881 751 cv
881 729 li
881 723.667 883.667 721 889 721 cv
cp
0 .396078 .505882 rgb
f
889 721 mo
911 721 li
916.333 721 919 723.667 919 729 cv
919 751 li
919 756.333 916.333 759 911 759 cv
889 759 li
883.667 759 881 756.333 881 751 cv
881 729 li
881 723.667 883.667 721 889 721 cv
cp
0 0 0 rgb
@
929 721 mo
951 721 li
956.333 721 959 723.667 959 729 cv
959 751 li
959 756.333 956.333 759 951 759 cv
929 759 li
923.667 759 921 756.333 921 751 cv
921 729 li
921 723.667 923.667 721 929 721 cv
cp
0 .572549 .827451 rgb
f
929 721 mo
951 721 li
956.333 721 959 723.667 959 729 cv
959 751 li
959 756.333 956.333 759 951 759 cv
929 759 li
923.667 759 921 756.333 921 751 cv
921 729 li
921 723.667 923.667 721 929 721 cv
cp
0 0 0 rgb
@
969 721 mo
991 721 li
996.333 721 999 723.667 999 729 cv
999 751 li
999 756.333 996.333 759 991 759 cv
969 759 li
963.667 759 961 756.333 961 751 cv
961 729 li
961 723.667 963.667 721 969 721 cv
cp
0 .454902 .752941 rgb
f
969 721 mo
991 721 li
996.333 721 999 723.667 999 729 cv
999 751 li
999 756.333 996.333 759 991 759 cv
969 759 li
963.667 759 961 756.333 961 751 cv
961 729 li
961 723.667 963.667 721 969 721 cv
cp
0 0 0 rgb
@
9 761 mo
31 761 li
36.3335 761 39 763.667 39 769 cv
39 791 li
39 796.333 36.3335 799 31 799 cv
9 799 li
3.6665 799 1 796.333 1 791 cv
1 769 li
1 763.667 3.6665 761 9 761 cv
cp
.317647 .921569 1 rgb
f
9 761 mo
31 761 li
36.3335 761 39 763.667 39 769 cv
39 791 li
39 796.333 36.3335 799 31 799 cv
9 799 li
3.6665 799 1 796.333 1 791 cv
1 769 li
1 763.667 3.6665 761 9 761 cv
cp
0 0 0 rgb
@
49 761 mo
71 761 li
76.3335 761 79 763.667 79 769 cv
79 791 li
79 796.333 76.3335 799 71 799 cv
49 799 li
43.6665 799 41 796.333 41 791 cv
41 769 li
41 763.667 43.6665 761 49 761 cv
cp
0 .407843 .560784 rgb
f
49 761 mo
71 761 li
76.3335 761 79 763.667 79 769 cv
79 791 li
79 796.333 76.3335 799 71 799 cv
49 799 li
43.6665 799 41 796.333 41 791 cv
41 769 li
41 763.667 43.6665 761 49 761 cv
cp
0 0 0 rgb
@
89 761 mo
111 761 li
116.333 761 119 763.667 119 769 cv
119 791 li
119 796.333 116.333 799 111 799 cv
89 799 li
83.6665 799 81 796.333 81 791 cv
81 769 li
81 763.667 83.6665 761 89 761 cv
cp
.415686 1 1 rgb
f
89 761 mo
111 761 li
116.333 761 119 763.667 119 769 cv
119 791 li
119 796.333 116.333 799 111 799 cv
89 799 li
83.6665 799 81 796.333 81 791 cv
81 769 li
81 763.667 83.6665 761 89 761 cv
cp
0 0 0 rgb
@
129 761 mo
151 761 li
156.333 761 159 763.667 159 769 cv
159 791 li
159 796.333 156.333 799 151 799 cv
129 799 li
123.667 799 121 796.333 121 791 cv
121 769 li
121 763.667 123.667 761 129 761 cv
cp
0 .403922 .623529 rgb
f
129 761 mo
151 761 li
156.333 761 159 763.667 159 769 cv
159 791 li
159 796.333 156.333 799 151 799 cv
129 799 li
123.667 799 121 796.333 121 791 cv
121 769 li
121 763.667 123.667 761 129 761 cv
cp
0 0 0 rgb
@
169 761 mo
191 761 li
196.333 761 199 763.667 199 769 cv
199 791 li
199 796.333 196.333 799 191 799 cv
169 799 li
163.667 799 161 796.333 161 791 cv
161 769 li
161 763.667 163.667 761 169 761 cv
cp
0 .403922 .564706 rgb
f
169 761 mo
191 761 li
196.333 761 199 763.667 199 769 cv
199 791 li
199 796.333 196.333 799 191 799 cv
169 799 li
163.667 799 161 796.333 161 791 cv
161 769 li
161 763.667 163.667 761 169 761 cv
cp
0 0 0 rgb
@
209 761 mo
231 761 li
236.333 761 239 763.667 239 769 cv
239 791 li
239 796.333 236.333 799 231 799 cv
209 799 li
203.667 799 201 796.333 201 791 cv
201 769 li
201 763.667 203.667 761 209 761 cv
cp
0 .576471 .886275 rgb
f
209 761 mo
231 761 li
236.333 761 239 763.667 239 769 cv
239 791 li
239 796.333 236.333 799 231 799 cv
209 799 li
203.667 799 201 796.333 201 791 cv
201 769 li
201 763.667 203.667 761 209 761 cv
cp
0 0 0 rgb
@
249 761 mo
271 761 li
276.333 761 279 763.667 279 769 cv
279 791 li
279 796.333 276.333 799 271 799 cv
249 799 li
243.667 799 241 796.333 241 791 cv
241 769 li
241 763.667 243.667 761 249 761 cv
cp
0 .529412 .772549 rgb
f
249 761 mo
271 761 li
276.333 761 279 763.667 279 769 cv
279 791 li
279 796.333 276.333 799 271 799 cv
249 799 li
243.667 799 241 796.333 241 791 cv
241 769 li
241 763.667 243.667 761 249 761 cv
cp
0 0 0 rgb
@
289 761 mo
311 761 li
316.333 761 319 763.667 319 769 cv
319 791 li
319 796.333 316.333 799 311 799 cv
289 799 li
283.667 799 281 796.333 281 791 cv
281 769 li
281 763.667 283.667 761 289 761 cv
cp
0 .513726 .764706 rgb
f
289 761 mo
311 761 li
316.333 761 319 763.667 319 769 cv
319 791 li
319 796.333 316.333 799 311 799 cv
289 799 li
283.667 799 281 796.333 281 791 cv
281 769 li
281 763.667 283.667 761 289 761 cv
cp
0 0 0 rgb
@
329 761 mo
351 761 li
356.333 761 359 763.667 359 769 cv
359 791 li
359 796.333 356.333 799 351 799 cv
329 799 li
323.667 799 321 796.333 321 791 cv
321 769 li
321 763.667 323.667 761 329 761 cv
cp
0 .305882 .572549 rgb
f
329 761 mo
351 761 li
356.333 761 359 763.667 359 769 cv
359 791 li
359 796.333 356.333 799 351 799 cv
329 799 li
323.667 799 321 796.333 321 791 cv
321 769 li
321 763.667 323.667 761 329 761 cv
cp
0 0 0 rgb
@
369 761 mo
391 761 li
396.333 761 399 763.667 399 769 cv
399 791 li
399 796.333 396.333 799 391 799 cv
369 799 li
363.667 799 361 796.333 361 791 cv
361 769 li
361 763.667 363.667 761 369 761 cv
cp
.341176 1 1 rgb
f
369 761 mo
391 761 li
396.333 761 399 763.667 399 769 cv
399 791 li
399 796.333 396.333 799 391 799 cv
369 799 li
363.667 799 361 796.333 361 791 cv
361 769 li
361 763.667 363.667 761 369 761 cv
cp
0 0 0 rgb
@
409 761 mo
431 761 li
436.333 761 439 763.667 439 769 cv
439 791 li
439 796.333 436.333 799 431 799 cv
409 799 li
403.667 799 401 796.333 401 791 cv
401 769 li
401 763.667 403.667 761 409 761 cv
cp
0 .423529 .647059 rgb
f
409 761 mo
431 761 li
436.333 761 439 763.667 439 769 cv
439 791 li
439 796.333 436.333 799 431 799 cv
409 799 li
403.667 799 401 796.333 401 791 cv
401 769 li
401 763.667 403.667 761 409 761 cv
cp
0 0 0 rgb
@
449 761 mo
471 761 li
476.333 761 479 763.667 479 769 cv
479 791 li
479 796.333 476.333 799 471 799 cv
449 799 li
443.667 799 441 796.333 441 791 cv
441 769 li
441 763.667 443.667 761 449 761 cv
cp
.239216 .945098 1 rgb
f
449 761 mo
471 761 li
476.333 761 479 763.667 479 769 cv
479 791 li
479 796.333 476.333 799 471 799 cv
449 799 li
443.667 799 441 796.333 441 791 cv
441 769 li
441 763.667 443.667 761 449 761 cv
cp
0 0 0 rgb
@
489 761 mo
511 761 li
516.333 761 519 763.667 519 769 cv
519 791 li
519 796.333 516.333 799 511 799 cv
489 799 li
483.667 799 481 796.333 481 791 cv
481 769 li
481 763.667 483.667 761 489 761 cv
cp
.101961 .819608 .945098 rgb
f
489 761 mo
511 761 li
516.333 761 519 763.667 519 769 cv
519 791 li
519 796.333 516.333 799 511 799 cv
489 799 li
483.667 799 481 796.333 481 791 cv
481 769 li
481 763.667 483.667 761 489 761 cv
cp
0 0 0 rgb
@
529 761 mo
551 761 li
556.333 761 559 763.667 559 769 cv
559 791 li
559 796.333 556.333 799 551 799 cv
529 799 li
523.667 799 521 796.333 521 791 cv
521 769 li
521 763.667 523.667 761 529 761 cv
cp
.172549 .819608 1 rgb
f
529 761 mo
551 761 li
556.333 761 559 763.667 559 769 cv
559 791 li
559 796.333 556.333 799 551 799 cv
529 799 li
523.667 799 521 796.333 521 791 cv
521 769 li
521 763.667 523.667 761 529 761 cv
cp
0 0 0 rgb
@
569 761 mo
591 761 li
596.333 761 599 763.667 599 769 cv
599 791 li
599 796.333 596.333 799 591 799 cv
569 799 li
563.667 799 561 796.333 561 791 cv
561 769 li
561 763.667 563.667 761 569 761 cv
cp
.392157 1 1 rgb
f
569 761 mo
591 761 li
596.333 761 599 763.667 599 769 cv
599 791 li
599 796.333 596.333 799 591 799 cv
569 799 li
563.667 799 561 796.333 561 791 cv
561 769 li
561 763.667 563.667 761 569 761 cv
cp
0 0 0 rgb
@
609 761 mo
631 761 li
636.333 761 639 763.667 639 769 cv
639 791 li
639 796.333 636.333 799 631 799 cv
609 799 li
603.667 799 601 796.333 601 791 cv
601 769 li
601 763.667 603.667 761 609 761 cv
cp
0 .635294 .74902 rgb
f
609 761 mo
631 761 li
636.333 761 639 763.667 639 769 cv
639 791 li
639 796.333 636.333 799 631 799 cv
609 799 li
603.667 799 601 796.333 601 791 cv
601 769 li
601 763.667 603.667 761 609 761 cv
cp
0 0 0 rgb
@
649 761 mo
671 761 li
676.333 761 679 763.667 679 769 cv
679 791 li
679 796.333 676.333 799 671 799 cv
649 799 li
643.667 799 641 796.333 641 791 cv
641 769 li
641 763.667 643.667 761 649 761 cv
cp
0 .309804 .580392 rgb
f
649 761 mo
671 761 li
676.333 761 679 763.667 679 769 cv
679 791 li
679 796.333 676.333 799 671 799 cv
649 799 li
643.667 799 641 796.333 641 791 cv
641 769 li
641 763.667 643.667 761 649 761 cv
cp
0 0 0 rgb
@
689 761 mo
711 761 li
716.333 761 719 763.667 719 769 cv
719 791 li
719 796.333 716.333 799 711 799 cv
689 799 li
683.667 799 681 796.333 681 791 cv
681 769 li
681 763.667 683.667 761 689 761 cv
cp
.129412 .717647 .913725 rgb
f
689 761 mo
711 761 li
716.333 761 719 763.667 719 769 cv
719 791 li
719 796.333 716.333 799 711 799 cv
689 799 li
683.667 799 681 796.333 681 791 cv
681 769 li
681 763.667 683.667 761 689 761 cv
cp
0 0 0 rgb
@
729 761 mo
751 761 li
756.333 761 759 763.667 759 769 cv
759 791 li
759 796.333 756.333 799 751 799 cv
729 799 li
723.667 799 721 796.333 721 791 cv
721 769 li
721 763.667 723.667 761 729 761 cv
cp
0 .572549 .917647 rgb
f
729 761 mo
751 761 li
756.333 761 759 763.667 759 769 cv
759 791 li
759 796.333 756.333 799 751 799 cv
729 799 li
723.667 799 721 796.333 721 791 cv
721 769 li
721 763.667 723.667 761 729 761 cv
cp
0 0 0 rgb
@
769 761 mo
791 761 li
796.333 761 799 763.667 799 769 cv
799 791 li
799 796.333 796.333 799 791 799 cv
769 799 li
763.667 799 761 796.333 761 791 cv
761 769 li
761 763.667 763.667 761 769 761 cv
cp
0 .470588 .596078 rgb
f
769 761 mo
791 761 li
796.333 761 799 763.667 799 769 cv
799 791 li
799 796.333 796.333 799 791 799 cv
769 799 li
763.667 799 761 796.333 761 791 cv
761 769 li
761 763.667 763.667 761 769 761 cv
cp
0 0 0 rgb
@
809 761 mo
831 761 li
836.333 761 839 763.667 839 769 cv
839 791 li
839 796.333 836.333 799 831 799 cv
809 799 li
803.667 799 801 796.333 801 791 cv
801 769 li
801 763.667 803.667 761 809 761 cv
cp
0 .396078 .576471 rgb
f
809 761 mo
831 761 li
836.333 761 839 763.667 839 769 cv
839 791 li
839 796.333 836.333 799 831 799 cv
809 799 li
803.667 799 801 796.333 801 791 cv
801 769 li
801 763.667 803.667 761 809 761 cv
cp
0 0 0 rgb
@
849 761 mo
871 761 li
876.333 761 879 763.667 879 769 cv
879 791 li
879 796.333 876.333 799 871 799 cv
849 799 li
843.667 799 841 796.333 841 791 cv
841 769 li
841 763.667 843.667 761 849 761 cv
cp
.219608 .945098 1 rgb
f
849 761 mo
871 761 li
876.333 761 879 763.667 879 769 cv
879 791 li
879 796.333 876.333 799 871 799 cv
849 799 li
843.667 799 841 796.333 841 791 cv
841 769 li
841 763.667 843.667 761 849 761 cv
cp
0 0 0 rgb
@
889 761 mo
911 761 li
916.333 761 919 763.667 919 769 cv
919 791 li
919 796.333 916.333 799 911 799 cv
889 799 li
883.667 799 881 796.333 881 791 cv
881 769 li
881 763.667 883.667 761 889 761 cv
cp
.0392157 .827451 .956863 rgb
f
889 761 mo
911 761 li
916.333 761 919 763.667 919 769 cv
919 791 li
919 796.333 916.333 799 911 799 cv
889 799 li
883.667 799 881 796.333 881 791 cv
881 769 li
881 763.667 883.667 761 889 761 cv
cp
0 0 0 rgb
@
929 761 mo
951 761 li
956.333 761 959 763.667 959 769 cv
959 791 li
959 796.333 956.333 799 951 799 cv
929 799 li
923.667 799 921 796.333 921 791 cv
921 769 li
921 763.667 923.667 761 929 761 cv
cp
0 .462745 .709804 rgb
f
929 761 mo
951 761 li
956.333 761 959 763.667 959 769 cv
959 791 li
959 796.333 956.333 799 951 799 cv
929 799 li
923.667 799 921 796.333 921 791 cv
921 769 li
921 763.667 923.667 761 929 761 cv
cp
0 0 0 rgb
@
969 761 mo
991 761 li
996.333 761 999 763.667 999 769 cv
999 791 li
999 796.333 996.333 799 991 799 cv
969 799 li
963.667 799 961 796.333 961 791 cv
961 769 li
961 763.667 963.667 761 969 761 cv
cp
.243137 .913725 1 rgb
f
969 761 mo
991 761 li
996.333 761 999 763.667 999 769 cv
999 791 li
999 796.333 996.333 799 991 799 cv
969 799 li
963.667 799 961 796.333 961 791 cv
961 769 li
961 763.667 963.667 761 969 761 cv
cp
0 0 0 rgb
@
9 801 mo
31 801 li
36.3335 801 39 803.667 39 809 cv
39 831 li
39 836.333 36.3335 839 31 839 cv
9 839 li
3.6665 839 1 836.333 1 831 cv
1 809 li
1 803.667 3.6665 801 9 801 cv
cp
0 .427451 .686275 rgb
f
9 801 mo
31 801 li
36.3335 801 39 803.667 39 809 cv
39 831 li
39 836.333 36.3335 839 31 839 cv
9 839 li
3.6665 839 1 836.333 1 831 cv
1 809 li
1 803.667 3.6665 801 9 801 cv
cp
0 0 0 rgb
@
49 801 mo
71 801 li
76.3335 801 79 803.667 79 809 cv
79 831 li
79 836.333 76.3335 839 71 839 cv
49 839 li
43.6665 839 41 836.333 41 831 cv
41 809 li
41 803.667 43.6665 801 49 801 cv
cp
.00784314 .611765 .988235 rgb
f
49 801 mo
71 801 li
76.3335 801 79 803.667 79 809 cv
79 831 li
79 836.333 76.3335 839 71 839 cv
49 839 li
43.6665 839 41 836.333 41 831 cv
41 809 li
41 803.667 43.6665 801 49 801 cv
cp
0 0 0 rgb
@
89 801 mo
111 801 li
116.333 801 119 803.667 119 809 cv
119 831 li
119 836.333 116.333 839 111 839 cv
89 839 li
83.6665 839 81 836.333 81 831 cv
81 809 li
81 803.667 83.6665 801 89 801 cv
cp
.0588235 .611765 .909804 rgb
f
89 801 mo
111 801 li
116.333 801 119 803.667 119 809 cv
119 831 li
119 836.333 116.333 839 111 839 cv
89 839 li
83.6665 839 81 836.333 81 831 cv
81 809 li
81 803.667 83.6665 801 89 801 cv
cp
0 0 0 rgb
@
129 801 mo
151 801 li
156.333 801 159 803.667 159 809 cv
159 831 li
159 836.333 156.333 839 151 839 cv
129 839 li
123.667 839 121 836.333 121 831 cv
121 809 li
121 803.667 123.667 801 129 801 cv
cp
.00392157 .588235 .729412 rgb
f
129 801 mo
151 801 li
156.333 801 159 803.667 159 809 cv
159 831 li
159 836.333 156.333 839 151 839 cv
129 839 li
123.667 839 121 836.333 121 831 cv
121 809 li
121 803.667 123.667 801 129 801 cv
cp
0 0 0 rgb
@
169 801 mo
191 801 li
196.333 801 199 803.667 199 809 cv
199 831 li
199 836.333 196.333 839 191 839 cv
169 839 li
163.667 839 161 836.333 161 831 cv
161 809 li
161 803.667 163.667 801 169 801 cv
cp
.25098 .964706 1 rgb
f
169 801 mo
191 801 li
196.333 801 199 803.667 199 809 cv
199 831 li
199 836.333 196.333 839 191 839 cv
169 839 li
163.667 839 161 836.333 161 831 cv
161 809 li
161 803.667 163.667 801 169 801 cv
cp
0 0 0 rgb
@
209 801 mo
231 801 li
236.333 801 239 803.667 239 809 cv
239 831 li
239 836.333 236.333 839 231 839 cv
209 839 li
203.667 839 201 836.333 201 831 cv
201 809 li
201 803.667 203.667 801 209 801 cv
cp
0 .447059 .65098 rgb
f
209 801 mo
231 801 li
236.333 801 239 803.667 239 809 cv
239 831 li
239 836.333 236.333 839 231 839 cv
209 839 li
203.667 839 201 836.333 201 831 cv
201 809 li
201 803.667 203.667 801 209 801 cv
cp
0 0 0 rgb
@
249 801 mo
271 801 li
276.333 801 279 803.667 279 809 cv
279 831 li
279 836.333 276.333 839 271 839 cv
249 839 li
243.667 839 241 836.333 241 831 cv
241 809 li
241 803.667 243.667 801 249 801 cv
cp
.427451 1 1 rgb
f
249 801 mo
271 801 li
276.333 801 279 803.667 279 809 cv
279 831 li
279 836.333 276.333 839 271 839 cv
249 839 li
243.667 839 241 836.333 241 831 cv
241 809 li
241 803.667 243.667 801 249 801 cv
cp
0 0 0 rgb
@
289 801 mo
311 801 li
316.333 801 319 803.667 319 809 cv
319 831 li
319 836.333 316.333 839 311 839 cv
289 839 li
283.667 839 281 836.333 281 831 cv
281 809 li
281 803.667 283.667 801 289 801 cv
cp
.168627 .686275 .890196 rgb
f
289 801 mo
311 801 li
316.333 801 319 803.667 319 809 cv
319 831 li
319 836.333 316.333 839 311 839 cv
289 839 li
283.667 839 281 836.333 281 831 cv
281 809 li
281 803.667 283.667 801 289 801 cv
cp
0 0 0 rgb
@
329 801 mo
351 801 li
356.333 801 359 803.667 359 809 cv
359 831 li
359 836.333 356.333 839 351 839 cv
329 839 li
323.667 839 321 836.333 321 831 cv
321 809 li
321 803.667 323.667 801 329 801 cv
cp
.188235 .752941 .988235 rgb
f
329 801 mo
351 801 li
356.333 801 359 803.667 359 809 cv
359 831 li
359 836.333 356.333 839 351 839 cv
329 839 li
323.667 839 321 836.333 321 831 cv
321 809 li
321 803.667 323.667 801 329 801 cv
cp
0 0 0 rgb
@
369 801 mo
391 801 li
396.333 801 399 803.667 399 809 cv
399 831 li
399 836.333 396.333 839 391 839 cv
369 839 li
363.667 839 361 836.333 361 831 cv
361 809 li
361 803.667 363.667 801 369 801 cv
cp
.0627451 .713726 .854902 rgb
f
369 801 mo
391 801 li
396.333 801 399 803.667 399 809 cv
399 831 li
399 836.333 396.333 839 391 839 cv
369 839 li
363.667 839 361 836.333 361 831 cv
361 809 li
361 803.667 363.667 801 369 801 cv
cp
0 0 0 rgb
@
409 801 mo
431 801 li
436.333 801 439 803.667 439 809 cv
439 831 li
439 836.333 436.333 839 431 839 cv
409 839 li
403.667 839 401 836.333 401 831 cv
401 809 li
401 803.667 403.667 801 409 801 cv
cp
.203922 .815686 1 rgb
f
409 801 mo
431 801 li
436.333 801 439 803.667 439 809 cv
439 831 li
439 836.333 436.333 839 431 839 cv
409 839 li
403.667 839 401 836.333 401 831 cv
401 809 li
401 803.667 403.667 801 409 801 cv
cp
0 0 0 rgb
@
449 801 mo
471 801 li
476.333 801 479 803.667 479 809 cv
479 831 li
479 836.333 476.333 839 471 839 cv
449 839 li
443.667 839 441 836.333 441 831 cv
441 809 li
441 803.667 443.667 801 449 801 cv
cp
.0156863 .666667 .862745 rgb
f
449 801 mo
471 801 li
476.333 801 479 803.667 479 809 cv
479 831 li
479 836.333 476.333 839 471 839 cv
449 839 li
443.667 839 441 836.333 441 831 cv
441 809 li
441 803.667 443.667 801 449 801 cv
cp
0 0 0 rgb
@
489 801 mo
511 801 li
516.333 801 519 803.667 519 809 cv
519 831 li
519 836.333 516.333 839 511 839 cv
489 839 li
483.667 839 481 836.333 481 831 cv
481 809 li
481 803.667 483.667 801 489 801 cv
cp
.254902 .870588 1 rgb
f
489 801 mo
511 801 li
516.333 801 519 803.667 519 809 cv
519 831 li
519 836.333 516.333 839 511 839 cv
489 839 li
483.667 839 481 836.333 481 831 cv
481 809 li
481 803.667 483.667 801 489 801 cv
cp
0 0 0 rgb
@
529 801 mo
551 801 li
556.333 801 559 803.667 559 809 cv
559 831 li
559 836.333 556.333 839 551 839 cv
529 839 li
523.667 839 521 836.333 521 831 cv
521 809 li
521 803.667 523.667 801 529 801 cv
cp
0 .678431 .866667 rgb
f
529 801 mo
551 801 li
556.333 801 559 803.667 559 809 cv
559 831 li
559 836.333 556.333 839 551 839 cv
529 839 li
523.667 839 521 836.333 521 831 cv
521 809 li
521 803.667 523.667 801 529 801 cv
cp
0 0 0 rgb
@
569 801 mo
591 801 li
596.333 801 599 803.667 599 809 cv
599 831 li
599 836.333 596.333 839 591 839 cv
569 839 li
563.667 839 561 836.333 561 831 cv
561 809 li
561 803.667 563.667 801 569 801 cv
cp
.113725 .694118 .937255 rgb
f
569 801 mo
591 801 li
596.333 801 599 803.667 599 809 cv
599 831 li
599 836.333 596.333 839 591 839 cv
569 839 li
563.667 839 561 836.333 561 831 cv
561 809 li
561 803.667 563.667 801 569 801 cv
cp
0 0 0 rgb
@
609 801 mo
631 801 li
636.333 801 639 803.667 639 809 cv
639 831 li
639 836.333 636.333 839 631 839 cv
609 839 li
603.667 839 601 836.333 601 831 cv
601 809 li
601 803.667 603.667 801 609 801 cv
cp
0 .345098 .647059 rgb
f
609 801 mo
631 801 li
636.333 801 639 803.667 639 809 cv
639 831 li
639 836.333 636.333 839 631 839 cv
609 839 li
603.667 839 601 836.333 601 831 cv
601 809 li
601 803.667 603.667 801 609 801 cv
cp
0 0 0 rgb
@
649 801 mo
671 801 li
676.333 801 679 803.667 679 809 cv
679 831 li
679 836.333 676.333 839 671 839 cv
649 839 li
643.667 839 641 836.333 641 831 cv
641 809 li
641 803.667 643.667 801 649 801 cv
cp
.45098 .964706 1 rgb
f
649 801 mo
671 801 li
676.333 801 679 803.667 679 809 cv
679 831 li
679 836.333 676.333 839 671 839 cv
649 839 li
643.667 839 641 836.333 641 831 cv
641 809 li
641 803.667 643.667 801 649 801 cv
cp
0 0 0 rgb
@
689 801 mo
711 801 li
716.333 801 719 803.667 719 809 cv
719 831 li
719 836.333 716.333 839 711 839 cv
689 839 li
683.667 839 681 836.333 681 831 cv
681 809 li
681 803.667 683.667 801 689 801 cv
cp
0 .52549 .698039 rgb
f
689 801 mo
711 801 li
716.333 801 719 803.667 719 809 cv
719 831 li
719 836.333 716.333 839 711 839 cv
689 839 li
683.667 839 681 836.333 681 831 cv
681 809 li
681 803.667 683.667 801 689 801 cv
cp
0 0 0 rgb
@
729 801 mo
751 801 li
756.333 801 759 803.667 759 809 cv
759 831 li
759 836.333 756.333 839 751 839 cv
729 839 li
723.667 839 721 836.333 721 831 cv
721 809 li
721 803.667 723.667 801 729 801 cv
cp
.14902 .901961 1 rgb
f
729 801 mo
751 801 li
756.333 801 759 803.667 759 809 cv
759 831 li
759 836.333 756.333 839 751 839 cv
729 839 li
723.667 839 721 836.333 721 831 cv
721 809 li
721 803.667 723.667 801 729 801 cv
cp
0 0 0 rgb
@
769 801 mo
791 801 li
796.333 801 799 803.667 799 809 cv
799 831 li
799 836.333 796.333 839 791 839 cv
769 839 li
763.667 839 761 836.333 761 831 cv
761 809 li
761 803.667 763.667 801 769 801 cv
cp
0 .631373 .968627 rgb
f
769 801 mo
791 801 li
796.333 801 799 803.667 799 809 cv
799 831 li
799 836.333 796.333 839 791 839 cv
769 839 li
763.667 839 761 836.333 761 831 cv
761 809 li
761 803.667 763.667 801 769 801 cv
cp
0 0 0 rgb
@
809 801 mo
831 801 li
836.333 801 839 803.667 839 809 cv
839 831 li
839 836.333 836.333 839 831 839 cv
809 839 li
803.667 839 801 836.333 801 831 cv
801 809 li
801 803.667 803.667 801 809 801 cv
cp
.054902 .662745 .803922 rgb
f
809 801 mo
831 801 li
836.333 801 839 803.667 839 809 cv
839 831 li
839 836.333 836.333 839 831 839 cv
809 839 li
803.667 839 801 836.333 801 831 cv
801 809 li
801 803.667 803.667 801 809 801 cv
cp
0 0 0 rgb
@
849 801 mo
871 801 li
876.333 801 879 803.667 879 809 cv
879 831 li
879 836.333 876.333 839 871 839 cv
849 839 li
843.667 839 841 836.333 841 831 cv
841 809 li
841 803.667 843.667 801 849 801 cv
cp
.266667 .796078 1 rgb
f
849 801 mo
871 801 li
876.333 801 879 803.667 879 809 cv
879 831 li
879 836.333 876.333 839 871 839 cv
849 839 li
843.667 839 841 836.333 841 831 cv
841 809 li
841 803.667 843.667 801 849 801 cv
cp
0 0 0 rgb
@
889 801 mo
911 801 li
916.333 801 919 803.667 919 809 cv
919 831 li
919 836.333 916.333 839 911 839 cv
889 839 li
883.667 839 881 836.333 881 831 cv
881 809 li
881 803.667 883.667 801 889 801 cv
cp
0 .364706 .647059 rgb
f
889 801 mo
911 801 li
916.333 801 919 803.667 919 809 cv
919 831 li
919 836.333 916.333 839 911 839 cv
889 839 li
883.667 839 881 836.333 881 831 cv
881 809 li
881 803.667 883.667 801 889 801 cv
cp
0 0 0 rgb
@
929 801 mo
951 801 li
956.333 801 959 803.667 959 809 cv
959 831 li
959 836.333 956.333 839 951 839 cv
929 839 li
923.667 839 921 836.333 921 831 cv
921 809 li
921 803.667 923.667 801 929 801 cv
cp
.141176 .792157 .92549 rgb
f
929 801 mo
951 801 li
956.333 801 959 803.667 959 809 cv
959 831 li
959 836.333 956.333 839 951 839 cv
929 839 li
923.667 839 921 836.333 921 831 cv
921 809 li
921 803.667 923.667 801 929 801 cv
cp
0 0 0 rgb
@
969 801 mo
991 801 li
996.333 801 999 803.667 999 809 cv
999 831 li
999 836.333 996.333 839 991 839 cv
969 839 li
963.667 839 961 836.333 961 831 cv
961 809 li
961 803.667 963.667 801 969 801 cv
cp
0 .513726 .611765 rgb
f
969 801 mo
991 801 li
996.333 801 999 803.667 999 809 cv
999 831 li
999 836.333 996.333 839 991 839 cv
969 839 li
963.667 839 961 836.333 961 831 cv
961 809 li
961 803.667 963.667 801 969 801 cv
cp
0 0 0 rgb
@
9 841 mo
31 841 li
36.3335 841 39 843.667 39 849 cv
39 871 li
39 876.333 36.3335 879 31 879 cv
9 879 li
3.6665 879 1 876.333 1 871 cv
1 849 li
1 843.667 3.6665 841 9 841 cv
cp
.298039 .94902 1 rgb
f
9 841 mo
31 841 li
36.3335 841 39 843.667 39 849 cv
39 871 li
39 876.333 36.3335 879 31 879 cv
9 879 li
3.6665 879 1 876.333 1 871 cv
1 849 li
1 843.667 3.6665 841 9 841 cv
cp
0 0 0 rgb
@
49 841 mo
71 841 li
76.3335 841 79 843.667 79 849 cv
79 871 li
79 876.333 76.3335 879 71 879 cv
49 879 li
43.6665 879 41 876.333 41 871 cv
41 849 li
41 843.667 43.6665 841 49 841 cv
cp
.0705882 .701961 .996078 rgb
f
49 841 mo
71 841 li
76.3335 841 79 843.667 79 849 cv
79 871 li
79 876.333 76.3335 879 71 879 cv
49 879 li
43.6665 879 41 876.333 41 871 cv
41 849 li
41 843.667 43.6665 841 49 841 cv
cp
0 0 0 rgb
@
89 841 mo
111 841 li
116.333 841 119 843.667 119 849 cv
119 871 li
119 876.333 116.333 879 111 879 cv
89 879 li
83.6665 879 81 876.333 81 871 cv
81 849 li
81 843.667 83.6665 841 89 841 cv
cp
0 .662745 .87451 rgb
f
89 841 mo
111 841 li
116.333 841 119 843.667 119 849 cv
119 871 li
119 876.333 116.333 879 111 879 cv
89 879 li
83.6665 879 81 876.333 81 871 cv
81 849 li
81 843.667 83.6665 841 89 841 cv
cp
0 0 0 rgb
@
129 841 mo
151 841 li
156.333 841 159 843.667 159 849 cv
159 871 li
159 876.333 156.333 879 151 879 cv
129 879 li
123.667 879 121 876.333 121 871 cv
121 849 li
121 843.667 123.667 841 129 841 cv
cp
0 .341176 .678431 rgb
f
129 841 mo
151 841 li
156.333 841 159 843.667 159 849 cv
159 871 li
159 876.333 156.333 879 151 879 cv
129 879 li
123.667 879 121 876.333 121 871 cv
121 849 li
121 843.667 123.667 841 129 841 cv
cp
0 0 0 rgb
@
169 841 mo
191 841 li
196.333 841 199 843.667 199 849 cv
199 871 li
199 876.333 196.333 879 191 879 cv
169 879 li
163.667 879 161 876.333 161 871 cv
161 849 li
161 843.667 163.667 841 169 841 cv
cp
.360784 .976471 1 rgb
f
169 841 mo
191 841 li
196.333 841 199 843.667 199 849 cv
199 871 li
199 876.333 196.333 879 191 879 cv
169 879 li
163.667 879 161 876.333 161 871 cv
161 849 li
161 843.667 163.667 841 169 841 cv
cp
0 0 0 rgb
@
209 841 mo
231 841 li
236.333 841 239 843.667 239 849 cv
239 871 li
239 876.333 236.333 879 231 879 cv
209 879 li
203.667 879 201 876.333 201 871 cv
201 849 li
201 843.667 203.667 841 209 841 cv
cp
0 .647059 .882353 rgb
f
209 841 mo
231 841 li
236.333 841 239 843.667 239 849 cv
239 871 li
239 876.333 236.333 879 231 879 cv
209 879 li
203.667 879 201 876.333 201 871 cv
201 849 li
201 843.667 203.667 841 209 841 cv
cp
0 0 0 rgb
@
249 841 mo
271 841 li
276.333 841 279 843.667 279 849 cv
279 871 li
279 876.333 276.333 879 271 879 cv
249 879 li
243.667 879 241 876.333 241 871 cv
241 849 li
241 843.667 243.667 841 249 841 cv
cp
.368627 .952941 1 rgb
f
249 841 mo
271 841 li
276.333 841 279 843.667 279 849 cv
279 871 li
279 876.333 276.333 879 271 879 cv
249 879 li
243.667 879 241 876.333 241 871 cv
241 849 li
241 843.667 243.667 841 249 841 cv
cp
0 0 0 rgb
@
289 841 mo
311 841 li
316.333 841 319 843.667 319 849 cv
319 871 li
319 876.333 316.333 879 311 879 cv
289 879 li
283.667 879 281 876.333 281 871 cv
281 849 li
281 843.667 283.667 841 289 841 cv
cp
0 .498039 .662745 rgb
f
289 841 mo
311 841 li
316.333 841 319 843.667 319 849 cv
319 871 li
319 876.333 316.333 879 311 879 cv
289 879 li
283.667 879 281 876.333 281 871 cv
281 849 li
281 843.667 283.667 841 289 841 cv
cp
0 0 0 rgb
@
329 841 mo
351 841 li
356.333 841 359 843.667 359 849 cv
359 871 li
359 876.333 356.333 879 351 879 cv
329 879 li
323.667 879 321 876.333 321 871 cv
321 849 li
321 843.667 323.667 841 329 841 cv
cp
.105882 .713726 .858824 rgb
f
329 841 mo
351 841 li
356.333 841 359 843.667 359 849 cv
359 871 li
359 876.333 356.333 879 351 879 cv
329 879 li
323.667 879 321 876.333 321 871 cv
321 849 li
321 843.667 323.667 841 329 841 cv
cp
0 0 0 rgb
@
369 841 mo
391 841 li
396.333 841 399 843.667 399 849 cv
399 871 li
399 876.333 396.333 879 391 879 cv
369 879 li
363.667 879 361 876.333 361 871 cv
361 849 li
361 843.667 363.667 841 369 841 cv
cp
0 .568627 .862745 rgb
f
369 841 mo
391 841 li
396.333 841 399 843.667 399 849 cv
399 871 li
399 876.333 396.333 879 391 879 cv
369 879 li
363.667 879 361 876.333 361 871 cv
361 849 li
361 843.667 363.667 841 369 841 cv
cp
0 0 0 rgb
@
409 841 mo
431 841 li
436.333 841 439 843.667 439 849 cv
439 871 li
439 876.333 436.333 879 431 879 cv
409 879 li
403.667 879 401 876.333 401 871 cv
401 849 li
401 843.667 403.667 841 409 841 cv
cp
0 .4 .756863 rgb
f
409 841 mo
431 841 li
436.333 841 439 843.667 439 849 cv
439 871 li
439 876.333 436.333 879 431 879 cv
409 879 li
403.667 879 401 876.333 401 871 cv
401 849 li
401 843.667 403.667 841 409 841 cv
cp
0 0 0 rgb
@
449 841 mo
471 841 li
476.333 841 479 843.667 479 849 cv
479 871 li
479 876.333 476.333 879 471 879 cv
449 879 li
443.667 879 441 876.333 441 871 cv
441 849 li
441 843.667 443.667 841 449 841 cv
cp
.137255 .811765 1 rgb
f
449 841 mo
471 841 li
476.333 841 479 843.667 479 849 cv
479 871 li
479 876.333 476.333 879 471 879 cv
449 879 li
443.667 879 441 876.333 441 871 cv
441 849 li
441 843.667 443.667 841 449 841 cv
cp
0 0 0 rgb
@
489 841 mo
511 841 li
516.333 841 519 843.667 519 849 cv
519 871 li
519 876.333 516.333 879 511 879 cv
489 879 li
483.667 879 481 876.333 481 871 cv
481 849 li
481 843.667 483.667 841 489 841 cv
cp
.254902 .870588 1 rgb
f
489 841 mo
511 841 li
516.333 841 519 843.667 519 849 cv
519 871 li
519 876.333 516.333 879 511 879 cv
489 879 li
483.667 879 481 876.333 481 871 cv
481 849 li
481 843.667 483.667 841 489 841 cv
cp
0 0 0 rgb
@
529 841 mo
551 841 li
556.333 841 559 843.667 559 849 cv
559 871 li
559 876.333 556.333 879 551 879 cv
529 879 li
523.667 879 521 876.333 521 871 cv
521 849 li
521 843.667 523.667 841 529 841 cv
cp
.113725 .819608 1 rgb
f
529 841 mo
551 841 li
556.333 841 559 843.667 559 849 cv
559 871 li
559 876.333 556.333 879 551 879 cv
529 879 li
523.667 879 521 876.333 521 871 cv
521 849 li
521 843.667 523.667 841 529 841 cv
cp
0 0 0 rgb
@
569 841 mo
591 841 li
596.333 841 599 843.667 599 849 cv
599 871 li
599 876.333 596.333 879 591 879 cv
569 879 li
563.667 879 561 876.333 561 871 cv
561 849 li
561 843.667 563.667 841 569 841 cv
cp
0 .45098 .690196 rgb
f
569 841 mo
591 841 li
596.333 841 599 843.667 599 849 cv
599 871 li
599 876.333 596.333 879 591 879 cv
569 879 li
563.667 879 561 876.333 561 871 cv
561 849 li
561 843.667 563.667 841 569 841 cv
cp
0 0 0 rgb
@
609 841 mo
631 841 li
636.333 841 639 843.667 639 849 cv
639 871 li
639 876.333 636.333 879 631 879 cv
609 879 li
603.667 879 601 876.333 601 871 cv
601 849 li
601 843.667 603.667 841 609 841 cv
cp
0 .54902 .686275 rgb
f
609 841 mo
631 841 li
636.333 841 639 843.667 639 849 cv
639 871 li
639 876.333 636.333 879 631 879 cv
609 879 li
603.667 879 601 876.333 601 871 cv
601 849 li
601 843.667 603.667 841 609 841 cv
cp
0 0 0 rgb
@
649 841 mo
671 841 li
676.333 841 679 843.667 679 849 cv
679 871 li
679 876.333 676.333 879 671 879 cv
649 879 li
643.667 879 641 876.333 641 871 cv
641 849 li
641 843.667 643.667 841 649 841 cv
cp
.439216 .913725 1 rgb
f
649 841 mo
671 841 li
676.333 841 679 843.667 679 849 cv
679 871 li
679 876.333 676.333 879 671 879 cv
649 879 li
643.667 879 641 876.333 641 871 cv
641 849 li
641 843.667 643.667 841 649 841 cv
cp
0 0 0 rgb
@
689 841 mo
711 841 li
716.333 841 719 843.667 719 849 cv
719 871 li
719 876.333 716.333 879 711 879 cv
689 879 li
683.667 879 681 876.333 681 871 cv
681 849 li
681 843.667 683.667 841 689 841 cv
cp
0 .321569 .521569 rgb
f
689 841 mo
711 841 li
716.333 841 719 843.667 719 849 cv
719 871 li
719 876.333 716.333 879 711 879 cv
689 879 li
683.667 879 681 876.333 681 871 cv
681 849 li
681 843.667 683.667 841 689 841 cv
cp
0 0 0 rgb
@
729 841 mo
751 841 li
756.333 841 759 843.667 759 849 cv
759 871 li
759 876.333 756.333 879 751 879 cv
729 879 li
723.667 879 721 876.333 721 871 cv
721 849 li
721 843.667 723.667 841 729 841 cv
cp
.360784 .929412 1 rgb
f
729 841 mo
751 841 li
756.333 841 759 843.667 759 849 cv
759 871 li
759 876.333 756.333 879 751 879 cv
729 879 li
723.667 879 721 876.333 721 871 cv
721 849 li
721 843.667 723.667 841 729 841 cv
cp
0 0 0 rgb
@
769 841 mo
791 841 li
796.333 841 799 843.667 799 849 cv
799 871 li
799 876.333 796.333 879 791 879 cv
769 879 li
763.667 879 761 876.333 761 871 cv
761 849 li
761 843.667 763.667 841 769 841 cv
cp
0 .262745 .556863 rgb
f
769 841 mo
791 841 li
796.333 841 799 843.667 799 849 cv
799 871 li
799 876.333 796.333 879 791 879 cv
769 879 li
763.667 879 761 876.333 761 871 cv
761 849 li
761 843.667 763.667 841 769 841 cv
cp
0 0 0 rgb
@
809 841 mo
831 841 li
836.333 841 839 843.667 839 849 cv
839 871 li
839 876.333 836.333 879 831 879 cv
809 879 li
803.667 879 801 876.333 801 871 cv
801 849 li
801 843.667 803.667 841 809 841 cv
cp
.121569 .827451 1 rgb
f
809 841 mo
831 841 li
836.333 841 839 843.667 839 849 cv
839 871 li
839 876.333 836.333 879 831 879 cv
809 879 li
803.667 879 801 876.333 801 871 cv
801 849 li
801 843.667 803.667 841 809 841 cv
cp
0 0 0 rgb
@
849 841 mo
871 841 li
876.333 841 879 843.667 879 849 cv
879 871 li
879 876.333 876.333 879 871 879 cv
849 879 li
843.667 879 841 876.333 841 871 cv
841 849 li
841 843.667 843.667 841 849 841 cv
cp
.247059 .878431 1 rgb
f
849 841 mo
871 841 li
876.333 841 879 843.667 879 849 cv
879 871 li
879 876.333 876.333 879 871 879 cv
849 879 li
843.667 879 841 876.333 841 871 cv
841 849 li
841 843.667 843.667 841 849 841 cv
cp
0 0 0 rgb
@
889 841 mo
911 841 li
916.333 841 919 843.667 919 849 cv
919 871 li
919 876.333 916.333 879 911 879 cv
889 879 li
883.667 879 881 876.333 881 871 cv
881 849 li
881 843.667 883.667 841 889 841 cv
cp
0 .560784 .717647 rgb
f
889 841 mo
911 841 li
916.333 841 919 843.667 919 849 cv
919 871 li
919 876.333 916.333 879 911 879 cv
889 879 li
883.667 879 881 876.333 881 871 cv
881 849 li
881 843.667 883.667 841 889 841 cv
cp
0 0 0 rgb
@
929 841 mo
951 841 li
956.333 841 959 843.667 959 849 cv
959 871 li
959 876.333 956.333 879 951 879 cv
929 879 li
923.667 879 921 876.333 921 871 cv
921 849 li
921 843.667 923.667 841 929 841 cv
cp
0 .305882 .509804 rgb
f
929 841 mo
951 841 li
956.333 841 959 843.667 959 849 cv
959 871 li
959 876.333 956.333 879 951 879 cv
929 879 li
923.667 879 921 876.333 921 871 cv
921 849 li
921 843.667 923.667 841 929 841 cv
cp
0 0 0 rgb
@
969 841 mo
991 841 li
996.333 841 999 843.667 999 849 cv
999 871 li
999 876.333 996.333 879 991 879 cv
969 879 li
963.667 879 961 876.333 961 871 cv
961 849 li
961 843.667 963.667 841 969 841 cv
cp
0 .447059 .745098 rgb
f
969 841 mo
991 841 li
996.333 841 999 843.667 999 849 cv
999 871 li
999 876.333 996.333 879 991 879 cv
969 879 li
963.667 879 961 876.333 961 871 cv
961 849 li
961 843.667 963.667 841 969 841 cv
cp
0 0 0 rgb
@
9 881 mo
31 881 li
36.3335 881 39 883.667 39 889 cv
39 911 li
39 916.333 36.3335 919 31 919 cv
9 919 li
3.6665 919 1 916.333 1 911 cv
1 889 li
1 883.667 3.6665 881 9 881 cv
cp
.0588235 .862745 1 rgb
f
9 881 mo
31 881 li
36.3335 881 39 883.667 39 889 cv
39 911 li
39 916.333 36.3335 919 31 919 cv
9 919 li
3.6665 919 1 916.333 1 911 cv
1 889 li
1 883.667 3.6665 881 9 881 cv
cp
0 0 0 rgb
@
49 881 mo
71 881 li
76.3335 881 79 883.667 79 889 cv
79 911 li
79 916.333 76.3335 919 71 919 cv
49 919 li
43.6665 919 41 916.333 41 911 cv
41 889 li
41 883.667 43.6665 881 49 881 cv
cp
0 .619608 .815686 rgb
f
49 881 mo
71 881 li
76.3335 881 79 883.667 79 889 cv
79 911 li
79 916.333 76.3335 919 71 919 cv
49 919 li
43.6665 919 41 916.333 41 911 cv
41 889 li
41 883.667 43.6665 881 49 881 cv
cp
0 0 0 rgb
@
89 881 mo
111 881 li
116.333 881 119 883.667 119 889 cv
119 911 li
119 916.333 116.333 919 111 919 cv
89 919 li
83.6665 919 81 916.333 81 911 cv
81 889 li
81 883.667 83.6665 881 89 881 cv
cp
0 .505882 .729412 rgb
f
89 881 mo
111 881 li
116.333 881 119 883.667 119 889 cv
119 911 li
119 916.333 116.333 919 111 919 cv
89 919 li
83.6665 919 81 916.333 81 911 cv
81 889 li
81 883.667 83.6665 881 89 881 cv
cp
0 0 0 rgb
@
129 881 mo
151 881 li
156.333 881 159 883.667 159 889 cv
159 911 li
159 916.333 156.333 919 151 919 cv
129 919 li
123.667 919 121 916.333 121 911 cv
121 889 li
121 883.667 123.667 881 129 881 cv
cp
0 .670588 .882353 rgb
f
129 881 mo
151 881 li
156.333 881 159 883.667 159 889 cv
159 911 li
159 916.333 156.333 919 151 919 cv
129 919 li
123.667 919 121 916.333 121 911 cv
121 889 li
121 883.667 123.667 881 129 881 cv
cp
0 0 0 rgb
@
169 881 mo
191 881 li
196.333 881 199 883.667 199 889 cv
199 911 li
199 916.333 196.333 919 191 919 cv
169 919 li
163.667 919 161 916.333 161 911 cv
161 889 li
161 883.667 163.667 881 169 881 cv
cp
.176471 .819608 1 rgb
f
169 881 mo
191 881 li
196.333 881 199 883.667 199 889 cv
199 911 li
199 916.333 196.333 919 191 919 cv
169 919 li
163.667 919 161 916.333 161 911 cv
161 889 li
161 883.667 163.667 881 169 881 cv
cp
0 0 0 rgb
@
209 881 mo
231 881 li
236.333 881 239 883.667 239 889 cv
239 911 li
239 916.333 236.333 919 231 919 cv
209 919 li
203.667 919 201 916.333 201 911 cv
201 889 li
201 883.667 203.667 881 209 881 cv
cp
0 .556863 .72549 rgb
f
209 881 mo
231 881 li
236.333 881 239 883.667 239 889 cv
239 911 li
239 916.333 236.333 919 231 919 cv
209 919 li
203.667 919 201 916.333 201 911 cv
201 889 li
201 883.667 203.667 881 209 881 cv
cp
0 0 0 rgb
@
249 881 mo
271 881 li
276.333 881 279 883.667 279 889 cv
279 911 li
279 916.333 276.333 919 271 919 cv
249 919 li
243.667 919 241 916.333 241 911 cv
241 889 li
241 883.667 243.667 881 249 881 cv
cp
.176471 .858824 1 rgb
f
249 881 mo
271 881 li
276.333 881 279 883.667 279 889 cv
279 911 li
279 916.333 276.333 919 271 919 cv
249 919 li
243.667 919 241 916.333 241 911 cv
241 889 li
241 883.667 243.667 881 249 881 cv
cp
0 0 0 rgb
@
289 881 mo
311 881 li
316.333 881 319 883.667 319 889 cv
319 911 li
319 916.333 316.333 919 311 919 cv
289 919 li
283.667 919 281 916.333 281 911 cv
281 889 li
281 883.667 283.667 881 289 881 cv
cp
0 .6 .839216 rgb
f
289 881 mo
311 881 li
316.333 881 319 883.667 319 889 cv
319 911 li
319 916.333 316.333 919 311 919 cv
289 919 li
283.667 919 281 916.333 281 911 cv
281 889 li
281 883.667 283.667 881 289 881 cv
cp
0 0 0 rgb
@
329 881 mo
351 881 li
356.333 881 359 883.667 359 889 cv
359 911 li
359 916.333 356.333 919 351 919 cv
329 919 li
323.667 919 321 916.333 321 911 cv
321 889 li
321 883.667 323.667 881 329 881 cv
cp
0 .388235 .498039 rgb
f
329 881 mo
351 881 li
356.333 881 359 883.667 359 889 cv
359 911 li
359 916.333 356.333 919 351 919 cv
329 919 li
323.667 919 321 916.333 321 911 cv
321 889 li
321 883.667 323.667 881 329 881 cv
cp
0 0 0 rgb
@
369 881 mo
391 881 li
396.333 881 399 883.667 399 889 cv
399 911 li
399 916.333 396.333 919 391 919 cv
369 919 li
363.667 919 361 916.333 361 911 cv
361 889 li
361 883.667 363.667 881 369 881 cv
cp
.309804 .921569 1 rgb
f
369 881 mo
391 881 li
396.333 881 399 883.667 399 889 cv
399 911 li
399 916.333 396.333 919 391 919 cv
369 919 li
363.667 919 361 916.333 361 911 cv
361 889 li
361 883.667 363.667 881 369 881 cv
cp
0 0 0 rgb
@
409 881 mo
431 881 li
436.333 881 439 883.667 439 889 cv
439 911 li
439 916.333 436.333 919 431 919 cv
409 919 li
403.667 919 401 916.333 401 911 cv
401 889 li
401 883.667 403.667 881 409 881 cv
cp
0 .639216 .882353 rgb
f
409 881 mo
431 881 li
436.333 881 439 883.667 439 889 cv
439 911 li
439 916.333 436.333 919 431 919 cv
409 919 li
403.667 919 401 916.333 401 911 cv
401 889 li
401 883.667 403.667 881 409 881 cv
cp
0 0 0 rgb
@
449 881 mo
471 881 li
476.333 881 479 883.667 479 889 cv
479 911 li
479 916.333 476.333 919 471 919 cv
449 919 li
443.667 919 441 916.333 441 911 cv
441 889 li
441 883.667 443.667 881 449 881 cv
cp
0 .403922 .603922 rgb
f
449 881 mo
471 881 li
476.333 881 479 883.667 479 889 cv
479 911 li
479 916.333 476.333 919 471 919 cv
449 919 li
443.667 919 441 916.333 441 911 cv
441 889 li
441 883.667 443.667 881 449 881 cv
cp
0 0 0 rgb
@
489 881 mo
511 881 li
516.333 881 519 883.667 519 889 cv
519 911 li
519 916.333 516.333 919 511 919 cv
489 919 li
483.667 919 481 916.333 481 911 cv
481 889 li
481 883.667 483.667 881 489 881 cv
cp
.0862745 .827451 1 rgb
f
489 881 mo
511 881 li
516.333 881 519 883.667 519 889 cv
519 911 li
519 916.333 516.333 919 511 919 cv
489 919 li
483.667 919 481 916.333 481 911 cv
481 889 li
481 883.667 483.667 881 489 881 cv
cp
0 0 0 rgb
@
529 881 mo
551 881 li
556.333 881 559 883.667 559 889 cv
559 911 li
559 916.333 556.333 919 551 919 cv
529 919 li
523.667 919 521 916.333 521 911 cv
521 889 li
521 883.667 523.667 881 529 881 cv
cp
0 .439216 .529412 rgb
f
529 881 mo
551 881 li
556.333 881 559 883.667 559 889 cv
559 911 li
559 916.333 556.333 919 551 919 cv
529 919 li
523.667 919 521 916.333 521 911 cv
521 889 li
521 883.667 523.667 881 529 881 cv
cp
0 0 0 rgb
@
569 881 mo
591 881 li
596.333 881 599 883.667 599 889 cv
599 911 li
599 916.333 596.333 919 591 919 cv
569 919 li
563.667 919 561 916.333 561 911 cv
561 889 li
561 883.667 563.667 881 569 881 cv
cp
0 .568627 .811765 rgb
f
569 881 mo
591 881 li
596.333 881 599 883.667 599 889 cv
599 911 li
599 916.333 596.333 919 591 919 cv
569 919 li
563.667 919 561 916.333 561 911 cv
561 889 li
561 883.667 563.667 881 569 881 cv
cp
0 0 0 rgb
@
609 881 mo
631 881 li
636.333 881 639 883.667 639 889 cv
639 911 li
639 916.333 636.333 919 631 919 cv
609 919 li
603.667 919 601 916.333 601 911 cv
601 889 li
601 883.667 603.667 881 609 881 cv
cp
.027451 .635294 .905882 rgb
f
609 881 mo
631 881 li
636.333 881 639 883.667 639 889 cv
639 911 li
639 916.333 636.333 919 631 919 cv
609 919 li
603.667 919 601 916.333 601 911 cv
601 889 li
601 883.667 603.667 881 609 881 cv
cp
0 0 0 rgb
@
649 881 mo
671 881 li
676.333 881 679 883.667 679 889 cv
679 911 li
679 916.333 676.333 919 671 919 cv
649 919 li
643.667 919 641 916.333 641 911 cv
641 889 li
641 883.667 643.667 881 649 881 cv
cp
0 .52549 .807843 rgb
f
649 881 mo
671 881 li
676.333 881 679 883.667 679 889 cv
679 911 li
679 916.333 676.333 919 671 919 cv
649 919 li
643.667 919 641 916.333 641 911 cv
641 889 li
641 883.667 643.667 881 649 881 cv
cp
0 0 0 rgb
@
689 881 mo
711 881 li
716.333 881 719 883.667 719 889 cv
719 911 li
719 916.333 716.333 919 711 919 cv
689 919 li
683.667 919 681 916.333 681 911 cv
681 889 li
681 883.667 683.667 881 689 881 cv
cp
0 .388235 .603922 rgb
f
689 881 mo
711 881 li
716.333 881 719 883.667 719 889 cv
719 911 li
719 916.333 716.333 919 711 919 cv
689 919 li
683.667 919 681 916.333 681 911 cv
681 889 li
681 883.667 683.667 881 689 881 cv
cp
0 0 0 rgb
@
729 881 mo
751 881 li
756.333 881 759 883.667 759 889 cv
759 911 li
759 916.333 756.333 919 751 919 cv
729 919 li
723.667 919 721 916.333 721 911 cv
721 889 li
721 883.667 723.667 881 729 881 cv
cp
.0196078 .65098 .827451 rgb
f
729 881 mo
751 881 li
756.333 881 759 883.667 759 889 cv
759 911 li
759 916.333 756.333 919 751 919 cv
729 919 li
723.667 919 721 916.333 721 911 cv
721 889 li
721 883.667 723.667 881 729 881 cv
cp
0 0 0 rgb
@
769 881 mo
791 881 li
796.333 881 799 883.667 799 889 cv
799 911 li
799 916.333 796.333 919 791 919 cv
769 919 li
763.667 919 761 916.333 761 911 cv
761 889 li
761 883.667 763.667 881 769 881 cv
cp
.12549 .745098 1 rgb
f
769 881 mo
791 881 li
796.333 881 799 883.667 799 889 cv
799 911 li
799 916.333 796.333 919 791 919 cv
769 919 li
763.667 919 761 916.333 761 911 cv
761 889 li
761 883.667 763.667 881 769 881 cv
cp
0 0 0 rgb
@
809 881 mo
831 881 li
836.333 881 839 883.667 839 889 cv
839 911 li
839 916.333 836.333 919 831 919 cv
809 919 li
803.667 919 801 916.333 801 911 cv
801 889 li
801 883.667 803.667 881 809 881 cv
cp
0 .54902 .819608 rgb
f
809 881 mo
831 881 li
836.333 881 839 883.667 839 889 cv
839 911 li
839 916.333 836.333 919 831 919 cv
809 919 li
803.667 919 801 916.333 801 911 cv
801 889 li
801 883.667 803.667 881 809 881 cv
cp
0 0 0 rgb
@
849 881 mo
871 881 li
876.333 881 879 883.667 879 889 cv
879 911 li
879 916.333 876.333 919 871 919 cv
849 919 li
843.667 919 841 916.333 841 911 cv
841 889 li
841 883.667 843.667 881 849 881 cv
cp
.239216 .937255 1 rgb
f
849 881 mo
871 881 li
876.333 881 879 883.667 879 889 cv
879 911 li
879 916.333 876.333 919 871 919 cv
849 919 li
843.667 919 841 916.333 841 911 cv
841 889 li
841 883.667 843.667 881 849 881 cv
cp
0 0 0 rgb
@
889 881 mo
911 881 li
916.333 881 919 883.667 919 889 cv
919 911 li
919 916.333 916.333 919 911 919 cv
889 919 li
883.667 919 881 916.333 881 911 cv
881 889 li
881 883.667 883.667 881 889 881 cv
cp
.231373 .890196 1 rgb
f
889 881 mo
911 881 li
916.333 881 919 883.667 919 889 cv
919 911 li
919 916.333 916.333 919 911 919 cv
889 919 li
883.667 919 881 916.333 881 911 cv
881 889 li
881 883.667 883.667 881 889 881 cv
cp
0 0 0 rgb
@
929 881 mo
951 881 li
956.333 881 959 883.667 959 889 cv
959 911 li
959 916.333 956.333 919 951 919 cv
929 919 li
923.667 919 921 916.333 921 911 cv
921 889 li
921 883.667 923.667 881 929 881 cv
cp
0 .560784 .772549 rgb
f
929 881 mo
951 881 li
956.333 881 959 883.667 959 889 cv
959 911 li
959 916.333 956.333 919 951 919 cv
929 919 li
923.667 919 921 916.333 921 911 cv
921 889 li
921 883.667 923.667 881 929 881 cv
cp
0 0 0 rgb
@
969 881 mo
991 881 li
996.333 881 999 883.667 999 889 cv
999 911 li
999 916.333 996.333 919 991 919 cv
969 919 li
963.667 919 961 916.333 961 911 cv
961 889 li
961 883.667 963.667 881 969 881 cv
cp
.0235294 .729412 .921569 rgb
f
969 881 mo
991 881 li
996.333 881 999 883.667 999 889 cv
999 911 li
999 916.333 996.333 919 991 919 cv
969 919 li
963.667 919 961 916.333 961 911 cv
961 889 li
961 883.667 963.667 881 969 881 cv
cp
0 0 0 rgb
@
9 921 mo
31 921 li
36.3335 921 39 923.667 39 929 cv
39 951 li
39 956.333 36.3335 959 31 959 cv
9 959 li
3.6665 959 1 956.333 1 951 cv
1 929 li
1 923.667 3.6665 921 9 921 cv
cp
0 .466667 .733333 rgb
f
9 921 mo
31 921 li
36.3335 921 39 923.667 39 929 cv
39 951 li
39 956.333 36.3335 959 31 959 cv
9 959 li
3.6665 959 1 956.333 1 951 cv
1 929 li
1 923.667 3.6665 921 9 921 cv
cp
0 0 0 rgb
@
49 921 mo
71 921 li
76.3335 921 79 923.667 79 929 cv
79 951 li
79 956.333 76.3335 959 71 959 cv
49 959 li
43.6665 959 41 956.333 41 951 cv
41 929 li
41 923.667 43.6665 921 49 921 cv
cp
0 .556863 .752941 rgb
f
49 921 mo
71 921 li
76.3335 921 79 923.667 79 929 cv
79 951 li
79 956.333 76.3335 959 71 959 cv
49 959 li
43.6665 959 41 956.333 41 951 cv
41 929 li
41 923.667 43.6665 921 49 921 cv
cp
0 0 0 rgb
@
89 921 mo
111 921 li
116.333 921 119 923.667 119 929 cv
119 951 li
119 956.333 116.333 959 111 959 cv
89 959 li
83.6665 959 81 956.333 81 951 cv
81 929 li
81 923.667 83.6665 921 89 921 cv
cp
.443137 .976471 1 rgb
f
89 921 mo
111 921 li
116.333 921 119 923.667 119 929 cv
119 951 li
119 956.333 116.333 959 111 959 cv
89 959 li
83.6665 959 81 956.333 81 951 cv
81 929 li
81 923.667 83.6665 921 89 921 cv
cp
0 0 0 rgb
@
129 921 mo
151 921 li
156.333 921 159 923.667 159 929 cv
159 951 li
159 956.333 156.333 959 151 959 cv
129 959 li
123.667 959 121 956.333 121 951 cv
121 929 li
121 923.667 123.667 921 129 921 cv
cp
.384314 1 1 rgb
f
129 921 mo
151 921 li
156.333 921 159 923.667 159 929 cv
159 951 li
159 956.333 156.333 959 151 959 cv
129 959 li
123.667 959 121 956.333 121 951 cv
121 929 li
121 923.667 123.667 921 129 921 cv
cp
0 0 0 rgb
@
169 921 mo
191 921 li
196.333 921 199 923.667 199 929 cv
199 951 li
199 956.333 196.333 959 191 959 cv
169 959 li
163.667 959 161 956.333 161 951 cv
161 929 li
161 923.667 163.667 921 169 921 cv
cp
0 .6 .792157 rgb
f
169 921 mo
191 921 li
196.333 921 199 923.667 199 929 cv
199 951 li
199 956.333 196.333 959 191 959 cv
169 959 li
163.667 959 161 956.333 161 951 cv
161 929 li
161 923.667 163.667 921 169 921 cv
cp
0 0 0 rgb
@
209 921 mo
231 921 li
236.333 921 239 923.667 239 929 cv
239 951 li
239 956.333 236.333 959 231 959 cv
209 959 li
203.667 959 201 956.333 201 951 cv
201 929 li
201 923.667 203.667 921 209 921 cv
cp
0 .376471 .658824 rgb
f
209 921 mo
231 921 li
236.333 921 239 923.667 239 929 cv
239 951 li
239 956.333 236.333 959 231 959 cv
209 959 li
203.667 959 201 956.333 201 951 cv
201 929 li
201 923.667 203.667 921 209 921 cv
cp
0 0 0 rgb
@
249 921 mo
271 921 li
276.333 921 279 923.667 279 929 cv
279 951 li
279 956.333 276.333 959 271 959 cv
249 959 li
243.667 959 241 956.333 241 951 cv
241 929 li
241 923.667 243.667 921 249 921 cv
cp
0 .54902 .792157 rgb
f
249 921 mo
271 921 li
276.333 921 279 923.667 279 929 cv
279 951 li
279 956.333 276.333 959 271 959 cv
249 959 li
243.667 959 241 956.333 241 951 cv
241 929 li
241 923.667 243.667 921 249 921 cv
cp
0 0 0 rgb
@
289 921 mo
311 921 li
316.333 921 319 923.667 319 929 cv
319 951 li
319 956.333 316.333 959 311 959 cv
289 959 li
283.667 959 281 956.333 281 951 cv
281 929 li
281 923.667 283.667 921 289 921 cv
cp
.145098 .639216 1 rgb
f
289 921 mo
311 921 li
316.333 921 319 923.667 319 929 cv
319 951 li
319 956.333 316.333 959 311 959 cv
289 959 li
283.667 959 281 956.333 281 951 cv
281 929 li
281 923.667 283.667 921 289 921 cv
cp
0 0 0 rgb
@
329 921 mo
351 921 li
356.333 921 359 923.667 359 929 cv
359 951 li
359 956.333 356.333 959 351 959 cv
329 959 li
323.667 959 321 956.333 321 951 cv
321 929 li
321 923.667 323.667 921 329 921 cv
cp
0 .431373 .662745 rgb
f
329 921 mo
351 921 li
356.333 921 359 923.667 359 929 cv
359 951 li
359 956.333 356.333 959 351 959 cv
329 959 li
323.667 959 321 956.333 321 951 cv
321 929 li
321 923.667 323.667 921 329 921 cv
cp
0 0 0 rgb
@
369 921 mo
391 921 li
396.333 921 399 923.667 399 929 cv
399 951 li
399 956.333 396.333 959 391 959 cv
369 959 li
363.667 959 361 956.333 361 951 cv
361 929 li
361 923.667 363.667 921 369 921 cv
cp
0 .34902 .65098 rgb
f
369 921 mo
391 921 li
396.333 921 399 923.667 399 929 cv
399 951 li
399 956.333 396.333 959 391 959 cv
369 959 li
363.667 959 361 956.333 361 951 cv
361 929 li
361 923.667 363.667 921 369 921 cv
cp
0 0 0 rgb
@
409 921 mo
431 921 li
436.333 921 439 923.667 439 929 cv
439 951 li
439 956.333 436.333 959 431 959 cv
409 959 li
403.667 959 401 956.333 401 951 cv
401 929 li
401 923.667 403.667 921 409 921 cv
cp
0 .545098 .705882 rgb
f
409 921 mo
431 921 li
436.333 921 439 923.667 439 929 cv
439 951 li
439 956.333 436.333 959 431 959 cv
409 959 li
403.667 959 401 956.333 401 951 cv
401 929 li
401 923.667 403.667 921 409 921 cv
cp
0 0 0 rgb
@
449 921 mo
471 921 li
476.333 921 479 923.667 479 929 cv
479 951 li
479 956.333 476.333 959 471 959 cv
449 959 li
443.667 959 441 956.333 441 951 cv
441 929 li
441 923.667 443.667 921 449 921 cv
cp
.0392157 .552941 .819608 rgb
f
449 921 mo
471 921 li
476.333 921 479 923.667 479 929 cv
479 951 li
479 956.333 476.333 959 471 959 cv
449 959 li
443.667 959 441 956.333 441 951 cv
441 929 li
441 923.667 443.667 921 449 921 cv
cp
0 0 0 rgb
@
489 921 mo
511 921 li
516.333 921 519 923.667 519 929 cv
519 951 li
519 956.333 516.333 959 511 959 cv
489 959 li
483.667 959 481 956.333 481 951 cv
481 929 li
481 923.667 483.667 921 489 921 cv
cp
.388235 .870588 1 rgb
f
489 921 mo
511 921 li
516.333 921 519 923.667 519 929 cv
519 951 li
519 956.333 516.333 959 511 959 cv
489 959 li
483.667 959 481 956.333 481 951 cv
481 929 li
481 923.667 483.667 921 489 921 cv
cp
0 0 0 rgb
@
529 921 mo
551 921 li
556.333 921 559 923.667 559 929 cv
559 951 li
559 956.333 556.333 959 551 959 cv
529 959 li
523.667 959 521 956.333 521 951 cv
521 929 li
521 923.667 523.667 921 529 921 cv
cp
0 .47451 .733333 rgb
f
529 921 mo
551 921 li
556.333 921 559 923.667 559 929 cv
559 951 li
559 956.333 556.333 959 551 959 cv
529 959 li
523.667 959 521 956.333 521 951 cv
521 929 li
521 923.667 523.667 921 529 921 cv
cp
0 0 0 rgb
@
569 921 mo
591 921 li
596.333 921 599 923.667 599 929 cv
599 951 li
599 956.333 596.333 959 591 959 cv
569 959 li
563.667 959 561 956.333 561 951 cv
561 929 li
561 923.667 563.667 921 569 921 cv
cp
.317647 .972549 1 rgb
f
569 921 mo
591 921 li
596.333 921 599 923.667 599 929 cv
599 951 li
599 956.333 596.333 959 591 959 cv
569 959 li
563.667 959 561 956.333 561 951 cv
561 929 li
561 923.667 563.667 921 569 921 cv
cp
0 0 0 rgb
@
609 921 mo
631 921 li
636.333 921 639 923.667 639 929 cv
639 951 li
639 956.333 636.333 959 631 959 cv
609 959 li
603.667 959 601 956.333 601 951 cv
601 929 li
601 923.667 603.667 921 609 921 cv
cp
.0666667 .619608 .894118 rgb
f
609 921 mo
631 921 li
636.333 921 639 923.667 639 929 cv
639 951 li
639 956.333 636.333 959 631 959 cv
609 959 li
603.667 959 601 956.333 601 951 cv
601 929 li
601 923.667 603.667 921 609 921 cv
cp
0 0 0 rgb
@
649 921 mo
671 921 li
676.333 921 679 923.667 679 929 cv
679 951 li
679 956.333 676.333 959 671 959 cv
649 959 li
643.667 959 641 956.333 641 951 cv
641 929 li
641 923.667 643.667 921 649 921 cv
cp
0 .462745 .745098 rgb
f
649 921 mo
671 921 li
676.333 921 679 923.667 679 929 cv
679 951 li
679 956.333 676.333 959 671 959 cv
649 959 li
643.667 959 641 956.333 641 951 cv
641 929 li
641 923.667 643.667 921 649 921 cv
cp
0 0 0 rgb
@
689 921 mo
711 921 li
716.333 921 719 923.667 719 929 cv
719 951 li
719 956.333 716.333 959 711 959 cv
689 959 li
683.667 959 681 956.333 681 951 cv
681 929 li
681 923.667 683.667 921 689 921 cv
cp
.152941 .933333 1 rgb
f
689 921 mo
711 921 li
716.333 921 719 923.667 719 929 cv
719 951 li
719 956.333 716.333 959 711 959 cv
689 959 li
683.667 959 681 956.333 681 951 cv
681 929 li
681 923.667 683.667 921 689 921 cv
cp
0 0 0 rgb
@
729 921 mo
751 921 li
756.333 921 759 923.667 759 929 cv
759 951 li
759 956.333 756.333 959 751 959 cv
729 959 li
723.667 959 721 956.333 721 951 cv
721 929 li
721 923.667 723.667 921 729 921 cv
cp
0 .552941 .87451 rgb
f
729 921 mo
751 921 li
756.333 921 759 923.667 759 929 cv
759 951 li
759 956.333 756.333 959 751 959 cv
729 959 li
723.667 959 721 956.333 721 951 cv
721 929 li
721 923.667 723.667 921 729 921 cv
cp
0 0 0 rgb
@
769 921 mo
791 921 li
796.333 921 799 923.667 799 929 cv
799 951 li
799 956.333 796.333 959 791 959 cv
769 959 li
763.667 959 761 956.333 761 951 cv
761 929 li
761 923.667 763.667 921 769 921 cv
cp
.223529 .835294 1 rgb
f
769 921 mo
791 921 li
796.333 921 799 923.667 799 929 cv
799 951 li
799 956.333 796.333 959 791 959 cv
769 959 li
763.667 959 761 956.333 761 951 cv
761 929 li
761 923.667 763.667 921 769 921 cv
cp
0 0 0 rgb
@
809 921 mo
831 921 li
836.333 921 839 923.667 839 929 cv
839 951 li
839 956.333 836.333 959 831 959 cv
809 959 li
803.667 959 801 956.333 801 951 cv
801 929 li
801 923.667 803.667 921 809 921 cv
cp
0 .482353 .780392 rgb
f
809 921 mo
831 921 li
836.333 921 839 923.667 839 929 cv
839 951 li
839 956.333 836.333 959 831 959 cv
809 959 li
803.667 959 801 956.333 801 951 cv
801 929 li
801 923.667 803.667 921 809 921 cv
cp
0 0 0 rgb
@
849 921 mo
871 921 li
876.333 921 879 923.667 879 929 cv
879 951 li
879 956.333 876.333 959 871 959 cv
849 959 li
843.667 959 841 956.333 841 951 cv
841 929 li
841 923.667 843.667 921 849 921 cv
cp
0 .635294 .780392 rgb
f
849 921 mo
871 921 li
876.333 921 879 923.667 879 929 cv
879 951 li
879 956.333 876.333 959 871 959 cv
849 959 li
843.667 959 841 956.333 841 951 cv
841 929 li
841 923.667 843.667 921 849 921 cv
cp
0 0 0 rgb
@
889 921 mo
911 921 li
916.333 921 919 923.667 919 929 cv
919 951 li
919 956.333 916.333 959 911 959 cv
889 959 li
883.667 959 881 956.333 881 951 cv
881 929 li
881 923.667 883.667 921 889 921 cv
cp
0 .737255 .952941 rgb
f
889 921 mo
911 921 li
916.333 921 919 923.667 919 929 cv
919 951 li
919 956.333 916.333 959 911 959 cv
889 959 li
883.667 959 881 956.333 881 951 cv
881 929 li
881 923.667 883.667 921 889 921 cv
cp
0 0 0 rgb
@
929 921 mo
951 921 li
956.333 921 959 923.667 959 929 cv
959 951 li
959 956.333 956.333 959 951 959 cv
929 959 li
923.667 959 921 956.333 921 951 cv
921 929 li
921 923.667 923.667 921 929 921 cv
cp
0 .482353 .756863 rgb
f
929 921 mo
951 921 li
956.333 921 959 923.667 959 929 cv
959 951 li
959 956.333 956.333 959 951 959 cv
929 959 li
923.667 959 921 956.333 921 951 cv
921 929 li
921 923.667 923.667 921 929 921 cv
cp
0 0 0 rgb
@
969 921 mo
991 921 li
996.333 921 999 923.667 999 929 cv
999 951 li
999 956.333 996.333 959 991 959 cv
969 959 li
963.667 959 961 956.333 961 951 cv
961 929 li
961 923.667 963.667 921 969 921 cv
cp
.419608 .92549 1 rgb
f
969 921 mo
991 921 li
996.333 921 999 923.667 999 929 cv
999 951 li
999 956.333 996.333 959 991 959 cv
969 959 li
963.667 959 961 956.333 961 951 cv
961 929 li
961 923.667 963.667 921 969 921 cv
cp
0 0 0 rgb
@
9 961 mo
31 961 li
36.3335 961 39 963.667 39 969 cv
39 991 li
39 996.333 36.3335 999 31 999 cv
9 999 li
3.6665 999 1 996.333 1 991 cv
1 969 li
1 963.667 3.6665 961 9 961 cv
cp
0 .498039 .752941 rgb
f
9 961 mo
31 961 li
36.3335 961 39 963.667 39 969 cv
39 991 li
39 996.333 36.3335 999 31 999 cv
9 999 li
3.6665 999 1 996.333 1 991 cv
1 969 li
1 963.667 3.6665 961 9 961 cv
cp
0 0 0 rgb
@
49 961 mo
71 961 li
76.3335 961 79 963.667 79 969 cv
79 991 li
79 996.333 76.3335 999 71 999 cv
49 999 li
43.6665 999 41 996.333 41 991 cv
41 969 li
41 963.667 43.6665 961 49 961 cv
cp
0 .623529 .843137 rgb
f
49 961 mo
71 961 li
76.3335 961 79 963.667 79 969 cv
79 991 li
79 996.333 76.3335 999 71 999 cv
49 999 li
43.6665 999 41 996.333 41 991 cv
41 969 li
41 963.667 43.6665 961 49 961 cv
cp
0 0 0 rgb
@
89 961 mo
111 961 li
116.333 961 119 963.667 119 969 cv
119 991 li
119 996.333 116.333 999 111 999 cv
89 999 li
83.6665 999 81 996.333 81 991 cv
81 969 li
81 963.667 83.6665 961 89 961 cv
cp
0 .278431 .541176 rgb
f
89 961 mo
111 961 li
116.333 961 119 963.667 119 969 cv
119 991 li
119 996.333 116.333 999 111 999 cv
89 999 li
83.6665 999 81 996.333 81 991 cv
81 969 li
81 963.667 83.6665 961 89 961 cv
cp
0 0 0 rgb
@
129 961 mo
151 961 li
156.333 961 159 963.667 159 969 cv
159 991 li
159 996.333 156.333 999 151 999 cv
129 999 li
123.667 999 121 996.333 121 991 cv
121 969 li
121 963.667 123.667 961 129 961 cv
cp
0 .701961 .835294 rgb
f
129 961 mo
151 961 li
156.333 961 159 963.667 159 969 cv
159 991 li
159 996.333 156.333 999 151 999 cv
129 999 li
123.667 999 121 996.333 121 991 cv
121 969 li
121 963.667 123.667 961 129 961 cv
cp
0 0 0 rgb
@
169 961 mo
191 961 li
196.333 961 199 963.667 199 969 cv
199 991 li
199 996.333 196.333 999 191 999 cv
169 999 li
163.667 999 161 996.333 161 991 cv
161 969 li
161 963.667 163.667 961 169 961 cv
cp
0 .509804 .807843 rgb
f
169 961 mo
191 961 li
196.333 961 199 963.667 199 969 cv
199 991 li
199 996.333 196.333 999 191 999 cv
169 999 li
163.667 999 161 996.333 161 991 cv
161 969 li
161 963.667 163.667 961 169 961 cv
cp
0 0 0 rgb
@
209 961 mo
231 961 li
236.333 961 239 963.667 239 969 cv
239 991 li
239 996.333 236.333 999 231 999 cv
209 999 li
203.667 999 201 996.333 201 991 cv
201 969 li
201 963.667 203.667 961 209 961 cv
cp
.278431 .937255 1 rgb
f
209 961 mo
231 961 li
236.333 961 239 963.667 239 969 cv
239 991 li
239 996.333 236.333 999 231 999 cv
209 999 li
203.667 999 201 996.333 201 991 cv
201 969 li
201 963.667 203.667 961 209 961 cv
cp
0 0 0 rgb
@
249 961 mo
271 961 li
276.333 961 279 963.667 279 969 cv
279 991 li
279 996.333 276.333 999 271 999 cv
249 999 li
243.667 999 241 996.333 241 991 cv
241 969 li
241 963.667 243.667 961 249 961 cv
cp
.384314 .956863 1 rgb
f
249 961 mo
271 961 li
276.333 961 279 963.667 279 969 cv
279 991 li
279 996.333 276.333 999 271 999 cv
249 999 li
243.667 999 241 996.333 241 991 cv
241 969 li
241 963.667 243.667 961 249 961 cv
cp
0 0 0 rgb
@
289 961 mo
311 961 li
316.333 961 319 963.667 319 969 cv
319 991 li
319 996.333 316.333 999 311 999 cv
289 999 li
283.667 999 281 996.333 281 991 cv
281 969 li
281 963.667 283.667 961 289 961 cv
cp
.160784 .729412 1 rgb
f
289 961 mo
311 961 li
316.333 961 319 963.667 319 969 cv
319 991 li
319 996.333 316.333 999 311 999 cv
289 999 li
283.667 999 281 996.333 281 991 cv
281 969 li
281 963.667 283.667 961 289 961 cv
cp
0 0 0 rgb
@
329 961 mo
351 961 li
356.333 961 359 963.667 359 969 cv
359 991 li
359 996.333 356.333 999 351 999 cv
329 999 li
323.667 999 321 996.333 321 991 cv
321 969 li
321 963.667 323.667 961 329 961 cv
cp
.184314 .854902 .952941 rgb
f
329 961 mo
351 961 li
356.333 961 359 963.667 359 969 cv
359 991 li
359 996.333 356.333 999 351 999 cv
329 999 li
323.667 999 321 996.333 321 991 cv
321 969 li
321 963.667 323.667 961 329 961 cv
cp
0 0 0 rgb
@
369 961 mo
391 961 li
396.333 961 399 963.667 399 969 cv
399 991 li
399 996.333 396.333 999 391 999 cv
369 999 li
363.667 999 361 996.333 361 991 cv
361 969 li
361 963.667 363.667 961 369 961 cv
cp
0 .403922 .788235 rgb
f
369 961 mo
391 961 li
396.333 961 399 963.667 399 969 cv
399 991 li
399 996.333 396.333 999 391 999 cv
369 999 li
363.667 999 361 996.333 361 991 cv
361 969 li
361 963.667 363.667 961 369 961 cv
cp
0 0 0 rgb
@
409 961 mo
431 961 li
436.333 961 439 963.667 439 969 cv
439 991 li
439 996.333 436.333 999 431 999 cv
409 999 li
403.667 999 401 996.333 401 991 cv
401 969 li
401 963.667 403.667 961 409 961 cv
cp
0 .337255 .552941 rgb
f
409 961 mo
431 961 li
436.333 961 439 963.667 439 969 cv
439 991 li
439 996.333 436.333 999 431 999 cv
409 999 li
403.667 999 401 996.333 401 991 cv
401 969 li
401 963.667 403.667 961 409 961 cv
cp
0 0 0 rgb
@
449 961 mo
471 961 li
476.333 961 479 963.667 479 969 cv
479 991 li
479 996.333 476.333 999 471 999 cv
449 999 li
443.667 999 441 996.333 441 991 cv
441 969 li
441 963.667 443.667 961 449 961 cv
cp
.0862745 .635294 .866667 rgb
f
449 961 mo
471 961 li
476.333 961 479 963.667 479 969 cv
479 991 li
479 996.333 476.333 999 471 999 cv
449 999 li
443.667 999 441 996.333 441 991 cv
441 969 li
441 963.667 443.667 961 449 961 cv
cp
0 0 0 rgb
@
489 961 mo
511 961 li
516.333 961 519 963.667 519 969 cv
519 991 li
519 996.333 516.333 999 511 999 cv
489 999 li
483.667 999 481 996.333 481 991 cv
481 969 li
481 963.667 483.667 961 489 961 cv
cp
0 .447059 .635294 rgb
f
489 961 mo
511 961 li
516.333 961 519 963.667 519 969 cv
519 991 li
519 996.333 516.333 999 511 999 cv
489 999 li
483.667 999 481 996.333 481 991 cv
481 969 li
481 963.667 483.667 961 489 961 cv
cp
0 0 0 rgb
@
529 961 mo
551 961 li
556.333 961 559 963.667 559 969 cv
559 991 li
559 996.333 556.333 999 551 999 cv
529 999 li
523.667 999 521 996.333 521 991 cv
521 969 li
521 963.667 523.667 961 529 961 cv
cp
0 .47451 .666667 rgb
f
529 961 mo
551 961 li
556.333 961 559 963.667 559 969 cv
559 991 li
559 996.333 556.333 999 551 999 cv
529 999 li
523.667 999 521 996.333 521 991 cv
521 969 li
521 963.667 523.667 961 529 961 cv
cp
0 0 0 rgb
@
569 961 mo
591 961 li
596.333 961 599 963.667 599 969 cv
599 991 li
599 996.333 596.333 999 591 999 cv
569 999 li
563.667 999 561 996.333 561 991 cv
561 969 li
561 963.667 563.667 961 569 961 cv
cp
.054902 .596078 .956863 rgb
f
569 961 mo
591 961 li
596.333 961 599 963.667 599 969 cv
599 991 li
599 996.333 596.333 999 591 999 cv
569 999 li
563.667 999 561 996.333 561 991 cv
561 969 li
561 963.667 563.667 961 569 961 cv
cp
0 0 0 rgb
@
609 961 mo
631 961 li
636.333 961 639 963.667 639 969 cv
639 991 li
639 996.333 636.333 999 631 999 cv
609 999 li
603.667 999 601 996.333 601 991 cv
601 969 li
601 963.667 603.667 961 609 961 cv
cp
0 .423529 .690196 rgb
f
609 961 mo
631 961 li
636.333 961 639 963.667 639 969 cv
639 991 li
639 996.333 636.333 999 631 999 cv
609 999 li
603.667 999 601 996.333 601 991 cv
601 969 li
601 963.667 603.667 961 609 961 cv
cp
0 0 0 rgb
@
649 961 mo
671 961 li
676.333 961 679 963.667 679 969 cv
679 991 li
679 996.333 676.333 999 671 999 cv
649 999 li
643.667 999 641 996.333 641 991 cv
641 969 li
641 963.667 643.667 961 649 961 cv
cp
.262745 .917647 1 rgb
f
649 961 mo
671 961 li
676.333 961 679 963.667 679 969 cv
679 991 li
679 996.333 676.333 999 671 999 cv
649 999 li
643.667 999 641 996.333 641 991 cv
641 969 li
641 963.667 643.667 961 649 961 cv
cp
0 0 0 rgb
@
689 961 mo
711 961 li
716.333 961 719 963.667 719 969 cv
719 991 li
719 996.333 716.333 999 711 999 cv
689 999 li
683.667 999 681 996.333 681 991 cv
681 969 li
681 963.667 683.667 961 689 961 cv
cp
.435294 .972549 1 rgb
f
689 961 mo
711 961 li
716.333 961 719 963.667 719 969 cv
719 991 li
719 996.333 716.333 999 711 999 cv
689 999 li
683.667 999 681 996.333 681 991 cv
681 969 li
681 963.667 683.667 961 689 961 cv
cp
0 0 0 rgb
@
729 961 mo
751 961 li
756.333 961 759 963.667 759 969 cv
759 991 li
759 996.333 756.333 999 751 999 cv
729 999 li
723.667 999 721 996.333 721 991 cv
721 969 li
721 963.667 723.667 961 729 961 cv
cp
0 .458824 .541176 rgb
f
729 961 mo
751 961 li
756.333 961 759 963.667 759 969 cv
759 991 li
759 996.333 756.333 999 751 999 cv
729 999 li
723.667 999 721 996.333 721 991 cv
721 969 li
721 963.667 723.667 961 729 961 cv
cp
0 0 0 rgb
@
769 961 mo
791 961 li
796.333 961 799 963.667 799 969 cv
799 991 li
799 996.333 796.333 999 791 999 cv
769 999 li
763.667 999 761 996.333 761 991 cv
761 969 li
761 963.667 763.667 961 769 961 cv
cp
.0588235 .631373 .870588 rgb
f
769 961 mo
791 961 li
796.333 961 799 963.667 799 969 cv
799 991 li
799 996.333 796.333 999 791 999 cv
769 999 li
763.667 999 761 996.333 761 991 cv
761 969 li
761 963.667 763.667 961 769 961 cv
cp
0 0 0 rgb
@
809 961 mo
831 961 li
836.333 961 839 963.667 839 969 cv
839 991 li
839 996.333 836.333 999 831 999 cv
809 999 li
803.667 999 801 996.333 801 991 cv
801 969 li
801 963.667 803.667 961 809 961 cv
cp
.223529 .996078 1 rgb
f
809 961 mo
831 961 li
836.333 961 839 963.667 839 969 cv
839 991 li
839 996.333 836.333 999 831 999 cv
809 999 li
803.667 999 801 996.333 801 991 cv
801 969 li
801 963.667 803.667 961 809 961 cv
cp
0 0 0 rgb
@
849 961 mo
871 961 li
876.333 961 879 963.667 879 969 cv
879 991 li
879 996.333 876.333 999 871 999 cv
849 999 li
843.667 999 841 996.333 841 991 cv
841 969 li
841 963.667 843.667 961 849 961 cv
cp
0 .623529 .933333 rgb
f
849 961 mo
871 961 li
876.333 961 879 963.667 879 969 cv
879 991 li
879 996.333 876.333 999 871 999 cv
849 999 li
843.667 999 841 996.333 841 991 cv
841 969 li
841 963.667 843.667 961 849 961 cv
cp
0 0 0 rgb
@
889 961 mo
911 961 li
916.333 961 919 963.667 919 969 cv
919 991 li
919 996.333 916.333 999 911 999 cv
889 999 li
883.667 999 881 996.333 881 991 cv
881 969 li
881 963.667 883.667 961 889 961 cv
cp
.427451 1 1 rgb
f
889 961 mo
911 961 li
916.333 961 919 963.667 919 969 cv
919 991 li
919 996.333 916.333 999 911 999 cv
889 999 li
883.667 999 881 996.333 881 991 cv
881 969 li
881 963.667 883.667 961 889 961 cv
cp
0 0 0 rgb
@
929 961 mo
951 961 li
956.333 961 959 963.667 959 969 cv
959 991 li
959 996.333 956.333 999 951 999 cv
929 999 li
923.667 999 921 996.333 921 991 cv
921 969 li
921 963.667 923.667 961 929 961 cv
cp
.109804 .72549 .870588 rgb
f
929 961 mo
951 961 li
956.333 961 959 963.667 959 969 cv
959 991 li
959 996.333 956.333 999 951 999 cv
929 999 li
923.667 999 921 996.333 921 991 cv
921 969 li
921 963.667 923.667 961 929 961 cv
cp
0 0 0 rgb
@
969 961 mo
991 961 li
996.333 961 999 963.667 999 969 cv
999 991 li
999 996.333 996.333 999 991 999 cv
969 999 li
963.667 999 961 996.333 961 991 cv
961 969 li
961 963.667 963.667 961 969 961 cv
cp
0 .32549 .552941 rgb
f
969 961 mo
991 961 li
996.333 961 999 963.667 999 969 cv
999 991 li
999 996.333 996.333 999 991 999 cv
969 999 li
963.667 999 961 996.333 961 991 cv
961 969 li
961 963.667 963.667 961 969 961 cv
cp
0 0 0 rgb
@
grestore
%ADOBeginClientInjection: EndPageContent "AI11EPS"
userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse
%ADOEndClientInjection: EndPageContent "AI11EPS"
grestore
grestore
pgrs
%%PageTrailer
%ADOBeginClientInjection: PageTrailer Start "AI11EPS"
[/EMC AI11_PDFMark5[/NamespacePop AI11_PDFMark5
%ADOEndClientInjection: PageTrailer Start "AI11EPS"
[
[/CSA [/0 ]]
] del_res
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get exec
Adobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get exec
Adobe_AGM_Core/dt get exec
%%EOF
%AI9_PrintingDataEnd

userdict /AI9_read_buffer 256 string put
userdict begin
/ai9_skip_data
{
	mark
	{
		currentfile AI9_read_buffer { readline } stopped
		{
		}
		{
			not
			{
				exit
			} if
			(%AI9_PrivateDataEnd) eq
			{
				exit
			} if
		} ifelse
	} loop
	cleartomark
} def
end
userdict /ai9_skip_data get exec
%AI9_PrivateDataBegin
%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Adobe Illustrator(R) 16.0
%%AI8_CreatorVersion: 16.0.0
%%For: (Zydd) ()
%%Title: (bcgr_squa2_010.eps)
%%CreationDate: 8/5/2016 6:12 AM
%%Canvassize: 16383
%AI9_DataStream
%Gb"-6GBYOKdQTX?T=+S;^_,=SNp:NF!'#c$S8E)Hbr,c"3;8s;O88.;cp8s=!PRC$^GU)Y]&#7q'HTj=PY+s(bfj+ghlPCu+'Yjs
%Q;T`rdd\DN9:6DbR?fStf?DHVrN+QbPA,<2:rWI%P"u![.'Jiq`R\8n]@Q>>G$8glDKi_CBQ^mZWU50cc.#VP"2Ch2DJP5$lT_AN
%7cj"Fs(6=JIkK=l[;r>>?0S1r,qmYaA`\3<?Z/o)qqnTbc;G";$N4:ZVR^#VEHX<SnsOrF4R[^YYKgps*j-tFP[lRk[^3s)"b02F
%bM8`?53gs1Vp_WTRZI&8cCJ#5]@-N?L,Y;A]r6@g)jO`h@\V<&.XB9gG*:k91$Bn\LAW.81B)&kMOVTfY4d(Qp7J22DQQg=F_lF`
%42(7^s5<%^RO1VmYPmafhl(ZMS+Ri*1BY^-!$/JI[0HVaQUSG^Tt&JLAFH^mihFlsW:b+R[i0[HaqAU"o+#u]@HHAbktB\^jJ6's
%?F6kKATPFnV+ah.q8l/r.1;i6Jli??Z]&6Q`QI%E4*-Puai>i]%_P`qQRA@#8%lIo<7,sIl-ub?#9-:XA:J8Kng=*\bPAnY>MSpY
%YL[fqNsF;1&N<[br6[MR[FD9q\%YF(FNNPY*[FHBIN#=!qlTTXhr--_D7^\XMs'+9r^"4h17n:,R(Y;J:E+`[Ei7CO\+c?[XbjeJ
%S(6)*/VU7UWMS8%q,E)4id]k-^\LL84Wj4k@dP13)_V<eD5m>TXjLm))8"d*Raoo1V:1Hgq.ZVPXE7A4Kq%gFrGVV2Jm7I#mX5m%
%>MR?fg09X;Lo(cA#YDhFMGr">:>5!kR8ZhN]`,n]3"%2^;AYnH)t"p@gh?>Z+D>og[=;qR[BK3dZ0\JJX'N3OlqtQNI2SrKkPp"G
%[Mni,\!nQ@NVb^O[UbVHRO:g1btc%NRC[(>)BQ=<Jc3_12k;#ec$rG2DIU?^nB:jgbdT*^7fB)\Bn+^kr:9T-mhQW,gK:67NM>iB
%,(/Jf2Y`41VK/1m<3"O>e-qEQTkVgP;sCuD@Ysd3WH@F5Lq-'fpV#G%UmjF6f6]BY^KTN3U&_%85:^UA2+^s5;L80(c^5o$$HV<Q
%ah_HT#fZQ;D:C9.'FpS6s"rt=C'iMY*_Z<$^X7Cu:DJm?hmHE!V`CqjrM/L%P#<[gO%6KrlD?n^3Q$@;L+XpB,P0!\OK$Y=P+j@X
%+!he=p<RV7aU_qFl!O"gO$ET_hu*e$Gj6]"s!X_D'DNm!QBkCe<FK^J4RlLQJ87b@ct6]7\4/o^F'<9c6E[S*SA*"H\#@MJ"E+3o
%+=CoLVf2A1>@)1%15G1k6_#UhR)(,U,U8<U=^j%PlmGs7?dAC*1\'4m''r4PWb&H`_]rXQ\_qj$`XR3p^Cb]?SU^#[DN53fZ18b$
%H9%8dkI]-[$$(:aFm?1/?4BhAQ6tJTF=R<kfd'N(QgX5S002/%VO^=N(%s=\mVDBkpFhX2oQ=cSfmWk3dciCEaa&n>BR[b(IodP:
%2_fU*%7o-i1YYZ;f;8ots,Vr8fkT*tT[[YgIFY@&?uhEBs!o#_>,TPS3DLghR)+]9A(m@g%HWd$3@MlP71KPK*Ye:iCSMY\B#Nru
%s47Lmn3URJn+^@CV#Ba!n>)UnGkKS_r\"h4IrpK!FXol;+rlL'@Jl8a^G0YGL&TiloA9SqGHFrGiZ:ac1=k*CRB"tU=0)_DV.Mr)
%p.1&<O4b]@7kV":WuYrighQe/F6i`rb"M(Kc3N;5`9bMD5dHkN1>;*E.\"r;i^YMnYVD5.D49g`_HF"h3,N)HPbOA8<_?uL'1sb*
%]Br)LhkNg,bGd=!TjM#h:,PIroWhVL_rs(Fjqpp,V;V%!k*c/_1Xk&9>H\NL[DkZ$N"s\(F5#p18bM=``W!8^ntkQis0_2nB+$A0
%;jk>%df=`?E9oO/S2:pY#@J-C'fg,I=/o723EFLNV>DPShJK`J@_,1,m`8&=Om(>=4`>hJfjDG#)BE_rDXO>Zqn6%qXO>'\m/$b3
%`*DhI6r#b;2"fD;RTQWJ97=%`G?ERF[m_k2WE3OPUII3t[?YLeV046:Xag'aFR^^!"HoS?%$NVZmM6Xt,f&`[B")'^PPFNP>d&Gg
%kNB9@=#@l)bUo[Lg@\sRrTMa98J.B#j!q-$f2XsnWQ`s;1+cjgaM_C*A>J4M[?K*C)K&WFIoj5E*aCJab0s+f>O22m93p'Hku$b>
%jgEsDp\kmS2biWk2lX&EF]`@,oSEnJ[+0=i9'6,O<iu,2;r75cj5B"mbK`$4j2"&4eP#EF6C45<6VobBF[+^P9Lfh!SGa+$!^A^0
%pY'jg8,UFGFI[KBlr6)SGQa^b<=r0s&dri_\Qc+aI.l?1"JstX2&^kWk[=e,>Q#lr%f@!+)m*0(jScbrF-6aZos"/H4)%dQ]WNSK
%/YMnbnX2JcFON#,OH`u+=BCS.CEZ8npurRA/l5\N0p!!/0hq(92_lg`?VNJ=T_d*DI"eDIKObV>B<k+.GB\_LSS?^P]@L[0@uhkd
%AVlmsr(f@qjQ?H=)^2348u'g^o:+5,Dr)E*2O5%Fhu*dQM@VhrST6KqTE&!/eigf&N_Y%/YP(/.k^ouKVNjWa=\EmaS^pleWs[#0
%]X_jn2YYAm7`,fL<u>=MFo9f<J&LGUC%gg@9TkZYb_l%se8n-&kZfS8e+7[kOL/X'1ls\5r6a#6`Y;.Wj\I)7Bt<IH?<9+iZp6'.
%':14f[E[i(_jrHs5S/V`G:(lJHe_.$cC]V<AoGgk#;nB`:DFUc3:BjP?-\uXEqI]7.Lf0$b39CSK_ts'OqmOQ7D`'$=mph!VXan[
%RS%@uas]a(.CNcN[ROdj(d4PpK)Xi2hQ8TZ-3+=u)-/<P]\G,CD:"<:HGI^9X4?OD^-PN8TK1-.b6m-sI$$9;I0aB*W#?:NDh57H
%XOdA2YJ%?4eKKEAY'7HS"jt."dXsj#F.8C^a1Ib!eaIB.KACD^ndsVP1@ji*Ab+<Z<i9-%qQ-o!L#Z2E^3:kfVC81nZ<^h"0C_]@
%2EIdZ6ii8(PZuBRVtfdBhGa\[7ek`eO*@47*WMkM!f@d_61;a!QC:oQp=<-1pP/**nX:m#U[Qf<Q0G^elZb(f3rN+J%PGH]-6BVP
%r"`n"3&bJa]B@["5eH4/H6n9sRpi<ZjDM7_-)A4G8D@o;YL(W9[tuH<D/1n>5a*'VHX`393RBOWTO\k1%UaNS/XD,W>%$27W@_!3
%!bkFu<A#1@3E8+'*s+$W3XRL*B2#s?ib6,8\cBZNU6q%q3=`"&]]l*Bo(:sA]h((a@^'js=:m=(_n+dZRgZu8YPC(_[W_02<NOh<
%3`:'rd>1?ErMm>6EC7Ko3A.2pe8TK?2,_Cg6rL\3kCc<:E!\,q^p+:Vdk'Z@S:TP*$4t/M>Hbu?,"5=gM)b!D#cTLl?&dtLc%#o(
%mIhIo.a*uUg;PWF&b8$\#Fme4cB$]0DrP]gN*ic321G78O2_!Q?h_%a*BROt"\9iL!mZr/M]l<6()-\&>FQL2@'WRW`?thcWY;kR
%Hil0I]Tg*141^.tBnn3'Un0.-/(HKskjc1#U8aT-rARaC@!/1WhA7H,-4mM97D4Q)"fI5INb-f$NADa2M<P5UT-g=Fd0Ma1X``qO
%c&.RAb?$+)'*"o/4DDshHbCTf2#_Nmqc`H:]*_IF;$K*oYjIEFT$5T<,Znp(_k9Ndk[=oE8R7X--*HU[!*"?0GH1I>Vb[0I3D>''
%^1/)\Cj#`t=c*G0CYRSTT`]o_r/hL3N-6CX?WiZrPBG!Qf?Gm&iSP5!mCotIDuYOt/=,M%3Nt+K'D:jXL>PT/BI3)P7\q+-%Qe*$
%"54jS?hmlhCjCaBAs05g[.&<MRAOV[S=;'LIY;?"YMSm5='j:&Kcs$G=b(0sJtV\<4DnPK$f="IG#TBS5h3,[&='E9\a;hO9=?Z`
%/"LQ[Q[6ol1,>;P5jBEJY,K9$(SSY*1r_q^8W;.=-UoKGCZ7:ZhOD3+[1OPo=e^*&^"!N+LEp07s6@m-eZZHn\@I+@_R*dBjL%b4
%`3<#*k*rc>$F_Z/OG`9#G\,Ba(dfPlk+uZXD@N#p=7J1^r!,SJhu+gO41-cL8?,jSfThr9INBQEq$G.O5;r;7SVO(j<UqXV-gPlm
%bq$@sk*P^M+DF)-Rkd")\6n->$(2eu+t9D)n5>+n^&f+X!@_7?[kNY+;fopgT;JR\_\_M[_AWA;692jiY\jk!Tul0gc*so3_\1YR
%!I*<en-AnhV:ft(#Q.Z>1g/lhj6`>fZne!Do6fi7p6s]QiO*AWooM2K4un%Y:]7C`XS9H60$%geIS)"`6l'UOp"hWiZ[)9<rGU>?
%RnMH"I7>j!R?Hho;kfW\/4<sgF-,6[G_5;Zh-.)V[RD89fBJdM0DUkoDnXQ3XnL6?5IJLFXn,k?;hD]*B$/il<2r@*V*S^0ZTWDW
%Sc.i8fS2r@%J^b3-Q)Un/;r23L+\G`/5Bmh"p8'n9m8V7)4\u&J(K_MHFhsNe2@KRLgW#%`sg(!%Rmma7@=:J&A(E@?1H[Dodsg_
%d5\<ARn.D34(t;\T<8.[f%jK>lskh0+ub1J!J2DO-6S[90.6`KO;Igr`4iR'^:h!glGX[0f/2[02>tKr>ebS:8;5$XguA0C:F2VI
%D<9B4lG!&TI\JK]eb+jW<q5#"q:_B#>HJUsV;!m%Xg5H_L-F)XlL&CJ=-u(e`M==%^/i\Ra*1QFqcUu.?Jb;<`W";23dYsI9]r2r
%74PCqAn_!dH@,XXelB:O\9>hED>iO,:#.R)'A]AN]9V/E\Rf$H;Up+Em69.1EA=$0g?S!9[XGg'EF<q@bh\QMI(=Bt?'RG]G>dt6
%I!\^sh->Al(H.8M?&Ug->iQ*'XF6Y"QHif"mA4l9c:fn*jj-N19_)I<SUI[+l1t0W,<ar=WftHIo8V5)BB7MWY0"R.D9/0R48moL
%&h\pIWgeI-.k5UUP=6Wp^<e`]PkD$3-iCL'OK,Xr7Ah;ah+hUnHe!CTQj6MT4(l'L:uPd,go)1,1)Wt`F]PAIS9UUVH/)`YaK().
%IrT<Q4mR4p/QHSWSMu0nIHipYJ"@%E\ud]2<aYKkKsp&Hl4^`j%4ZLEWps9&o.P54IG^U,\ih@YpbqlulJ1+ApAM^4WJer<g.FW0
%BPQhtmT:8tV8^f5[G*dB]S0+.9:[X62Q*&0nu5uq;Yg9.2mCe77Ct.Vl06Z%mC"M3lu[.DgKOTe<44Gd8\]#BJUX0e?F!3eSXZCN
%Z=<1'<BF99:Kf4hRBIph[J-64imfJ,Fae9pBocFNJ!om][Cs25M\-<i8k$eKnl/GbDk/7S^@<lL\?ms_KDJ)EWONeKi9jQkWuP+(
%m^gi2n,,i/k&2'&)jeUZV,!=,jDY*m@(pCeIVf7QMPb!-;dU%`p%DN<[k9;G;FtZ6Jp4(nB+JdMQbK<ar%bGWgH(fskO!^M4a`O2
%jI%8ZEo"9cCmPjK0[SV2kAP"U)Jub/_nG)#]@>S?7VJirkOWn(WFVgpc+Vkp%_mK2rh]$Wp<CM02q,7cP=BCJYZ+lO62mdQol%!V
%^F5Wprq-.^4]%a\bN8E(DlFP"of]KXdPnDgo-8AI&l`UC\rrX9s&'AK;]"!IKk8"sM6OO:>3uMPpF9*gD?lGQ,[KTa[fT/R/RE@_
%SS_O[/k0[F?2!8,YghQo(Pc2qV*6$dZ1>3a="5)%PK0$_YGIZIX=qXj:H-UNV7(.)R?+"=O//,j@?HjJ8")DQ0BL<FhQK)W;ELH0
%glu+0X#_n-SjdFgUp<lKPJ&!?<2su?UmF,jF^$$nB*V$l=j?k,Q#8L!WN.&%H'VXC=hE0:CI'@kk5Bc"SX,.k;7:B(4X_i+Usef3
%%Oj7o-l7qc%eFN27"e40hg&8fHDZr"8gP+]d+(ADWf+<=;Q#ki&"m1//ZtP_pS?<U@&[gOEqOU"(RM_*(.q:O>:6&M<8'9(^[a^4
%J%&HO?`_cMbJQ\<mhk3ET.S30ddG<C2ZHhBIA`@,k,\"&,AEu=RoZTID?$5Do6Bi-l*[1n*BYO+l2bgkb#)>&.Bs!X9RXB"*H%e_
%I6/kGn(+>QZZRk`mA=u-4[AWk0#f9T[WIbJ2M6HbP"sm-c@Xn:9BY&:4lIujg"^5:o;ej4^sDK@d`'4'-KqQa?)E,BrbkldjNs8h
%5Af$Z#,TnRFEO!XAT-Od,B*=QX,l%^d+^qPHJ7(p5oWL:/7#%!G0nQ2V7S2:1$J"Cl1*nR6$US(p0^FP^Yc?u5C]o5VorX/kj=,s
%N1R/%\'O-R+Z[;VTEca@A7Y!p3=:$.3[J^h5*^cWT$%AR-MN-YHY^aD?V3K>kLFkRp@lD)s',H$H*P$1]*ea9l(4d8k4bjXQ,+uA
%bV#:=h9C%jG@QWG'r@SOCSY%=rSRTm[J:%OCfZd]?U4u>(KZp;ca^I=\V2hd;2D('>!#Zr=PRY6O-q7t>A_]*Mmq,%D9EN^_YT7L
%`(jrNT%POak-iGLlc(M^J/7TG.s_&`<8QKS^MRn-'b2#Lcd(;=cX(3%UcKtUO=PWLSR\\rr\n$l?+(^HSe*InRE[b)cFiDjoahnH
%mjmhCG,eAGI@\DWEO(666VF=BFE]'s\^f0!ZPY_`K":q2fI9i#>aSYc\,8nLDJt,"SLdhM6E,Xhgk)Bn`R_5C;R+Yt;Eq/aQ22+k
%l;#WV\j1C]G02>Cdp6/D\tuF"<-)-Qq)ho*9&41]KI8R'WS7/)0#fEOdsmMOJYgdL(JlSfET2,[K7BlSm6+ZCnHB#V^QlT4l-^c[
%<3i[*HDQeUJ:_RQV4,H>DLtM-8kL5C\/:s<49mb<f0Iq_/S4>?kpLhf086=!_T#?^*%O\Li@nTLq,<T>a:5R%3(2,b"=A-!O-fHZ
%pY5BmW17^%`K81Z#@)38DogU)3U?[TGP]<[1i.M:S"Ee9MbTAT)/$Qc4.U5N$5-)5I"Rb_V#5XhAqp:.?$\*(f'F#Eg_ppLlEX)^
%3<eiSgSUs@b>\<u4(J;ig_@FJJ7-mEM=6@Cl*7j1gMH47F-U&^c.INO7kFoV>7ij3fkU[2LYDer*r<"UB<=-\"uQ;qO3D`\0>(J+
%P(5T)93Lu/L/d;/M;/`1!T/q=4T/d!O=o@;>BlV1>0,?;TTSZ71Ob>Edt_'*5)SXCk<<0@g!s_.-Ga$2L6gTCU\5k=%^JPV0+Nh?
%n;(2l$<_YoPd"Tb5N[0-gYq29)dN)e%N]!*]0(?X"9!3&W@i_KNuG.*B@*sF#JJSFd<Ir+P]%"%U"aB&Pi/tlB2=C&U.7hO+ZipM
%DP_muR\-Ed1N7ZsAp](dZ>5%\4oJm.7npBTn<G&t`9GCeEW>:F<^o94>F,j1@l05=%Gs@r\D1&.j4L!XBmt6-4hoG=LO&(TRjb`H
%r8b8$QF4ncbWhAg>5.>D]LfIfK3]g_+NbR>,ujp'^2ktY..UcAiSH%"P/-3?R(,_'C;%fB4bDGibn`RY\\3.gEsp3L-YYO@jn?Im
%HrYW)[+]Hl_%d!R;41Ofp-Lh4\Nbk7^n[t]Sp^;+E8jJmH0fIsD(='oh?W[&q.!Ku=hb1H#]:fMLENYa<ef1^/NgPS/I'd#HJd$*
%#;l&5Q_/H`ornlDlk\u$TNf.S:,qKl9-HQ9\6V&L+K"_[-D;pRp$dta@bLC,9GP1'X#k?5H>YZr;T5UTZJQEL_95G@iO/NN$*P"J
%YiBII>BeZ4J$iN=01a]IFd`YI:Tk"5O9p[6CH>GLR#5&ZnD+qTlOD6s<2NZe09aLPWr9)+q.7PAB'A"m_*h@`(S(Z=^!HZ4,R7M+
%_Db.Ehj6*Baakd0\"Q*o/Ra[aVRQ7DXDX<*S#8Ms,\kVrg2)[B=Po0F8H*&/Y!6RfP22\bE1+^]hnBF#DUR-I;U]]Rm(jYMZ^dTt
%kfjWI9Mq^S%h?V].!fIGHo]%EHHsR>2h\Ob:dPT<<R8C[)QtL5_BZ]K;=Yj8-?KXak#iQ@Q9YI9CVg:_Y^TjRn`R"1=uV-6r"b?8
%CXcKV;=caf7]uJ&WKq0%a#3_,LZLgu'YacYrd^H^A%.jI7ZmmKPi$h>/g;hR,HD"5e=2=G$3YREJ[r7VN$r(%n9Zh&-jXa"DfO(+
%KqpRn"!=@&La,u:GshW;ms:k`P8CZVQP4%@pJ^%Xc?KQAJ>G>6&a_^Y"HEcB#T4_fd)k^2(X7ZfTa1*+Ej>e[i(VHYZj%lSpHG,6
%!R%uD>Eh1^1cZGsQkF.UptcNa$4[tpGu)Mti?g@=6Bo;/g5ns!H:a\Ie"ZEHYHD5<*!J6\$CaRjLcTDO8E1ORCalTLMn*S^h'A+o
%H-:'7>n;&-INJplfL@(#2Zt(J3-.ZAD.d4[m=Yo3.=[Na<3t2C:4%S]Xfc$VU]p[%:WQ@,Ha"UG#=I1s4CJ>If(u3_DDi3:j<.bk
%TY0KmB:)+EL6gUYJ@ml$]NN!SSKDLSZN8lG&.((g)4M`99>Ao:#e;:-XbkN&)/Vc=^lPjT!<sN0'OY;Ojs,"h*0gWI00mc.!(#b*
%i$DQcUZqW:h]+7pC6%&u`LjU/GF@p`<cbT#f_f]052tu7hl`O!DgjVp%KhHQ[n(D>Pr=$H`3@\Lgqm]44:+_/O$'Q_TCgod7`Zl`
%V_C0,KqYO,^V`f&>"k_t]Ois#7_'AdYoR5h\WGs>++mU"clA$iIXZ7hH#k_6p&laZE,NP8Ch3Ac'a)';0m<s,dB(VCEH\W-.u1?h
%pQKK>Bqru^dLC]8'LTR'U)PTplG_$0f[>cQ%9>HDddP)L)pZSr]%Kgo_sThLgkLu0!=BMqBWGW9!OAoDOG";bFJoHdBos:P&LZPJ
%0Rr<J30GPu3ebAW5@(M&(0@'31ggX]l*SF64XGF[P5HbRM@6e30ZnI6$s=8rLd#>D]/Z>nbG/hl^Y9.OaH!7)h->4<f4E9jpOmO(
%d1Y';F[c\nX1/WSIM0\b!^!mYn3qO024O:ZFI3CN2N\j\.fP"0#jgef1p0m`bJdb1LMu6DAe`jpan8=6S<#M9d>Zj%3V!C63R#H(
%M]tAd-4aUfGp:hrCf,FuSV6_:&F9Y\WTpba&a'q0rVM^eOQDeh2PTokpT$EU-UMU6aeNB[%;.L])mS=ZUTpARBQ\nYHbeAg3[6YH
%+2c4J:Y<aP\`*?=KH-=6e@SrGa/."AMi7X+_eiYBqjqR>LiCW0>WW#Kd8D<9a\'sVdo2d)6!JSY/MWt4m'B2IEuTFs#?HdYno41f
%R,isoU%$ol]==P--JY:rEV*&AD-26aGS=i`%eeN_WY7<BTWL"rT(stuPc^G0S3U#)1I`oWFPnqB2N4MXf/Ou'I(\K-#e"V7718fc
%P76/]hRE(gMl4)A=<oC[XD`jIrZSg@N9)4A.E^6/jQnRHLZmsC&*R54R#@G<^pJUYqK_pX`UG)sdf5K].G1(?:,8_c"H*jV4[.!X
%2W\T/;/Q%0NS@Z!q:o[h<M#+IeUFK69lE.Z0@ilk1mSXgP>!sn@V@=M";eF%<]D2iTf!\12o-SG0MXT7GV%a*(V2S43$25%:FmUV
%W'"*??[+-Z"<Y37:,lU*/0@ia`X(`8O6)kh6PmcLk6m@4Rt.2jUPJGpa7@oj2L[VmGUspWcq/o^Ku`c;XVia]%lut2"Q6ia"*Y,+
%9&U/<"8dpPV`4li>cfD]nY9-pk&.dW'ZF@.OWAB/Mbl-/`\A$sc4/mM*jS^h?\AW_&YO1(gBPNB#$ootU+@i:0\#41GGd,?[jWo5
%J//V_XMbD(Mqu5N6e<0j5DKKHZ9!")Bd)#a13A6"W@d>\_oD-S+a0Hu_.I0r*-(XIHK"iLp;/&/Mb.WQ%6gFMdIrQ:hSP8!QkC>#
%n'2RaFuQLPM4\((K\[)SBc_(g0ctHS'btm.hnLF=FCK'6>YIUjV9f5`2c)&cK@ehXdLt%:C13]i#fMZL^L!1SUbO0=ghUKlGqure
%I"P`1,]l%/U2hYL)_kPH@0U1K;$eq`6!GR2K!WguZ9s-k#qdH4`5i*\*?Q==.iut%7HkZ,`"YE.LC/84M(&Q7R:#k$n`\tK>er.8
%[D3n);9b-l]\a%e]K\Dt/^b5Z3+9iA7X<k2O"'^D8tY#dnqW#M'Wdm',D%pY"QpO4i=i\0CaFKE]ELNA1S^!c(ac`M]oQ#UMhqBN
%&i=a$gn;?J*L7#%W)s=+7/0M.20W+Y(&J+cH.+r`k[')##fqPi:"4KNc>u!D<e'K4XU"fPDI]aQHg;9[-_=Z3A\db+dl_5tcN@^^
%es1X.E=nMHDKc?%&f%\gcqD#l]0!7%'!b=A%/]Xe[t5<M6mT2a,1*>2'sKX4G6.OKBp'f"C!]Kf0#5=j#VsAZ(odDbrTO'N5/B[6
%5n,VX5[uPib.oaXX+M"hH4^3,3%Sj\3GE"emIsrFh"TsD.g7,jMEPnV>b&<dp3U^;>>Rin)r(V6j'Z9^)06cca68(89t5tKqGqA[
%lV0p@W09Y*UFOK61Z=ob(9^oZ=`;5i'XSg_p-e3U$&]_BHGb`Ln,9Mn2sU$5B%h1"#D>gq<Q4t,esg'Z_"[i\ef3C(/JI,!&jIEi
%VY+OFll7Dl%l^ZaL'5DnS.Td@^SLfFef/tm7)fQ<>Amt>#J$94!GJD3ThrdfJtPY130@MZTs:j:l%;6nMhtjd,aWsKFCa=P@F1cB
%?,&4*"LH*-p?]TddLGgkNn(Z8\>,;Be,0I95tkpIW%^-h$it49,DPt^93eq!N!Ss3'@@^ZK39=/Ln-/YgBe*]OP*SMcp9HjE!O;_
%F&(MP`SUi[#i9PPHL#&$a?3n=jojin*LR`3G+D`G?K=XM-8LWb#7#kPL<h8112dG2fPr,,GTE4\c:^2RDfAPjf.h<EaLj3..n9n?
%+>Rke^X1)84sgu3B7&Kn_0JUBjotBOdZJeeX0nUKTq/5b&qU(9nfn"`A%Q(,XQ5aPB+3BbS=>[p'Yp*.a4U%T<=O2.bKD/Q%%>@i
%+7]],`AAgL`/^pZYK_f62"hL]1`(Koo'FKcndOVh*I,B)YNL<b(Mg+KY:YS%Z1P7@NhPi%(h5bdNcj!VC[6A?M`TlE^+8j2O#Vc$
%aL"36kdd><!NmTGqR3$*`6cEh.\WVtBgts4iP\mYdYrpNO8cM0Q,n?c$7&-uAeS,5Vn'JNFYMmN@'^GM-?'=t*1"Zi6SH(I@UL2*
%=lB,"EA>+$1e@=$d3.-.KS!_VIM)pLPp^Xp"NfY^OpR9t)3#^`96*TL8="qV73?V'q@3^aOl;-0EYN=@s!?mS6Y+0oI!k@@D$I>#
%%2Y?i[]bd":`c:;35._`R;l=&>i,Z:n.Q)Mj//^pQhO"%njZu5%Mb3ECqNP#.*m(BL^;TP4",$!SdbK1c7LbPE3J(_)9%hE:+jJC
%^4JNbdAPkt\@9NSFL$.1o#O><fqA<=DBTI+GU=0kq<EC'BK!?Z&^&K_',,qjng'_X`Z@t/ahpNN(FTM`"NB@i7pQLF'$`:g_h**E
%%X3-i[.u;"#)Q-,r.X^0ZY:YTrVV(=DNcH1`T6%OkOcX-ZCK2Uc`YC/lf[?goo&IZ`?le$:.`n$FRJ'iQO5ZYL.tFDXY7E:NdV7@
%TuS@oppDIT]/qT84OP>PXueSuiie`'@<\-kl*IS/?pAN-+Y<!J.2Q)9]nnkE<&@$RZR19VrLUmCma?E#WT5CH[oCo@T#0Cc\<Z\r
%aL-''2U8g1Ke)f:mG&A+_1)7D_T)784"(g12D"4_6P<"^JG0aAmKNpnc$U8/?@tkPKTs%m/O?L;N,ALFT*d,,r@ipXK+Q=_#5_,\
%pL],^-1a#bbGUu&TYQ"6<k=KoRc$IOP]ZJ,2'!pb:B1-J5Acptg/Cj3H^ZaIn^"NZJRcT6cI)X)K?ETGm'l2N0A9i)$8.cTGC$Y!
%m8X&hQJaj<2LNiF%ef)n%PEXOU1SBEbh"m8hXu3!:4:O+5H3uAr44Pag$Ws"Eh)&]c9QbaN4s-4p^W&6m3Z/?(W1&J`6EUZ/Y%X2
%$SUe>PrL@cn2h(sjJ^^5GHA^d52uEq+m+dVI],EJJr7%$#2dSd/IE.!m.4G0$u<2+&_Q9U9(4doN>:+/(Y'>#6]W;@k@[5j%E(gB
%pA%/Md<Upl@%Z?GEVJ%I$g\6ZG:+<]kNAGR8a)rOq]\0HP6pUIgZJmq`>p>1&,%N3l3l9I))\WO?l(cd^qPndPp?J/ih"OTAmc_D
%n*`a=q/<Hs("h\>:<Wd)BOIH>SbT>UKED&KUA>"RXs=)Gr;+d22ou6sq.8Z((+0sOk82\3(U5`-@,K%u%2[Y5"^46DI=>%A_h&XK
%Yg4u&D^$=PCQ-%m5Flm_N;=S[Yg6,=E$UuR@%Z=g$X7s))V>9NR#PA1NYpF3f@RhX.jG;mn\+#Mb_5N2Lk0sTCX5767L\YDi,Eh_
%M;Woi;$6^nRP_jOS.qd&P%oue7V)K"9AP0gThI1=mg';#F"6^,O00)jA^oqk=-7Mj:cX]K`@jjF8E^i(24lDsHrZ2O:ds4AbRIQa
%KFGRG0/?KkhDcWFTGDZ_mm=\Tq[B?/Ig?"X/,,e+lLh:.TZ[V?<h,!eX%pqi1p4%hJI2i0C]]qslEp4aJ4lbfEQL'$fHf1p!nNs[
%rI6$rcZs-b5X1a*qKgB/s.#2eh?@Crrl;)[;>:+0N9O!pM"%Z%s5WaYOSf(;LIq_Tr\pnjEl?0$r/HftrI72S9+>5,2_f:0\_m@8
%,C#;XRc(?RG@EZ9ST7)LkE:bnBHJL@-9:I_V-d_&'-2c'GBaUaOYM95*fe-aGE\%/qj*n-5YpD@#FNSJqgpsu@Y`"O)uCg!ki+V%
%&TitV"$5qc0sH-_T,Cm/PFt1VHsj??e:nR?lGno<$Zh0F<Rns'l,1#7d1nr&Y#b12K(2>L`]T9J<Lc=u"Em[V/jP]p)Zh`M)MS?H
%*QL]?,>H..>jscjcC:LPmJ5Oh%nV_$H+b'^qn&.3M"^dQMr'GN++X's(@-E[+2-"@M&b]e&506IA/:!`H'=s?UMoqHB%Z5[f&?m>
%[]e>'^>\s\Z&FCk"9'\n#0'mpHF`'IEgJjo$6^+Y8qF%o:s+4%15apW2i`pWjV$uF3_W!L*+Qc>)XW8t\@s+(Km4gOk8&t'MGFMs
%31Ilh-QAS:pcG)ZMG]?,,M`1Zl^>UsrAW_`jK_DIY4&<9s'i"nj50[rW9Sq8rs]kB'6*EtYY3a`n,;jO20efO3:.WgfaN(-T9rjT
%]mkWb3&K?5UjN,N+5ag(n2#68)&WKXl\d`J,C[#'4R'JbF9hGWdD#24E;.QQ)cI%)[2<m*Ob&lpke4GL(cA'j`ifZ//t114dCqFR
%`h)3\qd,&LD7;gaF-u1g!O&%r[g3&[7Z=/^o\(HsA=)86k%b1mo<Z98&"/JG##a:(]rGIDo8f^TMjA]![eAB!/bT5fkOoe2-W+.)
%#>@p`gK0?u)'b7.L+`!0>'iGW_UnScCX3!D>0>nn4=2:17a_-aWtcOG26=gmau4.V@dqu@*'Zppjf7*-n8K1fKXfe(I'>,n-PRn\
%1[d[Te&FCJCCmkk0#N)(H<[q2]2<Q*S*dj#K1@:u?6FLa*<2b_^tgDb:L@Rt@H'>%Sh^p?madlIC\goW[m7P=%_J9ldNc"oG/3%M
%F\>%10?BcFo\s)(T7e&!dl>7XH>$$bh)?j7Aq'k:Eh0?qe+$&,!ubK?2lS?2rfMIVPI#h&H(Fq-4uaUF'XON]Lc=iUH<8SkgcFXg
%X5/Iu+o[d]oo0N=pjRT3=R*!#s83X3C,I\7%N!SOO13EFk/%tGmaPl$-o0-(?2L&hG2"K7k07u;J.qA<E?*'#8mnVrfoh?t8ju\-
%BA^jq?`COPdbKrRa2r@'$SHQLqf3ERl<GoNHuaro0dJFp<pJXK@&]^bj]^BA<*Th>7,3%2?%B)[=\eebPMI,JgNV3:39d%2hb>50
%!g9:WT;U,^8S".`V`jlmiZo[.&"A/3auNU8^'?2CjaJSEZWuXNiLO[9fR7q-mYcp,]20c2Z*LUu($1DhE[r5.LOH@KMd*<n%\JB#
%AUk&*kEWs2&;mLk(Bl&QK[7UoZ0b<\`Q0!+3/>[rW.o<IM@,DK#[Dlh(EOCR#s'6"5oaZ>%I!s1lnq17)!M;J2ZOETjPf\WIK3c/
%]:?"$`N*&/&O"%WS)n$:>.ZhJI^j=tmW5lc]*L!FPt!5#SDC]@gY6O_**X6_Xn6QImU?iR'>0RR2UQAZ.KOm".>^D?8N`_'N@0;f
%2N&B7(tT%.RoBJW&gNDZN>IWm5Ai&f<Ds7t!K1SdK<?Wni9&Cene9mFfYXL`:2hNXW_URuN#5FgQ,t7GD@O2K%!bYc`[g-.J&dp4
%_#jYs=^\tf[Wo!9BTij$;C:&$3K\<)=JZD`J62hhgkK?^-X<Je,,!3I$Zn-Y:8HKW`)-r7H&[[+i&J@,UDRI=l9Kn=Y`]J8QcSin
%YUesb^-M&;d`>XB#5U%#CZrt.7"u&f*YFqD?!sbh!^gWKh##ZWa_g6m*sPnZ1so-m-$;BYc7Nu?F<o4",3&m%R,MZIL`qUpeODb%
%AqZ763'DoS&LVsdrtlq*&QU)8*cXNV:O:*D`45>n%M8iHOb3-@m\3"^]sT"M&d-)/5WkduJpiH:`+Z.WnpVE*,V];IJTsRKJJpEl
%1"Pnlgg5\/)CfbV+s&I`-%0guhl`(o/**PB+2"\:?UbLC2C<WN@?gR2U!!d+,)DO,@pE%_b-XBT=eT\1*VEmW\<drAB"L9S=Wnf"
%Ufr9AZ9mF>rXW=9k\knmeZ/FO4%f0\<h60fXn^W\>rT9500F?2WrHpk_g:&@??eHPWE(6KGSo)C,Ykc</j(,s#:f_,LZ&8a'+(1D
%75$bsi)Ha:(EUSSpDj(I6Ot;(UPI`W*pLPZ[F!Y<\V8(K(EO&(:c@TmLZ5Og[iGr<^l3Tu@<gfZ6LXXgikiV&gC?SeS\n`X(u?O8
%W[DcE@AG\q1)D!d?OCDg[.,e3%%kPBW\0#k%=@&B3:huQg;k'O!r&UDgCAY`2ksW&)"*a0\Qt8?iF.[AOsDYB%);2VjdU6C4<3p`
%_GMsKKXloJ*=a!D8%e=FfNl`S-CG5P_tRYWR5Y%uLS<*MbZ?s,BXQdQ%f$jU=;N$5n+0@]+GgI:_d0nW/[rW(GSh-R`c";))01:L
%M\%*u$:KPPeA<h#*'t!kF5`fSgjF$%*3e+THJr:W/e`g1'TO8U_;08o?7<p,i!NcBD3!f5)rnfQE$*d?pO!!c5)sgF@JIqhhSNdH
%$P2(/0AhTQ#sN#OIL+H]KnhBn=qVVmL>R/6^8c'XGaL`UG+8pNj",0`\F@ke`IGii5\n8DGSk]p@>M-*iPNL:5`^[BHgNimKnmBp
%be<C_4IL@5=8ChL4ib/'0O4G4]H>/*nB_9m0/RoUlX8Y)LVq0lNca6RD_A1@%Za^0ikiU\4h?"n4<-4XJ&75-*;dT?0HUO;4(Q;U
%E8dK(<TekdTe4a5^[Nr4M2Eak$!_]l^:JMR9.]STs0ffgCn2+on\W2kf:G?8GSh\:fklL9\L;?Nhf^t&*3DHrKnnWr*SN!`p_P!+
%#O2)KoEZ6SL>R.kV5M9CdLEnWO>fLdFlD:-R`u*S*X;<bh#N%2hdO&a>^.+/YB0UL&&Yr0RT)_eW:^@;2uHr8=4f>ai'u^pK,r3+
%HG<]7L_aFs?&6-(p\0G/PUr&P)c^akjFo\ZFP@H/@%VVIab)k='APRKb%,SJL(n8H3%$l@[QC%fZhd.b\$EatS(HiGgtH;$-6Z5l
%]8IK'PtlYf@<"2"X@DHbVqo[@IeEHtiptfa[CEMiG.Vurs(Y-%ddMceqOLiRap5[>#n`D+og<HVQ^*aEpPtlB_sd=1l(h2RPg5=h
%9=icV?V-U?cZeVGl8>B<Vq&M'S\*$8GM1/bl1&oe7!a0jH'b,Ke=Q<,hTSPE8"!_T:8_(TF<=]0S\Eml_SpWncXs%9B?UuOiN,PD
%:$6QilL)d^Z1YhNom$4n?C7:o3Lr'p)d>+rk<&RIT3jC<P?-X%1Y$`>g!d%UPLn\N`K^TS-o'Q([^G-3g+>,a%Mt>c/72Z+8COsr
%rqa"`.o,HFTcpVq/dZJ[9]rj%2=?&iqhE(d/HIL3('/:8f91k#l2O:-.o5c-c>daLC[OGl[J?<2'm4C].W6>D8`f]UI;.m*pq&W\
%KO.5(D;$U]mAI>$C*)8*L%9;2Jji60P"Jfq1VNfb.\,"oJeA9c&\-!Q-1gM,Bt;6/Cujg^/H0iO4hl$=V/q@$.hW%k9MZJL6973C
%YsH+Y:G;^94=7>Ka5k3c3k)(he(LLch=SS1'Q.^Ja0^U[]3eN?,XQTV?J(R1EA?5@8jOduHeqjg9Qt.TPtT8^M*IQ?jm:%.)ZFjO
%6^RgNiG12EJ$)ONh`XQRj9tUB8B?bgl$$tFs'g2D(&0ueZcM:Rm\9[);C4mTF8"XfB'4a,6*KqSoj^PsI8ASpDB3mZ&$E)XYrq5Q
%G!4H9H1(oRKC`Q;'Z7Vb9Q.*qn$[;o$YAYlEnu#G=7BO(Sa9k8H#Y%?0:m-\bqu65cKYK0NYFjpk"FUbc?eaNU3H>%)"[(qk-g%6
%SC,j!o%<osa"P_KqP^Q(VX`^2`e'\r1Y!N1&3)7S8ZDrqK%IH0?m0R<`3T'_`5:aAp[@?<JQS_SP`,(l--^XbF\q&h?7d.fJ#W4P
%(E!1OPpu9I&XSUZQ3t*V3?GODVjJ:UqrfY6/6#Y^QTgjZQfXKqp7%8<9Y0ZIr8Leec4\`;j$V"PT._N3!_HqeLfdj"q0hk$AaYdA
%k%Y^O^$9@d=aT/*h8mkq^/,T'fpR:LZb*]EbVu,klp5f!dG1U#pd+V"Os;Ad0s3tZ5@,,ldJnM;afgJHo<`FBmq&@.(LE_u2/?!%
%iD13=q,GmX*d7R4S^B!0PgT$]9u6hrf=g6mHLf)2.q[;K2/dei<E8JC;d+T%5L84/-ne(T1NmQJ^(D)7lB\E<bI+8Dp[(aU51s\<
%;^Q/.=Y'4cP_`J+lm#`f"1&e)(-\_E]?.[]^=blNpE[jBnjWh5WlWJ`WoBkmS:-,rf__cWeKM'je9b9YL&&,fj!m!5<.6irYpe#"
%Zd2oEg>?&_EIU-G`R<;]mcM?F1_mjj[\@cO,l"9';\m'EH/Z$`-a[n]/n?SC$$gr_Sj0s4fKus[6uQYn`I`72,!B:OXJL!_?OoQ/
%>(/sl\2taceQXBrnDr9Hd(*dBhQZpbP>m!e`4PDEQo0Is-BB7@Hd2WISKmR25=BTGg7jedjU+H>D(AC;T2Xl1dZ:d0M+X24#7f^X
%l,m>+IacIrj&\CUZq(pG/CR5gIMQ@7rTa/cE!VPLQadm-1E^Gs<5;D_WUrKBb&="_P1CTe(>"MGh<gQ4bpj:0LQ\IJ*Y9R9JP98-
%:.9G@lNcAYqDc=[NYgIdcEl_Y2?^9mA`&W>hj?C"656W]IW%(jRq6k(=-cD^ZBm@E#C"eGLsZ%,+;hiGqSHas[FM^`#np+'nuen[
%%;:+S+3)ahl&iBaM\,DYa8`;YD7pob*ReqmAm<6Ni`%MA=1[7gSSc#HaKtZDEaH2OoX1t^I9,0Qgn3;+mXJVu5Hf44n2t(1EE!%W
%1>7#n3V]7$9fb5ZN;'[95k7WFD_.0&*gY=Ciq)<Op<uBCpTuPkr+m-,MgO@SDRnD][qldG/(Pa6Y'Xt,ZG7n7G,Z/3%Es"3K;D=c
%98iJTccqBKlcsOql?mH?pX>bScgKIpWD]/-QgUl;T6.['@a%$*GVcJBD5(DP^gZloD&t8)=t/V*/(`nGhP7`g]`3*ihI'rNp=a=W
%0!=k[e&"G6:+0T6,L^Q1gHL[mr4GQJY:%*3eC*:n#/"!oqT<>tGt$b&,2pO1Y:m*(N`brE_/th7WY]l&<kgOGMX&O7^amRYXh5GP
%od!%2D_A6\DU$"?X!]rDVlP_DFP:6-oMGO,Q/Q:srM$d+>qaNI2Ql1[IPtBAS_N^VG'@]mjC@9_K:kpThg]dpkbRRB+6SMZFf&<[
%drXc?f@PXuJY=cY$TKbn_gLF<4%%U`9(D:Zh66Jr2Ot,C\?-i_\D^nOC;"!'e]gk#kSaMiASlC)/PrMU13I.Sf39]t.m&MgVOemh
%`V0/Ek,t<D?qFNah^U(e)ck(.bEb1b92E`TLX!5t`mr<9:3&#H@Q"SLp*X]&clL,qp;4UXMo*;E5F06%Df9QBbr$T#H"4!M4+Rfk
%R+$L(3Cc>mDY)M$NbLCKD%:A9*cC@Z3h`LOAaT&6U#]931YsM0e'(/,baAoKc;@aa;p*.JF/51CV0i\T+(D$kbW^F%Cf-S4.MITg
%`_pAqZ*q-UUZ!8k_1TXbnP-*>O4.iQ[e#nr@udns/IiRQZA>3/[`VB0b`paIA<CMef&2f54Yq",SQ3hQlu@J_91e:f9'9_"GXrU#
%#P^`j6O[Ykbf5C$ACEOppB2:d&kTa]<eg$WJrV\BbVmL:.'l\o4),BQ9odauR\)JaWEX1VSXaR[QA`?RZ?`_Q4&aqH8,Ked16WY-
%lfGcp8H/-?U$t(k,iRCoho69J*l$p>g;_[Zl5oAKMfe1eSUC:5=4B6%cnSSiVFE.;H$`lM=FU$m0':Jd3ns,(c.BIo%4P<(/;@3*
%W%hilPqo4YVc"WYT>t!4HiRe`h]lVP\(,!:g/&,U!4.\e5!YYe[tuLJiC/qIO.hmP_[G40([UC?VafEH]Oa4h7pe^p2<H@FLfG:S
%j[*beILC=q2p9N,\n_@t-T7`(roc*Zo4#.QV@XBV`,_3tTR>58b3A86Fe=%+V6`DRCUQsDphOo<0Zlt5roMtCc&p=PQ(@C?Vtak'
%;1N42;q7(=e&LI<EJlGL?:nQDc(Di\0)pkMTf3,/[^,qFHo!>(0jPp%c(PTd_WGUE(iHj']H7bCg^k'I.SuZld`*F+?cDcmp(UB,
%?SMh)c[JT42Y-g2X0FK336B5Q(hTA!37;Y>aO/7EnVX34bn0J_`(=RQ_'LO4_IV@[.V4PCo-5j44<(QU\<ruPfn`Ac7p;F.(3>Y$
%]tLHgc\UL^#9E87qTJ9.]VLdp[r.6cZYaDdoBk.L\[]APmr)fB968(aEpn!h(VLf,]O/%49:a,TPN?r_at-:fqk`<K6:ib9X;eX?
%Z&ko:csA\lYqT#/_o3m<W:s6_a@\L%MahMmb)i)K?j^_!qaoR-^QPH4[_5j;d\>^PFP`SO%kMak72@Lf7.]N-QJ7P2$jLkA&aX3V
%RI].-M8SGIm<sG?)mRidUR'ZM,p'Fka^`uP1=PuC@QQXpO/G@IAc/F;6djtQQfi+sm8)cI(3?e]/DBNJqWD<`]C%JA&`sqGH`>#U
%EU.6F&"=B%^RnuW3Vpkj*F()!Ke9,`k-R/pq/;Rk^D[LAbspf=]O_fUKJQd_GLPlc/).JKZ():ck2nGRp%831UbTh-l"m/X:Uu24
%]k-JCTkrOaH8.6mk1]\[Hf*M<r563D]A>F%s0:FY?&sp>_nA:Q2UOLt:V5KVkk\f&5Klm](qi_WSdClNg&&.oWIai*p3o-c2RN4H
%iXZK8K?dW4KP%CI2J<uTL4"n$:c/0ll!N5#bV"\h(l5BU%a5Ke=(*`G)]WkDlE)gC(B&,kHZRWkX1AAA'X8)/]aP0nc=ZAg+cjV0
%l1L4;TILiF<qY03^RL`u>MjE9Z)n2DrM8I$bN0Tp"6sMTW>C4MDJi3.h)ss?/uX@35s,l;bd4MFYaeX)Qg\Lu1+QtuSYnT.A>J,A
%5.o%emt_&<fR5+'Fq7m!47Kd.Y+TG9ai.'DrC2k)fN;C-4#nLVoTR/28"OYg"MN&Ms'43d?DqgE+M"h*5-o_<Lo[QCi"n-ghht4,
%Du+1o[m.!;mq83U3IaD&9K>3$Mp%+'@t$]!At(\l>Or)XcHSMaO86oTQZR\]CTiQo]N^q]#<f\tQ%;cuShjj`_r60eTmqROic#!>
%=EM1KF5aj.^,dAfaW(T@GL\&GKR?Pe[PKt,3%Ra%**@@7[t"0U`QgRl+P<OEf,*CT=LU]YTMA]u"]hX<S:'!4."++q@'E?m"`K4S
%Ug&Nc_kFDZHgfpTH(@-G#T+!A)%O`UQ1TtgR[fKUR`Bf#*mkiV3%!01o&*#+d'UU-K[#JOm'r>%_<EsX*r-W^Trj]TdAt!,'ZP!G
%"@VEd6VAJ8Cm#OL5T\VSiTE5F?pVkal-R?0Oas[XAcqU[gEYCA?Npoq0J`ELLjA&koSC*K/!I4oW2uVI7`ar+6RsYjB&G4[U[sRW
%TG]`<R:_X_S35/_2p](!3sXN5XMTRUDRuf"T/tTnI4I"B3(a6A>$/BD,7#E3U_S7^aq2J(i&aQpJj&h_08qqa\<0gR`be8N!/`qf
%$Hb>n?mDeH7SgX%D=qRhOlatndoB3N,shSlHkQ^=Or_"E3CqSnoSAZk0e@8u@6L@';0i(mR%&X`3_@dh).%Q)FJXT'RMCFHb89J;
%GGWS`rbccn*UdlI55%R<1g+DU?5sN7VKQmcFA+:<)7J>i@Y.3J9.P2Hcq1?RLUQ#djcnraC6f'%d9%p3i:tOL2Ocg7Xf1QPP:SuA
%#p$sVaGCtJdb6g3`7jHF$U66qg4<3[:efigZ,an&NQ)m]WRE@J06W$!e&DX_LUKQ[&,</:V<3^5@Y'$64nIsQaRUu:jf82%cbK6W
%IHQNN\9GLJ]hdh10ak"HG7GuNmWXS:8C^Z<c$b`7?aQ0@&3):9\47S*`tD\9bIcu"%"Vo#L65i8B&(U[/[?Y*D4-44?TE<b1<nD"
%pcE(7OPeDCalSjW<saNchKD]Y2g2oRGPAB`7sS<FFJD`:(n!.?Q<\5Yo)+f"j*[_g[H=)>QDLWrDlq=R&Y-*.ItUaME(5Pk)272s
%#o9JV<-MpDEk-hR0"'_6j0>%]ArZVuo<]08HLHPU^3B`PRI=4lS7Z)K@m_^5Y1fAaf5*]&`Oe:$%JJf9M/IfX>UoHFrr!K<Y:.Xs
%T']=r#Do(cel`4'G8isDguZYK@P-]PE@B5lOp1`(s3/ddAcB[i?[$mnm)sGB\,/Lu6SbjK?b+b#>c5&:e(!&O,QG$QH2@5`=?P5/
%T24sCT9(2Z$pE^i4e?GT3u>igES+0%qKk)teAhW[g9\qu`hLakQg](o;mB5uknn)pWh&eIHW.#nanE\`\_*9sgH<)mQn,l42Qhm]
%=s65N$,c/<&Mm]HqcNYs#DU@;X=\6DcK%!#g:obL/MJ=1<mMRqa=iOXV%SZQ0-sgb?'d$7VUR*AUg&!u/BY<Mr?=)+]AWO.^<;]D
%V3nl%V"3(G'$\hq2XkqFH#g^@NB:>,mF,\>El%do0mui<,-/hr@GKPl;IN;COC65D<6\s>S=%PIg5l`/`moE>BfUOM8-H^oc49^K
%==k6]='?53>gDpqo[[)r`FT[m`Q9qf]#Y:h7"FB#hJV;t`Zgh)8#/W`>=.eCEu;Vmad1:8LBT&YoU)=D7$]27h9BCQ\oRLHgAJ^j
%-=W>h8t!8)V@$u77]ga[WINEeWU.Q1b7f@?2YUbXZ<;%0413d2m@R^ip"'/G21)=!<+5BGHZ.6[Mm^#p[75U1qY\<O`F$n3.(0d3
%Ijtfp%]&-(X8$T"I-j\"X]C>Jdd<Le4#jG3XqKX.ZO(g(q[2.h94pKTT>X/P:SO'!agPA-SWf'J)KP1gq@[G;^-ge%/%M!ebICTL
%.PL/@p&O7Ce^r&^qfmVN_!8(j].;M/EpHK4.Wlg#UuG\Up7f42\b\eUIKrYl3OFAVbXGa"ed)<.R9X<dZuDZ8=XIc]SDo:L55>=d
%cOAIGHQ+:h3I)u(:h`@G?RWrpVS=4?>aem1[0>^Dbqg[=S3:*KLG!j'37F7J?JD)-/2eQq`s$BFP0$7mB@c`HGi-fqq3uSX=`B)T
%K=ZN^hK#KUQJi=YJFe\WXQEKR[1-"BG?+l-"i,E(cSO[fs0U`R=E>.;.t;2gl94`dd<N7=6S,aqn[.n\V&)P*\]<ddcA=s-fqNo!
%`6P2GA)6s%'2GeV9obsPK>gX\Eo,6!S;kIabirQ-*EY&*H@o5?dkchSFrC=ZP/eN-0:k*sG1;='5FnEj'Sej*Ru@3t)n.2?VjQGg
%4qPWk]n6i5cO,-s&c[`NZb2O4l$9hN[(U`F]DSu5BcOK=0/f<Olu\/fqh6E_bXIeN\!st0'<1CBHf7'^oe=Q0@_p?'GWj6Vo.*ED
%`Hh0V13pja[.%ad3^2>u]@=H\Sfg9_g&:gETsFhOR!/+ER3rbd)>BX]7pidH*T["e:;/1bG>JIjs!PHH/3YnGbjKRJT<MhnLH9Oq
%jtVqY3&gNJ'n0!QmL+-%J8;m0^cn#)p(uC0Y3*D.Q%#WIh(G"HlCbcXh+$p_VFqC?h,mgpdFdCl=RX&:f$:IXXcq7IAuYb7"m.^m
%n.eEV5QAbeSS,J(Io]et]$AU)aSrPBr6PC_:De+P),H<59EK]3Q1=J`g6t7&b'84@*RK:.Q1=J`B//mG<#JJmEGSn=Vb6J'B&Eqm
%;+C(KpXR-!hB]>k[o58]*>a2c4,'4o@CNMj=]mu`lk7b'6T,H2pp?eu['LfpJ*LA:ClD-Z40*SJ^9B+;Pu^XPm`t+$_$p0=_TqH7
%ln1NA[.?;X2Gc$E"7K>8-\dg.\@Y9qjk]A4mWZ0ZZKL9_RnSShkbLoODU9>OFGhj/@qMX#4`Z=;XXnso\Jp^@bZi$=M\A#pac%0O
%6]rL[mXR4f?6$dIgh-mONA8&Y?ld^F>TB>[*9]SkNPcbI!j3"D!]`.DK&@&N*f%n\Z%msXhiLRX2ZQY"r:%>IY"8WR&8-nECbT\t
%"*\<n#?>Yog4(gCS9b;&+_X+EB>An%cC<kT6'$F'c[^;VL$*I1N\N?,12m^H+/^:.SJW5t:JZ!rkBIH0a)Th-F4>ql"qRiGNXn42
%FPJt["P&brY+BIVL7RM*\#l>,"_l4H*Y7Z.K[&bf.'6b$@e[t.CWF1&Hj4d]#.AR<k#(H)ji4QKqUtHZhkW.")tMN$EKX$Uf;l!D
%[aNQ2K[#Y.NoP5Xh0s\g8@qC$DZXU]&+0_7jm"@]+*YOM\@9d=7`gWDdR7H9f:VR9ctuJs-/M1N4'HPeUIWEk,t-+oHj@e*%;GP7
%d%hm<G!e<c$6X8_h=`5:S,7D.;_^gHkrs?;V!"mEc[emOlW=4EP4WPW-OPfg8pggK+K#i1hh6RNqUHU)=M-P=*_DD@`*RrQ#U"V[
%DVM3mU-?:EALu,IRCQ\O83$;P=]6Ej?j=Y_He7"L]-3(pj;/mW@&6Q:6qN:CZVi,[U832NAu/2@6qN:CZVi,[U1B`6+]c`r9U$49
%0rdN?b%+21Na3dS8stWp&f24!V+els3C1R76`cNoQmerg@$m37)&&hk"Tkfjad=KUTe">Z):M!ajW,jgHXngEZ2a2tlA+Kb4?MB-
%1:^2-C!fLpog:W[o0d>)32u#^);EtLQS\9R7/U[4e":M/0P??ejLODh7hZd<iuJ$2OeZ=jjC%Jh`O5&4a#U$J=CKe1pWKC[h^_db
%T/Ib#4a^leIp:4DI58hJrEu4@]<HV"bNN?]XYfR=gM>7O_l;=N9`$JT"O'%I29nM*4mZ5%ENutsQk9l3A?p&qH06qm\qf+q8*B;f
%BOnmW3,`"&V`,Sg,aMt?..V#6HTNi5MbVgYh'2`dj</ZPS,$<(<r&:[r:LKtlFb^6[qQKRH)pX9D]VsYX`YuiP#L^3$3*Np)HKI2
%b`njfpd$:b*kkDIQ(b0UnpK_a'`2.fm.?2.[pHbuXE=G9/^a$)NXd`:MQ*Ed9DsfJ0;gS8:=:pnNaL&[:"3fRe)uS&UspaeF7Z#\
%^\SUn?%up;9K$;3PP?&_nBZ<RM%er"]j@W9g@*S'G!S+":?B5G)_Tt$B>%10e=(P12-&:Ep:T#<:[d1ac$l5:I-pVgQ+()b[IX%a
%d:r9CebN2'Z<8QEeE=?_jp1hShj$[grUj,#NsqQ804D3XmA*s0rX#U$**u;<!^KJ+oj4C/?M"3Q$CtPk4C<Ke];7uV9Ue!a%K7\)
%9SDSYeEpo&<;``f*&&OTjgSEq#0Uqs;lfP*eZF>q^>#bbYL\92`_'h);`E>.s-ss9c;aYRcW4[-<NQ+(YGUaeXo=qQAZE0+g]'3E
%$u'G8'1PTbO?\n&Fl^<,$MfG'Sq?ulo.PCCa.Ih@n,AN6V:8B-r_Z9f-h,<cM8+):V<.B7Bd*EKHf?\WdbVr2k:n>W.XSUf%t*@8
%i&tcQ8p9*Rk+.!&g9h<lA*dh+3&R&hRO;COc\]CjBMBsiq@7gs?.WXuO[AZ&AEoUY5:Qs=cbLVreP]r=,'ue.@d&u,/"/t_KhRb\
%O;%j#T!os_Bhf="#J)*4O^?C47h[o9A<"u>gN#&Ih.Ko8h9=%J3FC`XQ<qBb;S?_l^jih-HMWT5hm6sPjhg,W)`0c[T'lTLeV?=E
%lm,VpPMT2GIeL,9r16'@hX=HH?T13]4^@mSmpC\ONY+En0`Ir+F2knjlE]ab+oJ`[8@h7$"dqn9BG]fA9`SK3J<pGtAH@$Y!+$Fk
%QNc;Y!I.$5?5%k@"lOM(G[1;U(P(*@i,o'F/OA<;e'KeQFRmL"_@qWNPSI=K;[Q8@4>A#M-3W1U\/Q!&"/9ZucjbfA!?jB*`$GG(
%=[64-&=3R=AH?dR5[5'9QP)^Ae-r-_&X1gG9f'naQP@Qg'mn#;=9;X8(\3<X9:!\M7hBkRiiYW'<J\6oEE==O.`>VH\8)Y""CX53
%l37CIJ=%8eEW[M'5ep6KG[$U^.g0ddC8smZ]k".aUhl_tL^eUZe5Vh^U'%!]Y!CJ;kV?LPNGj`p_l`H:CHOd9^^fA*5b(i1ZO1\Q
%+jMRU=bSi9&8*<2ENN=]Q/S0D.11*,\2U'4,T1D`b8QGCMKiYh#VEt1Jd]s0n7hr1<e>rW/)>d.i^Z,jo0>FBLkc`8Q*U2<a0f`2
%frU[CTeb<&Ba0dL1>tV&-PkLKUG1s5:BTNh!^'2-V[;iL!M1XRdfan6!)FWnW<#7AJ>`YpeGuHb!*'-"l3X2B1^O9-:rSkL;AcK[
%g?V.41^jdHd1&fC_otp8[/dkF%.M5@8ZM.L^B+DD+!$%%8*'X`M?G:SMO[t2"0r(q2?ClG!8.JtRfHt4J8>:KXTUpJYRi[j6DnL[
%jD^TA[5l^3;HBY>)lq`g$\c\*'r%csPS$.u6'MsL)*sK!6l?#iFXS/-!4/a<KFB61!cW<(Ff0-Yde9Fp&F>ohrRD%UehD]54eN85
%11don0sN?*+i_FPE)\gMJ08%rA4>KD<[7[NrTJcJ59fj"!+\#9#+Pi_2B^'HJ;bVl#_J!Xa9[BV!6@W]+Bt_G&;Ab5'T;1uGq:P/
%Bi+1k6T4ilr?)$3)iCe$'QF:sSH?o.d/`0fm1`*8$KO8P&tYR+78\VpVa/C',T^qo!f/q!]$nt*EVn-&'KkAIP3dt.FOh/KI?nb2
%,"0H,TFp^1&7n27LU@0i:k9%RQiLYfJI:I'"d5M[=jYEM!=*=8JNTlE!+\WR$=lI,;P=0&d*7Et5=mWKX(korW7$E2N@MsQ;;\<q
%/0U"p'$ZOb#%!E_)M9#mU'aIh"f/(`;H+egWfRop8;\l>72:u[!a/AT!T]=X(!):?,XqqmURMpL4@s;+K3;YV%:lFR@7+2KQm@ga
%OD!,pe^<q!&`,Q;>_N<[6@r/;6)p"h<Ci3$,Y/X_U^@B*K`nAAJlDb:WfS?'8<>;H8/2c5$4'O(Os%"JD&G5tidNe&F,)QM9tJV^
%Jjb=jW'Ys_!'b4[+#V-#)WXBtntQEa;2+qH6@Ml75H9ee<QL4Nj@9sUUC-cn9p-T\V&=pio2mCr2Im"SKs">CW:q-+K8c`8b<Ndu
%R^i>1(4a7/&7Q%b;1jh+5t9?(,AN;P29:RlA4-k^U';H399Kl]A4]a&A$KGZ(00peKa>>S.VlKVd"nN_W8:'CM'T!\6[mN-5AG]j
%29:gsj@9[MUB^Nk"8o)`Iaj$n,2bsc===M,7:E/DX;(b#C.[t@*k[6.>O/S*94p/MM/I1h`=3J$)C.]k&u#jA;29h'6UK9G+mP.#
%F[1aD,X`(SU':m#K7p0h6I[,$C6/ua5_rU<CIKd9.+dE8UIBB:Yi;@fMaiAdBI5T]&;<nkp'sWI3i#(_:n\Au:kr#K6RpS/($^;V
%F\%3IUd?(uTan%uLK(3>.b#UVl@967,cQk6=@@iF<obj#0$jnd'$r?B,%5lb"F;#-aG`/j7Kf(j6"WNH)%gCK"ITi&B%.t[lAum+
%^l1<b7NF7Z%[g1LbbtVUe<=E4;qG#!O#=S'<"7/+l>0;N.iACDK%,T!2'P;F#Z;n!e;,5),"R\!:a:SAL`eQ!5`H%I,D+F$+>k?6
%N<i?*8p%=o#ICC,o;HBFL9k!HM(t'/mh5L]&_Prj7Z\8qj?s,1&OB/[O:r5e6j,L^!DZ%E'+s:n"?6uZ:.10W&`c=_3=u9e7#;gY
%Yo7(K0l7esTt:E\OKmS+FL0O;d#\qN8;[To70A^I!D1[hUhE"k1]SsCO;&9P70H-n5uL+4'G2TZ"A'1+;FF*>U8c:7DcUFBVY2>?
%UFWZV.h/K%h*G[XKOjtMY%7mu#,F]j;PO8kd=B_[5\`+u2&_Pp%7#mWUdbGaUB.=@JCJ6tC,@%j)NYjH5`J6re;.YtC*4sgABKo8
%TaIC'/&3u)"&bfnWR(cIBL41*+VgH-$;F'F-D3[-;P=,jci@$Y5UnT5'cN/@%7l0WTL'kp.b"lcUFhlG.>r8sO^0=:gQ0<CfCa3i
%1#i.>aB+CoN%XnUB[14irN(7YB?u3Z2)<uo[EFcihm<1#cAnpf#@jZEIPP5Yp9X2bSiplGmo<IscVK>(LMMA@K,R==iehF&f'<a.
%#RhMh9gDqq&=3R=AH?dR5[5'9QNb<=!HCOn>S@\#"iPNaEEth7(D,1%`,u*#/O@>F"I,m2:H)k(nt=TF9T(7R#,aPB]L.[:]Es-J
%+RTGeh12FC&9J"`DEu9;!HC[r>S[m;"iOsQEEPP3((cf9`2+^k=!WB=?8X<+dp0\28,9Ir46K/piiPMZ<J\*knQ$gi.`>PFGcMBo
%%H<?ig]g1$J7'<-CBHn?5bnhp1eJ<lbJ]!9UPbWl'>KsJCfqAkdhm:'e_&T<m*@(Z3?cno3RYF9"41Vn^)GlENJC`u_:EjYA:P]=
%=b/Q5&8)a;X?rFWLpIG.<[#a\P2k66$V'D(VJD>gF[&;bF@uf?DHcc!O]YY`H%a<Tc`>':fj</gO?oB[ck'ms28EAt@'^IcYZ^3#
%eeULJ&YB<f;+<[fLp*&^:IVEtj!u:QXuT6!&i'oCfK'?\mni%0B`KPU!2U!p1]`gfJC4QsRK,q^5cFi621VM-^si@Q)Lt`gG\R4T
%4[D=b7FJ.I=uVR;/KIrCAt-.?[9&RNb%u9H\9_W#!Z4#e/rj%Q(Nd%a'nEUgkeM"!.dg*+HuO,#nCbc?86Z(.'-M,nUeQBH$'7%G
%dO%658oj.TiMtYE=-bH^Hg%b0=a,oqk1s`VG]a9F!q7B>07r[;#VUf!+oneVAV(9YFe)oB=p4om4R,\>!f656DZi&C*EmqM6'-4p
%f9dJ=-]XsZm7p%HPR,@KOJEfAS]1id![)hb0]WVr6cNhkrTJcJ5:Z(s!Q].R$oeWHCd='o!#\(a&Hit;O:_U5!K`9D5rL#h242f=
%@G0QfD3"<tHF0P7?;huOH%%C\AB8QoUc&BsRf^^Vc%uM"5^$'K]t&SF/?K%?Frke(CB;NMUGi[-OHh)Z%dV#S]oD-.TrW9j7?tsP
%,t8B0apb.Y0H18[C7mik;]l*e?8/b/O9$(eJI:I'"d5OJ'8$n&TE8iSon$Ud+V-&a#SkF6$D^#71PaOG8M2h21?nR6&2)8_#M1!j
%;NjPVE#pj=^'4m?"U(bj!`U<DWfR3\8:W045SXp)!ZBAXHXS$a$</,Q.ZacJaF^!:%L"ja)Uo4t_:a:bZDFTqR8]VX+k-*E0Zaea
%mlTQ=%G=P]CoBZY<$<3\O:>42L+6Ru'saM?fh_igW'WCA+WIGC%9:K(.UYV$8N&E0<$]16`"7nbj>c]k4pF&P>@XbfC7FggENt7o
%Vu]fG+=V&e'K&F=)C.`\OJ3(R;2(gE!`Du@.B8ID<Chus,XiH0U7*>V)OeY=A?cmr1Udi]6)s3dK\OLqH[Kn;1_/$(YiZ&;W/6Er
%@FZ_Vq]OC=)Dt'F)Pfh3:nn5o;1mAs6#+ml2/7X[[3V^`+^(POhH3OB:;Edj>\Zb0&J7@iJiFhj(Mh*K)W4!mEhWau;1kC;5u,o0
%-Ye_V2.:2)3)L@?L;MqH=<.al6bnO^P+8IDR`aW@n>aH,O9l"A/EZ4'S7in(Fi]D#i'\T+U(01\LRb;1:=K:llAuZ:aGChn6k+12
%#!#P5S>\_Ke,Uk28TLP^2*)Xe7=;fXMc6RB`Lde^3oiUJEhNuQ:kr;S6S?k3([@(iFhi\lj?al-TanS/LKpcF0%;$\lAuBr^kI*/
%.mqdI/D1Lia3,9rK#eE*P(+0Yq5m!se0,,B5_99)+G(kp+:05_Jd@I2%S9KP,cCeXe0,.`O9B\sJiY/C*KZqc,RGXs/'s)(;(O>Y
%csU95=C)R-,b9.GEBm!TrXb_e"R-F_qEpAD&>VMnkRTuU6]h9YTK`SD%mg%ZOT#fe56U0\,tWSgcVS=8$Sj;nHBQFNCg(rX>LlNj
%%VKeF;"l.m&S+01=V(TL7$%QaA3g?$&4%("J-?Nq5m1=%!>\(b"VG92"Bc:%(.<ZV;3EJdV7in__F'M,7ls4%ZPZi5pR-#\c]A5<
%^ju^N5Qc&"!BJMW*,#<^1a!#IaFOV9+G(Sh+9s+3JI$9=!Z[#Zj?Nf#pZSVF-'Hmi3b3-TY!4aF(E/AC%EO5-i'INdT`M^NJ6ZbQ
%/i3PE)NY=9aFsiV63D8%!P-R->\HAT1]S=18TH!*hWWMsNFLkZ)HCrW#O)Yb\>F?H1+pY0$VeEj-KIK,EhNfMd"GY;!\Q;P(E/AC
%%D[Z%j?`rhT`M^NJ6Zaf/i44&6:Fs]KgS24]kJcKT77NW:L$C))eR]a`<M6EF<P!ON\Ics3$UGQVsN(j^#-0Z!QQ(qT\HHI4SI\n
%cELs>39-g4N\F^ep9X2bSiOqahX=HH?dB=>[>/OI''!2.gkWioohLiR>uN1>8g^i;gSogo9\k52hOV[P#=[h]=m-)nkQb8S#?g6q
%=m-)nkQaQ?#>OCe?0DN!kQbDW#@6Nu?0DN!kQ`]UI_b7bgg7">cpODo'%53Mjp*?g@Jm\MG&+;m]PEM]$RY3C"879H]>/q[@)*7+
%+T;Ruh\=G("S?7+I9AgB(=8BOoOS&O=[6=d&:LA4K'@`8U`5Wa0WJV'0c6%q]Pic;\-;t8+lFgQ>_R^/&9&?cY!To]#WRE\)\?lh
%U2<0"%>_CmTf+%A-paNr+D7!)%;SA'%hisn9X)1F>K<_^_&:$>o/5%mg1rgd)@s$k,9d5s+L2>B<e\Vp&6T_lX$U>sLo^rG<>%\8
%X*j942\YM3*jR7'"<`#JG63K<")G+2*0;;K&6alA";d`3!I/;b0"eQ5(L;q@ieYn_n[Kba<Q%t]ihmaIZ35o^-<!"5U)T8i\h\gf
%((&:1$:99@>Ig=aN<?6_J2IA3-32U"^mY7*'*)eL?k!+;%Y3(0Z5S6o"5%>g>Rd@,!I48?iC1?'ZjbEF(!C_e[uDJaj4%afVh8+P
%?,se#&I@eKO,a;Gi+kP<!4,03@HUMWULCsC@U+jDJ?]D72?CfE^t8c,RfHq3?u.-FZ)L>&nY=:.#$rKNO!Q&CQ>87`&&7."?um;j
%*0>:K1'/RC#VpuS,7$&V+<pll%OHc8:j.4om'I+Mfm2)<Xp%)FO5;j8(.5J.C4]7q"D.IL:8HP!@#DX]A[<<EV/[Ze!5tH6%/Ib`
%O)aH'5<9@^7i,Xt;=LEe@C%)p#)!foL_5:W6&6,+(dWriJCmC*@a3CrH[eK39Z,Nn=.-+EaZPo#hNu4_=b.j]H,*7<+j2<rjqPmX
%$7%Y[-O-(BR8/<4kBOepBdEbbo;F`V$UD-B]lCi?X<br7P,]AcHk]SWhKG'bbHea^,uL@Q.hg4eCn*#8M`>63cN/dO(t,#Xq+lPE
%W'CQ/EjAPq'W=8,F<"]T[#bD*aFXbp5m?hPkEJ@"T.CSs'&<hTFjmXt!Bl'D0(Z5&Y3H3O:^%i;64Qs<#HEjf<QK_@i'8#tTE7^3
%EIb;[L+K8g)H7gi.Zap!V]6%aP"]OsPc7GCf%T=*Ur<7N+Xd0s3GuI+BAZN/'rm?&<Bu6fUd>eoTaIbqKiFuP.T@Q+WfRQf5_U\`
%65<Cl$E6jU<2]jJ<0O+E__`Zc]E'be]*DNM"5;S1Fd3FO185*n;$2cU5t9?H,AN;P29:Rl?pk_bU'_c8"cTBH7T:NUWfRfmaG;<R
%6o@P*[.(G6/raC#Mk8Ls@0)C)QX5k1Urmkgg_2"oLDgD<9iqN"Ial;9TWeh=eq"BQ^lKDp7h,$a#5D&Jr2;o1e0$tjO<6?qO'6T%
%8.T7KZq-$N0ia3j&m<cp`UQg7NRjO7WN8Bte0$P^J/L5cN#H4r%5O[_R8F(1W'P%FK[h5R7SQu+$L:&fJLIT2!AeI^18BDe-RQ0V
%8t*ouHFQJ_H:O<:O;W2^N&k?9*AXB"R8Ja`W'b1H!Aj#&))]Ko)IQ#D18>&A;1m)k6"\UH1MTK:ULbR3Jn[bdohG)jeYF947A_FG
%OreQdn9&YF;25:R6\<eg60aOSF\%TT,Y/pgU^dZ.LBOSDK%'felB!-28<>kX80&>=%L>s.Os!KL1oQG:)O=-d;O/lY5,qhmliW?_
%\5(B3</4/H6`*8%.1p)_"ITlgVF6Lp&R\3O18PJK;?omp6`/?V;sKGnFi]e.?qNRRVF2n779m#!4GI];8B3^T*/e][4"CS7,_?_e
%!(A)&OU+i1JeX%a73Y!Z#Z;q"'SufY,"Rh%;C$i.M',525`mJB-)>+W4%9q%0UX\*+[^De6/=PGg0eB[o<rYDL(oIE73Y9b#Z;q"
%'T!r$,!_7r;C$i.M#]sg8<F0U,_?_e+@RJ>OXNeY1iZAlJuJGdHHN"_Bo5S#n<f,N)i;RZd`%gL^2]._O>%,/Qj+g0!tqI3$.FEX
%B`Q",+CQHbQj=6MJqSt'@3S70#SJHcKS^=!Wlh=j;5:.&Weu"UM^u!Ao@j[EOTqUP"&Pco.FN_\Bg@P4+@R3!+q7)*#,Fcl:o"+@
%dXW$G5`.B@72g\#N?fs9q!B6EN4Pjt7M.S4b:uCfb_FAfhmccUDDVAQRZJI_aGhP-7MBg;$+SB5gh8rj1]THQO;eYMN<\H5"*1.;
%\C!j1)`:&cCemT)dZCS[B];T@L1)=m3l'DCn.%57/'!4\J.=LBEqWT%B?g<:HQI:=;<a+A?(U?\T%->R2H`1u)`p3(Yjq:jT69>k
%lkt)`=(-M?#9MG;Y5JZ/U54^@@7QaP.oJ6/OX);2"$+E"R*8mRH.m3XTElP\$QU>t*?Y_1+:B24$QU>t*M<ZYTEuX3$QYlJ*M<c\
%TF2d5$QYlJ*M=_2!L@201kJ!5P(hQlYnF"A0I3GR*ii&gL@2T\]07iB5FAYo%+kplli[FaJH<BuJ3@;U%PS(a,lrKu^g@lHQNd:u
%!In7f?P`-t'#Yk@QHft7:j'@.[niR&:G0"MM8]A2SKEM-mMa#LKt+/pG89,?6JPRs]*`Q0+RTNPDEu\\#eC$k2^%/c7,3<CUEmml
%KQMoSetAEDo-cE:]a`1s=LWpXSQJe.:+>cSE'2VNkV?LPNGj`p_l`H:CHOd9^^fA*5b(i1ZO1\Q+jMRU=bSi9&8*:TS9<@]m.48^
%c=4piNd0.mnbY<>Wm4)b?Lg*)6"hFM&6t#DJ6)jJZ4\.)=m6F/(-gdjT*OA,76IZ-YE[#P5-AJW;l,AVUL&3Oa\3X1FPZUsE0W];
%F1uWK2#sL#^siLSRK-8"?toa:9n92D0\$3$)?<b>W+l<5%H+5e?o<J9Sfk=@NOI[3Lk9KD[_%-t7:YleNY]F\nV;,&J@iCfSZ`$(
%m7.Cbqb_Ea$KZi&'8=X_`^/2XkaDKW';0+BFA7:g$.(O1\lOFHRO2@T:nMK*[HLLcdP/5bQ]2i**5CXSnT,9FNou<&[LU,C!,MeS
%7M'A=_+"uP"MiT^GYeFpY58Z$WrTZ#8)<E=!4`!kN<a)R7-h$'.On,E.Wl(R<69:@FUo"(6=NW,>K1Z6ENlkOet2UEq8.<WE>i:N
%3`t-tRep$6[@7iIc[o7<&8MEQ7M'><Yso:?"L1DrCEl-H&_<W.8a;&P\4tB[<OGQ$9O.iT,#ko?]Q.8u'hE_D0+EUT17nWI:P%<!
%5k8u;U+e'Yr=hePY#c*+.fm_^8)<EC!4i'lN=$_I,uH#=9V"ci]MPNq3Y^eVD79&"kD8/L%%5I`T:qO'<2`&7<$3&.O:C$9(iYQH
%(!)05,7[?S#uQ84W'EsS+=DIf4gb2[P+lM9#!I\PR>O;D-3#(Hc7E%;*8$EYW>-[HqF'_EpV3;#E&QkUG`<uq?WB_:TJ5WQkgH0r
%qb(gJ7Jio"&&R%rd?VjW_`92ETLbb#Ko-Qo;Q*-;,)(ouFQ?-W1uaa1VBn#URH_hYn#=7/MXpZ"3eF]nQQ0G[a"8K%0ablJ&>N'\
%688hd-krFAN']6+`@):m:lI^q$H4D-UHjcY<K-$6V-Z/5=hC@G4W![J8R8Z:;lnNiKm"0a;.2tk*L1eIg/2QSKcPkj'\ZDl8"grW
%FqiY-BLdUojea'UYI^l*MeQ(''C)C#aOq6;CN@t[/\\eO3>8qEAKgE=B3f`rL.>fGjKPE-N_2A_m&7:ddZ-p].da1=UY`B<YI.(F
%F/3_j4nE9\3qT]VaS'FOkt%Wq'ol6S;X$`K,F+9g3)]!34_dGG;NIRBW#C`&nYdDc8A49/8>XhBH`tBfS*`tUd&g3(7P,OcB[ibR
%Maf9:[:mp];2\$u.^Z/(U/HnA/Ln0,d%]CHiqlppWnt!2)YI.1fQU$T&rLFBYL_m\/j28P/E4%4_3.8\)D,[1UsY>09,]Br[%tO$
%7S=XOBsa\`Op4S59hW4k?'&eWDguQcfg#$q>Q=DBInPPTipF1qI+5b@3=@i1l0tLtP>4n74mDU7_imPc)Ehg(UsYAq:DuB1oVB<e
%G12Z4firRBoREJ&!-5GH.&491[ZD+"kk(XfO%qo#rTNmKduOu'3rS:7UVi-f5<Ac,oV9lr%R9ea5?\A#1IBQH"8CBQBhRA8\29qt
%Le]0UNT`3ndteJY3fW>[U;Md^,<ChJ1nrHT%O:gE,F7[o7sEjX^1b2LqpTlj5#9Jc=M\ZT=kMuZTH=8b%/M^Ba.ON,ILQ!+kXVNm
%*I`,,dHO0!+.[k&psH:2NSeZQ>5UKcn#$(U^\.sCq>6*op/q'4CW.>/A5J?g5m@K1'P(%%5sY\X)&-UXO9%WO"W8"b:lmt/"p>f&
%"o7[@/*aM(JINj<X)\Ue0keK,,8M3&d"mBF/2Uge&VEO])DPX<TFlfG$lUj6`./H[V@cHMWSTA;P1&VPUgm\,FT(D8Qk"C2A3-_R
%6M()P&[@HCP*<p"f=q3bpUBP),!"QUkg,4K[#GgBC"nI)N7YOpc2,)eD<(S340SAdpNK&Rg@*^Ds1]@-hna2GK`7R]ZsiZD17f]6
%8BquQSIq67!:k+0dW#98E<+F,!7GiedW#98E<,QL!;&5NFrUKD%Y,Q)^lAM)`rWF)!9hB(i4f:b9dV.-p!2GJM::(%IcgL#UH--`
%&8+I@`c3Ch%)J\M4:&c5&3L*3,7ls;jl$.Yr6rJH*W4C&599[N_*8t<T8WVS.;qpIGm^Np^6=!J(26;"l0\CZ1]Z>Mk`89Y^ot[0
%`%T%^`%T%^`%T'4`:'KDKHF_H6m!Zr"<Z^m(U<;tQ(<?NmIum3Kc89kBDOBI0EA#!hfRaoh9kKt<d,;cSB*ONWK=*@WK=*@WK=*@
%BtemClWYH+IMLAe<m#hsD(1XG,V;^aD>h\)@FmO6Wc'R9BTa]WZ3G+KmJ79UG5_+@qq]S@h`o#&be?I<IAbs#mr&#6ruZ/t)u'X4
%(@Wp6>JR^uDZS_s^&bqP^'_X__@"3g`X9cob'&p<LJ>rq<TE=#f5S@(J@+;r"7+%QN9eA4rT\Zi!OcnVZ@2>4Drl\IIo7NB^1P61
%!Oi&H!Sdad"`Ok-(;P>O_Ym6OPl#%$r1\N)PT;=Ud&2;&@0U$_?3ada?70&,?70%a?K8FZ^j!_1qJ.keO%gPu'o;bL3WhiS<;0`P
%6N/HBW=>3c0+Y??Ho)Xq=c%hEJf0YW5[O8Sh`paPc1hHjF$T/_c[75cO&,'!?:#,gG!L4;G!^@=G!^@;Ngj\P;sM`>%NrIm\6jXH
%U(6Qc+0mg-Ei.bq@\uJhiA).7l*sF/NDF<I1+eil\WN9DYC-CrCt^kUJD<*8H*BZ]2i[!$l72;\+6>;BASFj3o%)2,G<do`Qg))H
%S#O"lfk&ki;g4YD)kYXM;0\MK)nDC9=t22SH(!+([,/sreG[.]^%,HhlVKotUUN:/o2f/Im!2NJrhQ;3oGJ1][%Pct!Xf>e.(#Yo
%JjKhP/1@l5V?TP.VA#j41I[[F_Ft]I/5IR@dtLgrUG"?e[m!UdUb8DXfePN#10l;IU!SK[(CFFrFJ6L(65Ku7-ubm,KgHR_>psfg
%^kHgTKf,IrNTXJH/b<XuoeX,@'iLUo7YO;G)Gsp2V%Jt^<#SVJ7"l5,7MHb<?pp\#Kglap;.r@K&`ol%__b$"K9r]oS!'-$*G9V8
%g$&TaXDSeG5O))G_N0"DJ4Boje:9ps5:ZW1oV99a8j=g(W:Zk5Ns\,:9g?WVS?A4Bmltsggi&X!?&#Vnp)OIiq%Q<_8#7:BIT6/@
%ksqQlQ$u^-;<^S6.RNo-O-9"2$'1hMW!_KR^$3R.hls#%<p1PlqJ;q@A8ArJnXJMtW^EU"NFF`#d3qJZ(l_u]MU<P9UDT8*</=C#
%7\pre@T84^+\'-o`[JUl>chA-%eLh<7NaUhQr/[+2R-Wthb;PLUHsr14W=!,e>#m%#!EmtB[ieCO%)8Nok;jM;3(oEg<EMmhm`7O
%=c\r8*k%IejL2]!qf5UC1<&GgUJm+H0fm;;'Ve$S7PPh#BFpq9N(,N?`Fos\6&]tcN5a["X_WVpD&!!0>K>CBpXO];s&e^;pV>%(
%m8TfIM,#?XQ0;2A;i(u13gJo.U-jc4,s%=T<2*<J%OLsG-%;cY;kI_$!Xc>[r(=BRi(:Y4:t@A0Ai`$(kZ"<END;>le`]u-;iM8E
%3n<FnUI1#92*0:O<23BO%Q4)W21CmmdI6SPSB$T.&PL)3`$rZu'E_5A8hha5TG3#V$qN*$7Agh?;KPOY.7L-KSPjQ#d;MYIA*J,j
%bV*2l[$[YrAkpZ2puoENF::NQAbUds%*C:Ia.OE)EX^)F.*$iXK5qCC0d+N0*.r8?atY<bJ/mUL*95-me,G?1[J(X:Y2+LH[=.#5
%7@.%+Y[X:@$a!NE`Bl'j=>=L.TG7Q0$sGB!`Lmru<X`(bDHbFPU08QSATk(JFUmH83ZLMKmG?\n\ocLZ$.Fau8X\I#od#O39\t"3
%:KdS'YP5Nn^QUTWT=agcZhaU/5;jRjY2i<,I8/.+T@^Ph]YA<MomYm!Xs?g?4koH*pJH+B<',Kio&PpYqAe0A+L<Zk[d*Q[]$(8<
%NrtK("-ANFOH'F)NWYB'"-ANFOH0L:`rWF)!8)8klo4ug)ur&1J/nk[0-5X&IJ$=*JbNCDW(o4kp=;[0Se@Xk\8]_->AKeR`61+M
%Knggr'S6Q5GRT1Z+F"$@#G<(7T7_VSpnrao3r#V*IldA&KE$"VJ$uqM_65kWBqKX3>B?,$?$,^P7PkMMOa%c9Q1Te&L%L)kL%L)k
%L%LZ&Sa_9uKBRsKKA_C;K@p,Hol';nFh3!124'f#L"T_6"eJa%BAj'^[-ss]5=0S>\l70#9EI$Pc3,[$/-IL,/-IL,/-MIr!Y3JS
%Kl?N0d5jHBU-:4!F%Tb!i\qNiY5nkZ&gh'C-=fqR?uFjU0XksBPi)Fup\cmqkNb38hfnAAs8'02G2[_kYC"rMR\"0$\/#]P.qpe:
%##H)./3m?gZ2eG:ao[e.PQm?ZQ3rudRL5PlSdM-6&a3;hBUqJ_g=CoUcIAr+Xadm-[>_X!gF?qk.$$d?\0T;HYFYb4SGVFKh)Bbr
%Q.Lc\8JPY5R_eh(lN5W@X:&,HYV'<h_"tac3dqmr3`SX$I-]rZ-HD@Y5f(OS%(o'B%_PQL::s?7::q(L`iF]AmgS'[f4G"(Rl1a+
%&GOFl#)qQ?m_@P1r4?BC:Z"^FS]1?ZT)NVrQ05O%&UbOu?a*k9RGU698Bq&UI<2X\Rm,^:f(5(D^R)$SX<"C5XIZG`XIZF5XQ(Mj
%=$>(BjDPL"])K]&:tEO])LWc=)%Ect[Ih\m?)I'kL8H/mn1ouiWOtpfbtk>V1SpFP]pZlSYC1qKCt^kq5i+HO=g93t<sA@.,<FH>
%gX.t4aLtA6hj:-BOD2RsSuFeC'kY$2;hg\uS=e<H;2:Q'S2m,5=pd"5Lm^lZFQ,pbeG[-27FUmFlYX^F-kN/49E>J(-kN%JJ3j8D
%"Xk(X5_)0%Af>W#DAle10[kT@'$R`@9(,`j2`58E/q$@2,@69k5i-EZ$T0?^TKn,r%14s@e=]Wj!Y#Jo.+FnTK0g"S2(6tI:kJfY
%b"W=oj'pQ)ok6:]C[6XsC&X(LI3-2fc=nj[\[".%3Gk_!U!eZf)_,^'[%Y?k65p8K.'TDlL-cgdD()cb^kQmYL@JE>53!9^XUiU&
%au.*&X)jS)K6ic1d%HtQhbj.hPoj-rK1ZS&25nlp;M.RN.Q+0STL+9W;hOpln/WD?&i!RA<3l+MFkYh5$SjT<d%F9h8e!7-W77J,
%K1ZU<;&2KNHIRX=@<bb+7qi5<l:h^W.W4o3L*V-:C3DBW:$;(GPHdu>"rS=jBU#2fL.3%!A8%4$;MGMr.V5QCTi-V;)(K0q2eAr6
%PC"\2a,@q,BY:hSf\>.3aHWAaL.3%!AS@=%;2,8m)J*THTg=E&)&d("PbCs/"rZ.FRdbr3+(XJr]kiDs=SA]VHrn0s6)OW$qK(rJ
%WB[<[SGI<jc_s('rXAWZlHcCnU]-5K1[*/&l;(?@g!E2X^ITA4k-RQl-=*P=*5Zb(cRCuSn=7@:#gXq^Vsk\CEsg5B4K%\=_K-"/
%D[N[MQ?l'S,l1,>IC<s!rcsFm3ec`2SjR`tiAlVT'V86J%cKF%k7jLTGY[3XL$'/A;g8f2q,QBbOk^_%riUS7+lIR#dpMj0k/7Y*
%pO_60GVA9oT_F&p$[OJa]qG+ihK*qfkrks=SDJ=5cf%%%krm@R[)[QfU,.,B\c_mPTN&jD$dUBFoNo=[614uj(\D%\HNER=]bg<I
%^jAB9"hb`E?I4$"n&8#iH%,WW(Z/%@`\#QFlJKg0XC]e2q?uSl5_"La/(@q"rX/="TYI0!K),l=0;uXYrdstSl7\gF\>d6+?EHp]
%jVuXUFcF*iKoHC[2O\j.Wr?URV8JnXQB#e-^ARtEA7OuIdcbpVg:-["J(sra99\Yie,Fc0^;'&2)@oMCp8,O<ARj<SokbZ:Dqhk[
%0APHMc"Xq*qu%=Kg1d08^>Du6ZU8tcF>]EWdXup2aJXZ<3ln4OHof?HK7#`$kC^DgjR"(.#C/DPgHj[+nog,HMran>,JTXF)9<2B
%#D!,*#B9u_#@Rj?QNQo%TM>aWFJ)A6l?&[o#O6E(IVtm/^X6D\nZ8LRa,jo:a3u)kRCJNlKt)iHKt)iHKt)iHQ+3BlK<U!0K;aEu
%K:mjer?CB")m(8[:*m<)M]/i)JtjXFp:thS<<dC":A^XJr[W'qXZL.NaWs\-iCq*T_Eu++_Eu++_Eu-8,%8[Ge*>=BNW#9Y:]$lP
%gJUl^CG4`Q,'"u3OsO;9<PWJ/0]9BX+)Kj57/-X9I&H6k;r;fah>c]I?hWq9XF(1ES^eqA87Tk,9JnH3T<E#CU4I*1CB<#gXp&&<
%\/'$8i#:Ngi2QdX+KIc.@&ngYTPGA.WfMl`.HT9Vm<@7^`MAjX?LSppQ1=T5bI;fU1PkbLJ[B@Xq,Uf-`[=bcrG)Vf(K:d@(/QTU
%>!TKGC&ulZ-IlAD>_>\3oLrp_Z`"eA3iG*=3iP0>3iP0=)Qs/CX>@K:?CScRCt^k7+PSj,JKK#/h1)t]4a:btn9;aX.C6c9e*fuH
%N'Zu@+de,_"mQh.q>E\,[>a"j2[AW^RHIe*H@Ac0pC_T[[0*fM[1fq][1fqMF^.=?1t;p+hmj]nDXp_(dZO40GtVXZQSY1u.CBmn
%WMjO=9W_lP/Q6KWP:F:?ZXp.R7TS5Y+.s[E2@_E;pW[h=m&9MMbPf$$QPdCEMY&2A8%tp<pP^m+Q79>/=K20g_dt;MdrCe=S"J3?
%d;kYDRu*F(>'_f"FIB#L<8C0oeG[/H3]ED>5-pW8$/_K[S*s@!VXoJd'0&eO4JDA"c4`67i&m_)18QpN.uc9cQ`7Ylmq%ApASEXS
%S*%%aGG!`,-9Y[]:2]cLD5/p5?m]D6:nU(I!egsq.T!'/JHCN4'IlqP5bS75$5=sdW'Gn8jf/CBXYYrdW;nNU*r:kX^c!#Fb"jEM
%L&@2+;p%lb5Ge8lne9/A-pN:\K^of!:FJH$qulSSX7?XtiJZS,l_dYZc=^u',G(F$GH>O\NF/I@3l-9'^'s(K<-F@rSu(7?gE"6R
%O[F^m#q@7"OJ#L'8dQsnW0ErAJpOiS1R#Ngc>Paa/Y#PBCN272)Df-<h:l!l;<^K&'9u<l3`5-0V%XS=<'!m;dLT+&U\6d,^SCWe
%b!.j_YL\3VnlVRHq8Us5<o>N-PThrAclbZM#`U#bMU3b<K*[G\</OKq6DXsQ,#jFr.7/^ooqi#nf9*R%Vt/`@LjiuX4O]mglLs:]
%$c,NfoV'*V7NWOsB_8"GLB\h=I;&8H_1tK%)LZ;kU!\W"+50F2INR&8'h=9sVA$uQ.N^J3[g^Jk9H?09kgZ;)LJAjNFm.2G;27U]
%)K]ZBTi$S7*?''6d%T:FiER;rfCrf>qg6=>mWfoBh)_.SK2)q<4QuF1dt:C+3^)]rT[SNg%lui:oUsZc:(KBKkjY6P/I$:GAj+0W
%H8Hu)Ma=99SDnUGcRD&Upmg>bMU*G0VtceAF,8-k5,\1GicC"'+[3Xi^@sFU\)E!Sm@*\2'<1uW#Q9KhK$P?44-^X^@R,c9,mKVO
%<+8[\!@7r8kZ"9DM,#?XQ0;2A;i(u1qFr:863D)(lgj>Ib*I2;34m<aaE1k+Kg?LZ>o7Zld"MK:#$i'f@DIR_(C".^FCEOM!>iaM
%(Ojtj*4'ou+55i(7hCl_Jh@JCYeYsH/hD*QTaM66=Q%&h$\L&?\1m-`TF6B)%(\.N_RNbfVNbhAr2]ggD76Ljk.7ZjpR[%0SaoIO
%FB3a/jnDOqfoh@@bVPiI[V[P\rGDG8,`G0?9%q"_D6,!VgI;ff]Y5^s[a49o2W!>S0@+sZE.:rpVZ!+RpKoVL^:=cNV53=QpF*o%
%D`!W;,g7I)&+\s-T+:GV+J0/7kocT.o(aE3#C/DPgHj[+nog,(K=i5cocj30_J@]8\,;kVJZL4!1P@N^(IAWf%jDMs%g!:4%cT)G
%mH:.5%bg0?SIXB<TUcSHl(Iu[U`GTO3l1'iFBi[+/Dhane2BM$Y?N+oN\\*p\I5qU\I5qU\I5qU\LY3PYm765Ta-tjOU$^JJbqmm
%hgi-o3#6qMXcA\$4PA7?]s#jC;]K""Al8m+[-t3d^I<A%]#3*i:BEUucK$P;/EAAC/EAAC/EE=>ErOAIdBWS\4S@AnD2QK[*<"U_
%bf"uah`BY$gC70d9Ys1k`dk.`>ea]FY2;Dd^\`<Fqe,\af6=a=n'nuL%;rrIhmn'(s-gngeG?7iY*)sYIsVEg_)&m5J7eo/!hKQX
%$[<HV%.H+C;ufo0<?P9q<BsP\[>S"Ba\tRhqL(ZSQ%'EklTfcs&To^oqR]MhOdSL\A6Ho`@2=%Z1s"V12[AQT3D#:V,;R^J[]c+#
%?a).j?,4%%FTLe0eci/4Ml\M3Xp\.2_4es^o.%(s=gPY/G\',u6?YV;6?Y\=6?Y\=5W2pk"I)FEV8"njo@UEiBE>\_Y4H$86?W=i
%-L,NjT]=VqGJP;u8!eh\,].$3AGq,Q$GQH;Tr2A>&*]R9Fk`Ffa6!u-l24kn%^L8^G-Z:sG-Z:sG-I!r(Znu0N@1<!ABn*k'BWd/
%6e;CHREE]phFbL]es'L<oeNqAl+QUYNF/RX1<hb@0E&9h=H?/q7i8?)juON+f(l0G^FSn[>P1BVYuN5/I1S!^\:nTCA;Y=p?g:D7
%KUF=6FCD$Ta!Z"KZsfgA8+`XmQ9NM,@\s_nQ+5g5FoQA@0tqrZrD%%6W66U]gXLZ4B'fd9<q=MBU!SMq)[^F1[%Yj$65p8J.(!E[
%%S$Z!Z_e6hKpZSm9I6iD:1\k&M=3sB2Oh2Bonr[<9j['JY"?ZEPgR<i9tq=@;5cs8)MMo?W_o]aTc+)L'WP$/7Y)J3C)![FW(*I!
%"_s9kC(,GeD43!>Pr0;%/IJf[63ri)<2)^98gPsPW)TKhM$bO9PpfV+5`%fR$C*#=U/6[J--Aq.QLm]WGK?8j(ZX&'C9Bk)<1tAp
%+&o1OrHAs+7g2H':n^d@8eigTW)THgKh<(0<N&`fhGg2g0>9:6NKV9p`9P+p;TcbN45!#66Db)).TEEEWC!EgPq#b3:oQcE.RU.2
%O4*Nr%?KN<W",Lf]r=>bkNTnJo"=E.7ZYN*gA4+F>GO*Ld=_];)GOm%U!\N_',jPX1ni?N$54m`W&13rKLun-9W7\Z=E?6,\MZ$i
%/:&DX-i1EQZbQ*H_e<#B;1SoT)AQpbTM^80"WA(g<1m*>"pGn[BN1X%JOTe]'PLRK6[ucC`dP/$>L%`haE\oDCK-s(JIViE($JVi
%;h7[I3YZ7,TM^7E"WA+h<1m*>7Kj\EBK$\$^KUKO.6ja.*:e0ncRD)Vr1*>!aNl;"Vu.P*F3;fX5H"FLnoMmuDos^q[2\hSq*Aj(
%)[Xi3L<s$QEgn96FJ.*6%L5$8k]EKHJPHG2*9_L;dt%u63Z[F+T[SHe#<Ejg=)X4uoQXRE.oQ!E<RL@ocSJHm2K!S()gH0RRX$9L
%/e#6Dke`u#K.[SD0]9g@$_8nl\BsJ,V[K%JFLoiX6GHY<``IiCgDo*>q+\7Jr5NlY2!"40&(U<XE'9X!.P[m?J.dK,$n=!1`1R_F
%8dm1(W5O3!K1ZP%0rW$`&d(abRnD26(@5<L*n*6?5I]DGs)Y,N6DbD(S65!n673O0Z-\=2:(00<kequbK2)h91$HQK'*D!gRnilF
%bhI_8p=5no*tagL/n_d6?+\M^EkP\c`hLAB=dP.bcbfVZBk1e,fc'JP9XSg)H@O]K4'Ns&.;SrIRI>(k,NHW*b1?4:[k,f#]Y87C
%rGC<@qh=pZZ9%CICqp"eFX<qDg[hnsYH>Zh>eE"&c7I-aT+CMW+J0/7kocT.o'%9h%eBE<Y6T>7aP0#;%e=e)[tD=6jRj_m,%7=2
%O2pOEjt,@*W^uZm]K`^X`L\6>E>T%D6LZ*#O$W7H"HPh;!!N+a"93H#:C$l@i(jUWFPoq"rcI(JDP$X<G[qQS2f:,F;_E2sUWa$L
%$![a@#[@X?#[@X?#[@\kaZG;?837)=a?#,<8D5_Kr^OZ!%Tjd!8puNbjJ$M!l[<WaI\OUCH2:(D%.'XYp)V`_a6:fQGM9V18q9FY
%R@o8,KqO-mKqO-mKqS$+cml6+NX1-_PPpafB(&OEhpI<j#&GX>?Mt=*6qatA9=hp>i7ktSn87&Hn@ncKn,$bm%b>j*^@0R`s7pNH
%m"-4j[e9I!&`5UMm1IRbg/qQTX?I[E$]>n<#/D")/HAuT[K(+EfE/8XYQh<=Z3mrG[L0MO\dH)n&[-nG[+.3+k1';kVL6D?/,BG$
%&UG>HJm%Kk1E_<dh]->,VTu[AU+ed1,3rSlke<]o5du8]!Smgg"`t.9^=VSGr_00Zc-KH]e0g(7idn_>[Vf'*=Nc52K^=6UK^=BY
%K^=BYJ8DkV#Un#89m^^]k-8X\ciS=H>j&r%L[+l^ea%l8XnSDNF[`LU9:jalE=(L%Qk=*OXC&2<M4!0boXN-?+anF9m[H8p$J+g4
%)S_W?K<-)pSZJB`SZJB`*N\9FC]>mR\M1NqDicsp*1I>[Y/fOiY03'cb/73,ZsBQs14>K<]_P-a?Dd6JPrFmamBmHqO%gS6(Sprj
%3Z3+hq54,W"5Oo"4mt2\@-0=bX!6ETdk&QSho`jdSYZ':eX,O79_lq/C>`d?9`<4H9m\JjQRT^D"(j$%AT[5:?Zi$VVIM14_]<Gd
%'-CZ>GKrS"'VS?V!YGc.-kr@OKL-7X6mraXV?pn:VLbTO1L6@s_b;#PJ5-8r:PZ\?,X:;qQbR\=KR03WcYI#IOkutt$[jGqTtlFM
%*t!EEoV'We!Zqbt..j4KLI*'iI44`]d"_ZEb"WtDhit5"2<)(NZF,sC^Da_E5b?lgQBkqt/NnKiT,1[.BLRUiPu^jf;/&Iq'bsa`
%>#As%JJEl>'O"@I7A1G"<g9(Sr5O"X]m]a:B<=@[q+gK;Y283lQd7+%XWteWgJ$[Se:Q&BT#KVb%3FURO[G1%4Y$-'d%aL"8j+Zs
%W77S/O*X`c?BWnE'[MR*C%jKlkd[efJOka-;"m3\AZ:oj6C(5H.V5TDV,ETd=Xn!^8$*&"l;9)Re`'FY*q^^fWAeB+hr(]0^L%.Q
%ol?50MqTuA(pC>7Aj*<hV9tV6?Q+?,oVKs%7UI']C%S7MQO7(LIAuk8d[*R5.X\3SIAq/,o59`24%=_u!FoJG@:.)i6)H%>U,7bU
%-q^6_NM87cdO7__-k2n-MUEnFUF;+r1l0RtMGhp(ULidjf<G9n2O^7:1%s8E@SAX?eEBl,;iOO03n<FjUJ["?2&atX<23<M7Pu+7
%BMbI0/Ju58W<P^2.;p-VMDT)=3Ukc=%<4GVksU:?SPF8fdHO&s'-0hi3mm1[LD-4RF?7h67&L\=:@t#Ne8H`_IF(j*U7o\*jqQPJ
%Nh4^O:('*6kd7#3Jkc\7/a0F3dt1=&3\9L%T[SKf$T]m'Yb5>T),j.'%jo6\^$km11,mp$bM0,qdF;MgImO#:obZ+b:k&NE"nh'.
%T0n*'rAjQ6e=TZh%fQ2tr=uN`J,QO12*Ci"<bZdO;XX:OFNhd4O0!p[%%8kX_Oq3f-4H=sBYo9+K-h"q0OVbj$%jQ5RP8ElJ-k89
%#sZ)k.*nY9aDu("H*!YM1h"aa"XYcW@A*u89iu)G!YYc4(c5[:KL$7U9c,]qd"DE5`ml:'Ppa$Yj/G2O8k"X2f\T_HBPVpua).X4
%T(/-WD3)a8rb9;`jG;ROnSGUO5O88bql)f,I@S%E@;GbO[^"7=D&[2YnbSQCR31$>D7mQ!kOj#WhQH?Cq_d-3s7_^^U\)`PH<qVM
%<faZIR'Kl1o)Uro^s`<H*Pg,)4:ug!JEI$E*l..CD?Oh^E'&U)!Se1CH4fp&,sV&O=-<J1m/&lIp%UJOIek=')&']"5OBO6Ku/HR
%49iVh&3L$1!taB4`*X#NcTsc9oFpJeK75lFVh9FZkW]mJLO>H+d\$!Z2$:QWju:P62JlXRS2@PuD'jBOFWklNFWklNFTHV.FX;/X
%oH<`*nf[HFn0%0BDSJa>qqUgj*;2nAD<71-:l_tDn.r*nPQ<f3H`6hul],%j\@M]4?q%5d>_QDd>_QF:>_QF:>k:[mq2m_1+GV;G
%f+<9TqQ-LJT@qH$UotM(FGJY0])dkTM4'k?H7,g[?,'dAY$X@a^\c.@gIM%afQY3Hn'\iJfknLiheO+OmoVQmlm[A<pYW7NRfR(#
%AHBpTPQ`HC:mN,5!QkC7"%i_ih-hdH.W?k^.Y-5ATI"V1:Hl'r\gH-GCJHj-8?Y_3TK9qBj"`;=\pDRV\G"/J[VnA$XgfGE%r/o6
%[nO4`fG:\C450hF"`+S!(9i4jZ)s;Jqps>ZhmG_V->L9PPK$;!Z,jV]97RSY&[;GC'<r4U'<qYE"0qAg+CI<@0`AD)LHN"]**-J8
%S*M%2,u<?D\Tea&\;qV>ktQ_Llgd$iK^Gg&/\j">YOKa(+*o\Sm!mn4JG\Ibhmrn2+4R!t"<7R2!:0^P"RH9X"RH+.(BOR4+P1t7
%p:fD'`Lbs&cM^/^B+rNRaF1>N/PS$OB529p?n-,A/Q6JRB$4$*pn.gGdqtLn)\JJ:g1LXS[VQpo!:QECN7`^ES"BN"^@Ianq\=JC
%Q)XED*fiG3lOY!kp%N>]$T5?$Ot_#kl+Kd\AXY8>IH,r@5.WCGINo-I?OQaBl7^V9R0$XHS@\GR%JX/7XEO52;.d%^>8UcA*GcOV
%/Q=N]C,DX"KL-=Z9dhil^k;b&$;Hne_NBN9UuB0a).qSV;hlln;b>m<iGZqUn*!OChpu_W[(O63Q"I:t!X/oF.T!'/T`PB)'IZeV
%5bS5_$5=mbW'I$XKaJMB:i7beKNjua-QgiaQW_K*Mq^;ZhhArD*U"R.YVjC#W'm<l'hVFT;5ls[&f"#<-rHp2Tb7N$'IZhW7%k6I
%8e`[NDCVoeO)(]sNC`_.b%KM..AlLpk`#)P(?_>'or.MU6p42VUXhMa4TL6MPtG"*;5$C3&sZ'g.T*05KbF'U')aa0V+-bKXt0.P
%&`7h6fKeoMC)16H:gl\e$'ci:RS[EZKaF"ke>!G*$'fYk;$\5.i)'iuKR2+#en4i=lZ3un<Q\FcILF4*[RU!/gh1`$d="LY);JkD
%T@&'ZpF4mqE1bR,9(sdjVf89bFPh;8`kqE52uWaC:V,k'pfF7jeqh@?`)NBqJOTe]'kgR>6%K4D)AQpbTL",5"WA+h<1m*>"pN^T
%"b,(W()cN"j8\h`6&6W1GXg^RN9<$hds+XJ3K3,TT$_dPiu*eg0V6[:7cPAGB/#q51nMa3JTtri2oRRS7NIIrI>-#1*@%KIS>pY/
%cD`k&lC=kqW6V(tVs9ePF/[BX3iD85WcP2cTfTrf\i39qU[a>2o@ri_Dp_aB4LmSRY:;OfUUF@q3mHhET>Q%Oo/Y(Y1nV[5%eD^*
%k;8gKHk,a.c0$pUdsMYsq;iO!86]"j>J#nC=eBd5413+?UpT[`QB[g3R-DG;#D4'+H8+R!J-Q/t%!p:b6&,[c*cu_Tks;3P*?OjB
%*fOG`?)PE%?eb"NH)A$h_mcRid"=Up#!<ap@*jNl%gG-5n6jUq5n=/^)":q[K0^"P4W*Zrh"9MDhrUN5\Gil5``$.!edZP0AS/\e
%?_'$+@LS.!5`CD+//2Tf(^n8a+NC&kK457F0d+K/(kZ9+MD66n\1,Gm"P@=5pF_oLkc"4+D9jW@@l6E@MZD(F8gcgO/"PFdDYa60
%&&7=4J(37)j*>@rp@\-frE!%>l3#Q8D)U;.p;Y*>e!63_YHQoOol5E/`nT6k=`5,Clq6-Ahm34S)qAB(AgmNA(,8n"k^ftqT0uO'
%AiArMTUlYYM:C!?4WW#cWMbAp5,dd5h%&^>l?6"5K=[2V*Rsa+p%Q(U6sDfBhm]eFPK%+ND.1Ab-dY6SL$40M"5ngeK@g:UK@%fX
%r&L.BK6\[4F>-Jqo0ha*@/aDAra!T;^#SW_44<7'8bC$.5Ld"GB<0`f8nKeZ1)D\^0GcJ\1)DV\1065T+qG:s!"\W1iXX<F_Y/nh
%bF@?<:6QlE0u%X3(o]H[9eA9p7pA@6h^/7PLA&^464W!hhdP>iMsdZh-`n>Y"E9$a$!@O:!*KS1#[%.1#WZ7F4BlYdV9H(`C"P37
%0%@S!lVMr!2[GNqY`^NQmUR&GgZK*SmCNVVG<aQ)qZu)IqG,PL4aQk;\F!Arq\f:#f3)0"P4I7kkEtS![G]G+a\8-(RKYOk::#I_
%!R7q!/>*lRBqVH@WB3lZ:^'_POXcaP7AcZa:Q`&dF&D7chMA;cnI)'9]/'BNB.6mmHJY(`XT>hJqKs[ir5[u"=T(ksf,%["\<`\$
%!S7CUA`m74otAH>rP6*`FJ^p"qci-`#NaOrb%!a'I[O:mRDmk#ftl@Xfu_phftl@Xfm#@cJ=\3Xp=d0C*a:O_/QhblGohobVs_1P
%Un,4<Wk.OI:"k$.pF5LHS$U8)9K8Vj[rK=nbq.X'E3H@dmiP^CB)J152/r:aTC:QTcd-;2?fDRTG2RQ%G2d])G2RQ%NggiEcX/9.
%nI<gud,E*m=Km4.Cg11sNZF?hVWCk*V:(+\1-LsQ\d['4c`%%'<L;s])45-AI<O=SbJk+umCkU,L7NM%WP/(AnCDm0,!Xh.+gW?Y
%CAORe]hIsuGY?jaQnMBdRI87[hu&uKNV:QFhi,[af><$*!mEK/L&tH3VXF=U#F=iD;6LAu)aLK[KJoE?YC"Wa()0qK?pT>IKbbA+
%:gcS?"bd`9eDLbU1qrHeV?etPR%_A3ZDi4i](#IdUtpTNXPR_VXqS.$FB^b9-"Rj)>#8TmJH^`C'O"=@6%K2n()0qK?pT>IKbbA+
%:gcS?"m)<ZgM4fllfq3t+0YL8Dlhn\QCl2bX?Krs!L^opqGZTRTg,CQPkn>B:SC"Hre1+]kYIj9U&K`A'Bi5b5ImaXZXTc7/L:>f
%2CE4qj_ppWZisnc?p3d9(f-40m\oK4dLLe94JhS4``!^M@6CCVPf?W=:LQB!Bfn';gF&lsS6#sAQFo]r7]rEAOhaS99)g@=Vsp=q
%InK_irMT.W_LG2Xku%GrJ'.WV-if;8O<l%IV`4QeWmNoh5+d.Ii]3&]5<PPe5be;g!]120-pXO-%0A?lcmV/U!#5Q7#Z)s8V#V53
%<!Z<=$ICoT"P;i2"L.X1)rot1jf)rXU\P>\1RQL%5,7o^jtiCNBKi3e%-B@5cY,M;q$cCAR*T[$J"#D[d@ePF'>iXGDY/n@UG7ZX
%?0?0t_f\`+3F1feS\oS>f,7k,E1Ogf7b8M`B5jEXF`u5V`RO3j$[m'F8Q3_PQZe]t`]@6\L2akus#J?e1nV[5%eD^*k;8gKHk,a.
%c0$pU_gDsc3R-_DT>Q$doD-p?n+"o!Z@2sgCL[%k4Pi7PYVulI\]!@)r1)njRa5D+L\[J&F.1E`5)8s(k&[!;@6TJBSE=m]cXB"m
%q>@8glmi?rq7cgom@Zro9UO.?^7b9'jpRP0BYL/8!p0lX05*PIq&JO<R*TJ1Vth=pF-t9lRSQ;CVpA`I[Ab\Rr3^NQ%Os-1]R]PS
%apT[PW4[ZO!m1m#0;uO6ncHrA.PIa5JFWcaMlY"tFc>c>DE]@mr`8._#@"gIT_O,u.hH'=p^4uA.)#cQ'o4Lk^7b6&iX:Pq.))AL
%!oaTD0CF\#9lPNT[5f_ohaEt3ODC*K^MWA=/YG'Z-6;a&TQFLe7cjA?,Jmn`]]aUsfsgR!He\NMnWN/>d/Ilr^:io.)@nu47]!l6
%79J]moh?BDDqhk[0%ejBT4u&Oqs>3ZcD_%7T+n]te:2lnHqVg@l`tcuK6KA$-h:";mr\%ojIHe;q;A@[D``1_H/$0i%c0\3G4=(@
%]NrstXnsoDjMn^-na:&c6gBBPK?OG=K>`DX"2'8rb<c"cBW$K+,40L!:'^/Sg?G:/>bnKf`5gl8:PsS3`9_m4KWKhXKIhX)KIhd-
%J1QATK^<4h6l[<h"<?JA^`0*8(Z?/0:>K*XGS[EJDgNQ&&'H9FDKX^F<ggb>470Y\gFpsF[-jH,A!;G&LbfVN&IT-X&IT0Y&.9*5
%Mhp7t!Ee1P]MeV<I+O:\2EsWWNrn]-3l]CE'lb+IH`]2NOYIuB1,86f'qj=E&('^U#Np:ql[AX9h[02*f=*nhpV4H0=8i#miRcV*
%oWtnZf'$]&4.;qHJBM=<?s1:NlmrNH(9f>Ob6!t1Q3NW^R(CaGi)K3q*N4Rg>pT9?X)X'T4c7`1UOE<A2L2fD?iJe@_JI>E(P#!i
%AR#dYR9%Xa]HciKK5oemo:<BHN6eKiqNhW70/+2M/j&1sbQXBWNk#/]HP(<rO7j"4nl$JdABgsB[NB]fg7P>;Q0m-X#:"%?3#ak>
%3'0)]3BK5_3'0)=0+A!01T/Z-Rs3:jbJpdjlb5C*K2L^ZI@#l!/XJEjq\CN^3L?L,^Sh_t)1Z&o?HJGh5P3H_+lP0VpWYhX\HAFq
%e"FAW*!GU.li?ATlicYTli8"aYJ^')*p`d7pIhfN`G!VB-W=fK?<^j&$5d6q1g?j21>FcPVaARk>Gg4g(o=q>f`@-c)[@+.qrU!A
%G/3pNkcF">N'$`oN=p.6]Z9RHmqP4XWOtpfX\;@C=%G!nHC<L1nD=)5`fB'%1uHNQ[+@WmRI87_?\\M[7],VN:&SeeY^W&il.ar"
%pF*g^Z&5[t\k_0EJa7ul'=prs3e?UMY03'c9VXGMY[+-o14>K4]TnMVA8`C4Fc=Y<8#2C0(B(>)=!h(K3hbgAWY;=+W&gX;"KE-6
%:8g4Il3++#W(s9PU$;c\'<"[oW_QQ?fYZp,iSAU(L"s%j=XILE:162;l'/&DRSI9PL$=8f':M[(3e?OKVA#Cn?oil'jJM06rl/D!
%<%hg9ZYE%0c[F^!DbALC;8L(jHB`A=%<iM+!"@=*9rBh=_K6.6.8?]sS\fIUe*0TUQ"$`L.G"5D2em+$c._3aht<s?E%M(`=.!RY
%VXP;:;[?/J4JhN]_G^_9.6Kac4U=hdlQ*t$;=1XDKCJN1nD\^l>7RX2Q9=VLp,bH%3:CWZ;1D(6)>%RgT2C)-r>G6?d%=0b9)U42
%VpM&6InKYgoV^'.?7krd!H>aH,@4".0dj_Mn*RJ_9e?)9%,ies13$6F"q;J-B[i\PK*Dc'1hbC3;1f&^)Dl-WTM^=G%2q':2`4\g
%8#]RP?[B&De_eHNcdmHUcYs^5c`OOUd>CCD3iqPLU=4up.lscqYbKO&7OoCYBX"5YMFK*7XD"i4h6^XiBNlnLpODk=dGneE:41>H
%3u:MXS=O\BaO)/$V];7JFNDiQ8#I>tEcfCM+\/FMST8hnd32#p=pE-5Hf"6`a_a.F*QcUoL8WLT:)c61kcgc0L/&[KD!8*sdtUU:
%3c+#aU!n`k)`hg!YbBs]Tt`TlIroO'>:&d`@kGpPUiJ*3=B\)=/abB40N3i0.0cRbP[[IH!@\5K(mLanM@M'rV!+&;;i2&63i(t@
%V>(LrF+*6q?e&6/@!\rp3#<VAC+uU&J-H)o$u.Jp_12^l)@U@7W53ug!u_S_0W;g<"p5d&Wu<OXCM+H35MaqZB4''WoI4IFm2SgG
%3+>^:5n+TCYX!hp)D'BGJHcK=(t;qiK)lDc1`4_M:kJcX"uI/uMaL::hSo8GQMS[@c!l+&cR[DjNI:$o3l<<cpC*sAC3t3epJ3$g
%Or/mu``(<o/S2W/D4aZBM>Gl3I9YH.;4+eO.*Qpac*j^7l^KfhhP)[LHFmQt=0SS#QL2.g(l@mf?,*:=dLr82aErRUa)e<7M.[?6
%k]%%%E=C98$keUe3fZKeN^;YZ8B3I+a"bs$(t`g:N5r_o@pm>30HL<XNe(M!#/BiZlVr[IG=ueZMI.eqPrl8SF(NCo;oVA-N'gEd
%"G-k$^d!W>83[)=aM&YXT*'L&cmPP`#PrP8:ILfboZotuq?u9TgXg>Bk=8$"O-nruWsmQOej@phej@qSecODhek4Lge3VL`cp>rC
%bQ5jPaF9?CmgcCWNgH`CT]OcG^><@:A!XLBA0th@:AZ[/[eIA^eX`g[4;(I&CF3(*<WQ5E<ZtKE<[$%A&Sh^K`[F'7^P,S>Jd;"V
%W=rm@6@2nr]lGl\ENem:0L>tT@OC7Y["<Dur(4JKpB:H_Vn-dgiB(N+!W0;qn,=]DrMg7c^u(s&3jS_ln]LRQVd:%N&btr'a+:p(
%q9$qj[K3f?Cs1,4J8G>AZEl,j)dmGhX+764>m4O<?ek`5#hqeb^[ZH9CD(pc*10HkI<>pG6$-X>`[,%/GkDcl44Co$TXN*:F_if]
%dpTR:R9X*</`9fUXp&&<\<`\$!S@&if5DY"qbsS'\'R<iC>SK*lh&d.p*Gn<=sI2U=pJ4Y=smJY=pJ6kjZpV)A6ShFo+#t\ff5M;
%gGe;h+14o#GI\"3hib\85!A0?V=/o0k<@A+*BigEXn-e5<!M_+Zrb')pCBFbOq<iq[+j`=4Z41BklbAA%aoOIG0kE\G1(Q\G0l8-
%[-_qi1ZlQ0kMBr]/M-K4W$*NEph"hhj]a3ALb7(lR;0oag\@;Y/5pGSFrU7Crn;#J418rF;t01DoD%d%o3KbOU-eHQoDOJ;[at-5
%q+7\A^--d%De"Ssd:JbaV-N:,6Zng"bEQ:emDe=2K%+)'mmbHr^D=]01g['M17YgO2g+"r8l'NmpI;nA7`R(>RU87a137D(h$J0N
%d%+!W6JVri-d\D\GF?/a)4/V`_TOcBVXcL4[k]n-lV6VHnRpX!::7,f%<;#`>\3iZ]C([deL+=g5^`_,$.UD&T0Rf+oa0.r<1cF(
%!qclM-WH^'I00)`:%`5*hMgOCmje@C))bBd6J2ZVVi[H9G"UF:AZ(W\6?Y]K$"YKGSNq?bfa24;OI\X[E`7-rnjFB0G>,Z1M<g.n
%`/ZL'X<-IB1oEkBFqemc"UD?[S5OE#bpbKId%"!T9$JeAVpLr?eQaS%+(ji/@bL;S@i<(f-XnE,8kgHdL")>b;bBb-220PE;U_Cs
%K@H,cgel'3FW:cL854"pm2IB70($)MITCeO+#A"bc*9]G#%44^%!FGZc"K&2h$eH_fZe(gV;2i/;qOfY2l5=EG#R$fDqaT<o^o.-
%5JLosZO+`d]4[oUa"3g!MMY2N7`cMnB98W\E^n.g,\N4/;0#.J)'ijVS5F;raVc@:OIY-k>flG=1G0lNeGi,1RB8X5r`%Y(&"Q?Y
%ZlJ+lKUK@74GWMJc>u%mkraam*6p?$cfdKDo*io#3m["PKC]MsZ`=79cFF2Q+3u_1^om`Uc#k021B9Mek>7d<I89Gqe`Tc$6[_`&
%3S!:hT0n$%of:Rc:nL+'IT(Z5I,gR)c@B+PnU?ng]'A:!II7c&7q7=^T!m+%:)>rrk]!6EKh`FF>j-.#dtLO53aClfU!n]j(HPgb
%E1pW]TtF:N5-NQ1>/)^')ncGf89Dl8[ah9h`h41OAdk%]BZ?\_"(ht/0ka%S)'*=2R*fV;V\pLeFI:HoRaGK'e0p[(kPE(PSh^)#
%Dk0+F:(00<i5C-ZK2)h91#U!#'8'$g3\fR2J.mQ1$p$-$`./N]l93Jcf#G+)=X%u:dV>$*^jZ1.TEKl[/<F7j":HMX.)>rk(.^,-
%_4Uo5&e%;b.)DPZ!tl#50Q'Le\A'o]Cq]Gk?b*<t1N88d89D^)N7(#Z@?o_7N@[^FqBA+pI.hD_Df=B[7:2iS$LQ^toBgC5A3Bir
%d?jk/Q?AT;f/IQZ]l!Xm]3o8QOJ_uBmC3*Wof%62PQ/I9Qlf%c;i;`WQBc7Rp)<2?YfT!3q)ATC3!P5[+<AKF*QK;m(o61/jPq*@
%E=D1n#0(.\a"agY(`8<b*QLE`*eW?B4E]TPa\fM/j.lVdR_gW6KtN&J"13]bK<,0RK;?ZkqDgg="*>aNFF[*kkX<e^!<$.*m4#El
%96bjIp/pB+N?7QejPH(Q$ap\V&@MSI&@N.Y!4EHI'"4!H&9WMF&9O"T!-=7-h`RB8X8PWh=L(sqVXI.JmRnGa=7tr(pB[E#j<1&f
%*S0Vekg!@Ud^mgt!(Y+uOG/c"OG/dMO9L`"ORko^qH],.\(gOG.K)$XDL7>SUqKIf3-u)nfT7J2OslI\9GLCYk7=NY]*Hf/5KA3L
%#iB@mcI00bHM>1^m8mT'RK#C_g4"K$MiObKII3uB%IUZ:0U$+!Ac^/^dk%.p5dTf6$YT`X)JCU>lHW</<'aK-U^EuBPNckDpBQ*A
%.mq[+@%<Z=@#h2-pf!dg>!:_fa4[p+cb?CMSbSZrT2RcC0,[;f+>#i^G,,:4$]pYpB`ZZV-IVP#AMeH&G,;D"g_O3j#dQ"Y7]$Zm
%%]3!u:8SMu%]761H3)M5A8/6l44UTIj#DX+hjh`7'JFUdjW`A:\NOdbM4:nQ&PF`n/ZD6ea%m_"iiMeu=\4p5qZZDQ5l(@G:T).&
%A=9t)VTsDR\EE$3KJ.<MEBA,$E'&&$EBA,$E5tE&78g*p"8P)LXWoRNpMJGMm]@OHKY4eU&2RUX.C5:0WO-*?9V#bk/44+BF"5""
%ULbolk$$JST:P].Z>kO`]5Q!$@AfZ7g9%1Cf'[pKT3TFMhhB`pN-fD`g5.W5Z8bd(.u@0u'qWS_?)HjA<&[%>Z(pV?AN(8SmBs0(
%VX?3fQQa#,N2c]'ds0c;[]Psbdr/7$qFKn"HQVD'kAr7S=^!PnJhChp7Lohg..EnVK0g(U4=K]ld"@`1S3`Kr)^`d.@AXDgA@M[s
%(&(EAc5T40jk7g8!UuIk\KWX60Vp1ZU-OT&.12n"OJ5!t67E8<.$1/gMF&a!V'qG"5`0S\MC$62>7OE)hVA%SCFSZ8hffCkD$NNH
%Si0,GJX8fp:/j2MiC'LUPtk:<;;jp:'890q3)SU%TbE,T'KAtJ7(MPM/RIuR`5N]LO)ua]L+"pX7nj3tl;?%O<S^O'!AH@/e=]]l
%$4SIAW77J<K*i&;1oN>j(oalVfi`?Uq1*#4J63DCfr.rN6)=c#)H:BHWBm?b'cL%b:oQ`DC-H<-=nE_7hbj*PmXk`:V?TaOMlpb&
%Erh95"dG:l1E+SI4G30_`\SOZ?p')3N5ed7:LQA>nW_$l)Gad(L%4eMrV-7O+'48]3D0MHo8LC>qTe"\KC=c51]#DT4+m!\^,,W2
%i&cS[N4q+EcJUd:n*Hq?9Nr:*B8M!eT[=f[UE.(rE(7`*%-K=7dr8("3=P()SC):F_\ikq0V$O07`-)PB/#i]Xnn3FViE.];BIL8
%i*fu]\ZE<,dr8("3=P()SC;FP_`8.g0V$U2:;](#k:iFTE)+;2%-K=7h_^k<V'S+m=,/("Wuor`b58f1+^;6`EMh\7L3"3WBfN$L
%*/8MOc=o89i>dSn(sZhTVr8VMEu<3+(4(+ki&WpBD_3gfoA'3q5GPFIMUFOs(R/2jFog8"AJ^S:5^!1]"_Hk]SO7Q1ff<X,Pat0b
%%b^YPfpPH<.CdpRg2@>[;;>S'^S("H\dR^STY$lbK";?R/tfhLmXi"XkUrO?T^IEC$g949]==h%Q*89m94L(j`^5-Vb>pr_AW`hQ
%$:Ir<\jFdZMQT3d"elB^/h";]kQ7IdMCp<gJER'/MjpI42bBXQn5[h2k%-O+e[OB=rDahaO@;4n)(k*_p?9WeT11S)(hCbK;.e^7
%f%\sQ).^j-IC@hCX_k-^9A;ptA\>`';s)-n9cJ"hgNgJ<Yd5hqdsfL6g]*gmG**NP+!!`6Pc(oM`f,aJhYH*#%c3&Te%n*d]G#Rg
%K6KM(lbV<chF?@Fn@!tYOgc@Docikqr>jFUd!*$dRNTb6e6r9>jQV-u@gs8^[le;PA/p0;!taN8^`T?oKHFSD6sgGpcTs`8j:fY5
%K7#`$-^%71q<')MP>m=^C.5S$gh[S1jlDr5Q)o\@"g!EZKrbHZKrgQ@SZ%1:"/(::K9ub*K96$U@gfX"kj5cDh3bE-<tcX=J[`qb
%,=XFj"*N>l<4<sC4(R.Zl\6^:)!PY\("*iD("*iF(!m]DbnoVj?(J$Nn)`)&YDabnqfBM8`%n:b8o5[p<cB?eP24M8f[eB@D!Q:@
%[-rI(qt:W96hMJ!DgV-EIr!fB\o=fu?\I`jT6JZ+^"m4XWRWN:111;o(;MI_bQ=.80Zss4!+l5.!N(IGmPkqD'gQmhW^(;8OiCVj
%]epBt[KSG`,EHlH?o3_#N61jqT9WPBk':Un[g(?rq94'BcbFs)K@R\HEdbd3J8<iK(2tk`>'@%P>i1HEh[ep(!;K2r[WuH1GPu>@
%-6MPL9RARGhdrP=H/$1fPI$CXK<p3:PI$IZK<p3:nR<U@4[LUr[<X,_[VQpfYjS"P4;_X(h06D#]<jRoRT`M)S=\.Il[>OnOVf'4
%Q@3nP*O1dDq??2M8?(HkG1M(WYjS",I-8e$Hqrl!P')koK=-?>PI6U^K=->Sggp@/:%]R*A_A[QUG"mUC2Hh6JN$MA.tU[h_J,E9
%bHtH-f#Hl0A=6cI'\eG:o[c8ghQ^YPO90@XS;2U7Rr:@U/J6jZ#56R`p%Ed?!7>:d_PE.fakF<[Ck7mDS'G5(Pe+ns?DdBN[?ojc
%nN!-_`Kt;Q&ObleL&*R\QRTZXqlO7"h=mE8o5*upd;\=BYt.rm3q\:*adF=eMGPE^JI$rR'T,^06@fDr,0Vn&8>((M:gp4/1M)q^
%_j-$l"7;SqN%B+#jEK_9H=]i3V`B?e&OS0n9sd(01,771!Y5W#..j1ZK)uPj4=Kipd";B1$9Ta/T[8;m%gkEI2a&"DC:D&E3WJr@
%e\R!#bl#TabZ6_sKgHL]<N&`f6A8#H.TNEDTgFH"'adqh:n^..659i--r?U&KlU+GnRsD#%3EiDF\:ssg1OC151VnICJ(!mNI"QN
%:no)nhGN_^"Wq\NNCl&XeYl<>6B+Sp.b1IoUI'rd;iP3]S\Y5QIVNB'oKaPMm*W/nB=GBOAT'#aM48B^\5D3SV&P\;<4Gfa7\q's
%W!_KQAQa9-Kh#Rmaq/I?]5I7"<p4KSj1`PfPVtAPcsT4n%?38&g<a4pK+3eu<8(/W6\Pu72H8C,@7,_Xoqi2s4%CgDo]EkQF1Xlj
%dbqJ1qRbb07NECiB[EG=LIN:&F_K-q6&.oM)Kf`?Tg=H'*?''6d%Na\G#O/K?H.:FF2I16'YXB4?Z,%.XOi-Q(42I>ks:(0*?K<K
%d-3iO#9=jBHI1kAK*Mi,1j[O46%]CO*jhshr9C!*(;p,(d-E<IO3,mUi6Z1%Vth=pF-t9f5,\2rk&Zp9Bg/Hj*9M=0cY5S@q&JO<
%R*Vt)Y<5UOer\_B9SOoZ3\J^-I\Z(pegPD3c5(bpS>eW+nf5en.aP(VL[lG-F"5M84GWJIb&]&YWB>t,*6RlBb#?QgO6L;rEXs;$
%ibnr(SB;3h0;,t.nq,!l.PII-JF\<7F"5M04GWKtb&]&YTfe,$r2T>S]*;pf(>#hG./i9h(X$qef*,FrE*^8%6.Z9G(N<ZqF[=U_
%>o.Hc^i_rp"^Mp`?,1T&drcFElhC%IG67c-O/8Q^H's13\H9kf8?Pd0Kp!sJ>_1sfOpal7+M!$`Js$L6/g.]TjPm&toR4)2./g:X
%3I4l0h6Ark[2AFs:3acS3iG35o)#>V?HFk;0"HogT7,JGgY;F/@2Gu*6Mn7FI!aTe)im3bfVQ?sVH;?hoh?BDDqej:?*LXc3n&Q$
%p=oWG\e.B&G/MC3[.7I_VruKb>M$ub24<t*!C%Uo'B,hkIQHC7_G:F7I)+>9^)c^&nEkaE#CIbD45fEnpojU5,Q0;\hUWN=8Y=T(
%lmY,%;9l<gHeRfE0do-e_'9LN!($TMquQX[puPo`*:2.j5*:7SfVa@M,5ZJdIkJ#['(phB+47"+]maaOC7DF*R.Y`([VEgNM-3]C
%KjKUBLgGU<LgGmDJ6n%<M;Cff#X6$eLcn9l!'SEYDk?ALD)%2\o:4^[Y,QTSrKQU(f6i["jfrZ:ZqTE9SbCmim?d$3>'J9'Yt;`#
%`0lF8L]rTgLkUWgLkUZV7E"(D/Thef</PKJ>.nQ.[R.58BcUrli!(?&"]fXifU])FD>X6^[XIlmqsNXXD]dq";r<H.[R]fcpU:%#
%Itt#F>!Ks/DJAj=^[_6f]Ns\V:VImQ(t]&F(9fAPgB+eeCs1,4J8Kh=JZT!VmW91g'mt-/X<;<q$3+%A:As_@>J,.^Q;MP7m=2Q6
%09bXVY)KEsXQJe>OE[^QCLHP!52V4?_>'OXX+/56qgrVbfs6en+Bq+>lspLF^)+o*nQKY/0C$t&^IDel=K^JZMa$ZW/iI)fHoStl
%K<p]HK<p3:PI$IZK<p3:n`h4s4nCDq[<X,_[VQpfYjS"P4;]qPh06DTV2/)`Rf(:beMV0>2F[[\]/GU9aoM>@n-ZL$.m,oO^,5ob
%9qUn0!RK)+cs?b`!d4Qe!-SEe!d4Qe!03P!-)+^sF"4.BC$Y"(j^MR<C,O"5%ph%TQRTK\DQ1-S\kLXc\h6?no5cCu9\X.DDMD]U
%CS)XAfWoLQJ\,jGdp^:fDjo!mI`HS6T%#+pkP:dY4[;SC/nP-]m8fgTNI1bo^<73sL@OEh1h]ipVXnCPVS*bnbHtTQp+j:inhk8,
%GS0Eu[9-Kur:Oc[q1NKF3,*5"p*G[K5`Ob:Lef-WU%j<#'8TF,5,%a,br>5JNA&eJl+TjeA_:q_C>&sgjp>k]\_<t\8bUOHA)>7E
%fn$LV@2<5h:LH;9nV"mq)Gaa'JanE5',jYS4G!$U`Y07d?p'#1jJMH>BWWreW6<r$!]_'2jmtF6."*Ga#S!m+=m/)DrtPH2peU-=
%V>h8/;ts/P5GA)[rY,'&kWbd@"TB)0:N$$ts'[LS8QLn@%]\!QW&q#jUT=Q#W(s<QV<Sbp;lEHj3i2*UW`,ikn#<HC"n'eCD_6#,
%eKU<:Z\,/ni?B19Bfq+>'ZO&i:MDqFnJ&uA)GcDD&&qP6Gt4EL'RHkQ?p),:]TTYP)Y+Ucm9XE8lPGN1$>SAqM%pn)$IC1dK)c>^
%1^_SX5_B%G!]16\.6rRe'`q>A:anY`!#5RbWri2N^ts]JH*$/;<aottX6uNb(16pai'2koN;bX0ceq$?s,?q5qTn(aKE$o01]#GU
%5D0"&C;j8UhIi$ZA[gs<d7U=D#sKm0ZLH:d%c99okOb=oG7NLjHtW)Bd<>fP)16)hS^DWch\gfS2gnceXcG^GW1)6UnG2fd]A>'(
%=5t-'XQnO(5c4])%Wj\Wks2-K*=d0Nd-3fn"!%kn37-nTVZRqLF?%WcQ@#&jM>-pO$af5ScAP-'-L^7;/\Z>!_gN$h3Sik?T>Q'e
%pGq'mFJ$I!%ei!>kB*?6I1H#Ie_?V?X56?b^Z>OnPkK:O1A8"k)H1\Xblop?e6Ggk!R1d)(Y"sREt6GT2!<AY;f`Gn3Afo#24*2E
%ID)t*OPbBTrQ0,,ALfk9(,$%L4W!Tm^iMff"[*[k>ekDHcNQHJn6EbM6-f]t([t\FF)fZMht[2Y(`hXW^Mc6#.,*]6$S2`g@(69U
%'cO7%E!:tH0O2tD6,Nj7(GK+@E'_AF$l:U&>cm5PNLrGME9C?&Dp41*E@o19X:q0+PR_F=W;QX/jB%:[(EF#EqfZ:aDqfc\>uH+!
%ftT,`\$s%Bj6>\5W:\]Nr6"rI^1lWpD-PWH"Zs?51[VYf^\n6,G:&XS].Wb#Y768:j5RK=edRj<kkTb#%d8brdfDTPckE+N"+!/(
%lN,fOkXOcZ5dpj,&\9"0ocj$HCg'nWWMNq0hT[InZ#Z<dPn7c"e-hrTR0SfYM$JS:GR&5TKD'B5:'^/Sg?G9$%bccHdm<lA83;9Y
%:Y'"DOa1U8l-KBB"2E99?!En3&m#\^&f2)q&f2/s&/Ps\&pFBfndaRfdLO,(YR[E$Mkj^*hKn5'8k=@1oo"R5TKk-`#9u%=AR"c)
%9]R=fp)V`O\*2+@GLF(M8H;9%R?3,a"d"G"KocJ"KokoVe(L>h^b9Ddgd2k8E-bj.gQIe*#\3R`l=F(1ghX7tN0$>nR)sUYXWZF`
%IunR*4[?dZM=91hpl=!N^qT3`]DhnL^Zr[7.+*>Wj!eSMTu900Y3,6*U.(8XJ7\i,ZI:@t=[9=[1^dt$BGtP6E9b_I!E;?aGGGSC
%G*f1E/+:_SB:.6D!p5<,N5,BqU=J:pGFX(snEcWi^(V<7nMuk5s,qs*"k!IJAOfpSZiFgnOVT'f0-ZB7HX5;nhJ`<GPr>B22VWk&
%+U]H%,@Lgc#@Sug-Xd6g#@ZX=5_+*V:YKUUc?O0Y33&Y,2s2&48t3E\EfoquoX3)l;nT:Y^=$-\)*B)g"7Q]6.t(;inEb]&ec=Ja
%o6f^2G^`D?p(D<UYQM*3YS45SYQM*3E81To<?1$Wd%(%k;\ecX?RsT3RJL*,P;`CA?OA@5?l9<@T2V.h3\43=1N(WIqs8^NQAoA]
%^3t&Ds.+)Bkqb,>l-n14.u!_dH;7R\s+AtH"AGSm\4PLJ-nWn^R8V54gAIHFNEXNtg5MN.f0X;AB$4.XL>,c,V%(>FT"n]]SB#,Q
%mA$nnb2If'aHW2kEWX>h,U\hH:iZWZ#p^m_>c-UphP:1,jt])d.Cor:Xo(fqHrG0VB8=Qog\bu50h[J+9Wh?a5]$S1$.UA%Rm:fl
%[0bA1<1?-i!jr?b-<-I"D$%,e9sk^_r7>6Q"74Iu*14C6+l?u)oUBPXQaR\K:1uV@i=q#F)GY!+L#E`#',jVZ3.^#kL(bJ#BK1S%
%"GW,0L'og72-fqJIFn@tp16EKEgBb2D/kgA=H<duMUS=g4)2-t8-<6J:8p4LiY78K-r-a$V;`2H;^bCZ.djdc@IF)KUs)KM\:Ie3
%agMdt;^tPA3/-?+MGl!"WAoUk'T,g=:63g4MGr)D8+Cb%D_0e=35):N$Y_PBSo=Oga+VOEBL%O=p00:`!&c=PTK%S`N/BD@cCd.L
%if&an.ScZsL#S>S;^tP93/-AaVW-J'C\V1R0D)f8.EPN;o=ob3:Og=4UTiKI1Sa`(i\QD:+?lRqN8cXLcQGEHpl+2gLsI2-U\Kf-
%1Pj@"5.b"Ir>&6P:RV(+D)Cn(K70N_N4O)ocCm=tm[Uk0kg#k`U[F)P1[*,W4/;5&\hiQqTKBbhckV',KDd/cqh*<sd>`P9Q:r0H
%S[rn+cCm=tm[Uk0kg#k`Vs^(dF6LoC4/_M:\o[)\Tf^#g]98bMlK$`V\dn#oMk8^&K;j(OZe9>srccPb9\OT\_gN$h3Sik?T>Q'e
%pGq'mFJ$I!%ei!>kB*?6I1H#Ieafl1o[_.AE&dYq5dE%IL7HE!'27WoU_f,!:jPFl"f)rr?;PrCkrGR&OIfBs:?ad7kE)9BXm>m8
%)@+s^WAhO/mHG3ZR:IbVJD^K\$OSL7\:EK=JdVo<.(Ffc!eLde/h"5[hu\LgRt?!n[!DTCM68];O%5p?7-O'f;1A0#6sFD;d\cL@
%KNB;/6K&XdY<[=9_@$](.(k*"!l><P0.=J`n,gIbX7`%%X0iUD/pXS.0SHnrT=,%aH[$iZcneGFH0oU8h`m)W8n*&,):("kG5KYd
%ZYc>nPn`nbB)B$FZ,/#.)r[(PqO0lV+4iGg]Y0#!T(R9CcE8Qhq^pQ@s$ukWWP)tLTHQIe;sQo;-+=idH,O-nG322KA\l[tr,f_M
%KV&bLl%#B35997b!FHB4G/-&R[fa>bn;Zr)J?RS_fD-N!YNP_@UhfSZqIe/fSA(bRfcFUje-hrTR0SfYM$JS:GR&5TKD'B5:'^/S
%g?G9$%bccHdm<lA8Ga@sG\onHA9hWHR=<lGNGS^'IFT;bF!YlNErg>*F!5T*F!5TNF!pN$nGr&$mi_#um3$5[a?#p@=p7#KC5M`_
%I:9gjq*"Y>3OGAlXY%LIM$&"VpK+hrU-!,G60e_&JK#J>1);V\0GZDZ1);PZ1<p[RQi+3[!;X#RQ18Y/X[hA=NnI4CE7VI4d:D%u
%\H.YN6(++^GmCGo>sEh%Y2;B.^\`<FgIM%!fQY-FmErQGrGB=7hq:2mot:+9C)mY1s&3k+Ig';rj^BBeeQ_"97*?\l+Bq+>lspLF
%(6C+0f`JG[Z3ITA[(<SD^fAb3*Nt'uh;kVZ/Z:lU?*Dqt>b\>&o-DRD0X)I,XUrJ[^a"@bXq.kSX62k,&biED\8>!^A!8@.`iaa3
%`;B[X!Tp[t0#1_B\a5[k0Y\DY^[X.kH25bFH=,/Q[m^LA9%q`2,Fi>I+6"&ZR@oP4*M=FGSY2OH*M=FGNE6Gfkn-hXYK]/oZ";tR
%!d<Ik-c2g<lFtG1h"nXF5:U]#?]:Zl;_F:#$aM:RdY88oftK>b[`qBeCbk,#BtYc2,jQT=+R:<=,jQT=+<)-=rm&ae>jAT`kl#s#
%1[m/?>?aVO9Zq!^DP^;^B6Z%-FIB#L:u1o:`\,__RBdb\Q2]KMk<-1h**[CMS+Abp3TkbGX!g3MeVDi8FgqZ:^Mi?14S!1ABcC\G
%02m0IXA\d-f#uQLVY;ja2a4.GU\Q[q2o7'C[;]KMr%dZ+Tt_>6WV_.nIpS_pZeW<.-oM-_1"Yo2A]Y^6RDUmC:Z+?do7YC&3`"Zr
%Jb+Q?bEUihX)u.]?DdEO]pBnV'qVCTDjo#&XH"utj_)Rpa7:j2/<')Aj@e#0<$tM5:j#+T#ui9KSPXGqeHo2&:n:F*6IcBA-W$Ah
%<8C'mg[Lp"#'rr(f\>]u<@:b:6?NXc.939FSO.H+eHo5'<1Q9s!n@TW-WHX%FTU+8:">O"lO6qb.mN_[`%klTY7Y!oAH:;VP_8#g
%W9'%Km\o7J(lhNU:?a`litRMP3_np!L#Wl-e!mc$]FU7@X7.Y&I3<I=/]:pA@*21e2hg%OE`:+T+ZG,1P]G6JY(PMoL##VZ*Mjcl
%431."at8<<^%Uk%`hd[)/bVXW9">i$ArrKJDFV/Sj^sUD6#K0&.HRFgRmM!b\LHX;OIJRSH;e]Y/=s:nb;W%oI;_`\ai!!Lm&/a5
%n@#@[S9)$u>paI#cJUa9l\qu&]$B4pKBnK!1V1li3eQaWXu!Z7i&ZMVm&KA.Cm9(W0&F9/jCiWRZQ\MS+WAU<1nV[5%eD^*k;8gK
%Hk,`cc"Al*_0cIY)9leNT>>mZo@Zk0q(#@4V>h`D5%8PJ$,gh;ITN2n.6sd2*<L<gcm_5X!$),_#gb"cVZ7_=F9p5B5c4T&!d"^p
%D[Q"2_oZEVZp2l]e2PuRh$:tq!BLDJ&>2C@:'!BZkRaCSJ5-,+"m?Mj6\%o43X+^YTL46Y;h/I%_6JaJ4'!`Oa+J1r?fiqM$8<U<
%J,k3'$jn[2^jlE;!d"dr+[Ce_SH<m?clkZ0!<&bp9DKR!>0&n/YNFM=]D0\7dSFa$/R,kNE8'k:'/p(3&7@bR5lh/n(_C(?J3a2?
%"W.eY5_)-$"pGhT?pK6^;h2'I3cjaOZ(lFie#[BfFoL2N7X;9kD]Q2md"2E:/?iNU"Ucna@)2mP"t^\!@).?p$O/1"Zs^\$!=Qot
%qG2.2:Ik)'8m=A&M:q(s2u6Fm\cXn_-_9kQVfZ0jIc^<",Mj&(_gF]3&(3/ChVP^@9#F2J382,Ak1eYIaESi=dP1Xm/cILiY&E$=
%He\8eG/;J,CeadYgMd,d)u*>%1Y._q7qHU5FNd1C_37GR+4Sb*4ct%OW;kc+cE:0:j?0X/#5s>O6m*Sq:067Yea\cS*>$:;L7%2K
%%!YSM64+rGj+!\MlDsC()FMBKHntYHpTo4Mm\a-7>ZGun:bSVN*n9M.\j!(IK=[2V4fI+f\rjQeW9]r&Y8?mel[5#!EG'Q,ahmu!
%NOt<r&9`SH&9X(V!-F<DHXK#YR*,SQ+m/@2>TT7?0p`.-j$h0dr94(nX]P8phG-=;dOssdo?*RSfLjd_fE0\lfL"3lfL"4_fM:!`
%e,du`cp>qXbX'DNk-JkfQO&qYD*9,SCGQ!m`a4dkKc#J9^-GEEY*lD(ZC5G@J0NK8W'[EaW'[FLVuinaW:`TX(=?U:rZ10A#WjSS
%e1aPKQ;)LFeJ9?<"]p:%fo/tJG's9u4+?ojHfdiQdmnY;l5?S!.m!9'/H&R%bYhe1B>L;5C8B2-mI"7Mg9Add1I/9tB$3"MBK"4R
%R:ZQG!)3Pi"]!<)'gNL%2'Z*T[255hCHbq:jX_WiTne]ndmL:I4I63J4hGoinB.3$f>-g_onT2P`q*k0Sqjo'`;<qj:5:cXal7]"
%Es(Tk3B(npi7p*N#0uCiSF-6="rJ?kWGCjL-YDtF]Ab&nXHBT:XFmU<XHT`<XFmVEI3:ee'.i0VCM(2=Cu%h4SVR*fY>3;dQ,!,7
%+/eq4N?D:qG_BYi.!pF`e%*[UmPstKP:Y!,38Z`\cTfX49&r+Xjua/sT:%_.cPc(EEXm,5E-?2DEcuJHE-?2\(HJ,9qW%J7Apo#g
%:Wc"O4j^esmIu]_V:d?KG3;[_B=P'ADO#CGd+ePicE>T6Q%Ib9QLV:Ok.H^jh-4iiL\j*QSEm5Y4/8mjI(ee"CUT6THlm^d=3@\o
%G'<q_?R0_pl+9RH<>]Y(c@ACG<B>%'=iScSHBm'^e6[k'mQaI\p,Bs'iFDQ%Vd[$sqUTE>_"L,pSPXG1eHo2&<1Qj.!n@TV-WFBJ
%lZS;"n:g3YD-*^K$K'ZbR*PG+iOSX#;<(C+ju*Z[/5bWuNmHFc*+ZS\ds(rS$&g5gT$V]`isCYl1nN'=!ojTG-T%FAGQQn3N$iN^
%mo,<h$t]8_g>-*MG57GTTiLEch;sfRh@k32iB;nhPho>b:Z4HjpOqB:H;EH^JbOiS'7*I44b<@g:%,LM3;TGMIYO$S0aJ_>:A]UV
%_^uh355K:2Sj#2VO5AZe3sWP4Sl0f*i@0GX&=udE9&V4PV\#H6-bL&LXB%g$hWr#GCN*6a%V=5!oYsc\*-tEF4b`VEhG\_rkrjap
%'])c7:EP!JGYd#GHh@"Qh*(K+i&uM=HS3QQm=VKO%U[epB21&lTG4"qHj9*Y`+KdV;1&T<)8p/%T2L%DnL;DS'VA9N$LoR`Vf.I]
%/CkosX05dFm]+aJR!3p9qp)1,)_f6D&>)797e%A8B+U\$Hq*WD`FfaS6$u/l)9$5"T0[kuVYIflHV\@to`3mm+m06m:0WZW3-VCa
%k"OksPikl7;gD."3L&]'Sl'c&jVa:q:nCO07cbMPB2G25WBBo2Na?S$et)"%.]XraCQeP,A"?Bd3R-_@T>Q%Oo/Y(Y0V?71:@gKj
%k:iOGHqs8nc0$dQ_gMGq=7<IcI@m=LqGa<2ik4uIoH($i3<5uLSC2ILcQPHLoUO?N8C&GBVt?M-F%FV#4f@qBdW7t*+[(<RH<5$f
%HkoJ,fdD$sG>Hdek-1'pb5'\Zra$B)1gn[\!<WN7(c5XIJ,o`V$lCgodsqo13Xk4/T[SE$"$-kSD]1<53I5)AT$>ggr@RD1eA_p]
%*G`1ddsqH$"q2>*@*jE)!sT/N1gn[\!<WN7(c5XIJ,o`V$lH/XG$]+&DEp;C.-7$3?*E<+$R>*gb70j(CJ\AjqARo9W4iK/25i1,
%^7b<(l3jODW4nr$!pU/l0A][#?<t+Q7c2_Y<Ys2Nm6*tsG&1\%hQ`4M.`Y:Js0PZQ_@T@Ge"$%)\5+3ecOe:QV`i'R486kq>0]"Q
%\MGW)LIWP"J(-TfFn.MppXt-+^#Lg,mmqs&$ZG7Hqm`qGl,g#&!EqX4O[C&s\t1IA1T,E*3Hfp`o</](jh\]nIsLN:&,q:\$i*lp
%=7S<@2tFE_Is^ZDo!\jRI?D:1-G$WqQbGn5T+q4)IJA^Kb=:;Y3X@d^3J][d3<2(T\.S6s`.a!T&XNa^nj$H9\3(<EY<LrI)f'7]
%jORN[=&YpXRD4c&W5N1iXt_l&67j.g'"\^e!4rfS&A%qS!4r<EK6dNDJ9_]OOE^bMOLMu^>L'KhWa-b12U!Je)l9\g`l=Pb#-XiE
%_@>3F?a-EB75JT$PVpi;R2Z--!#>PM!#>VO!YtbO!j40X^7%o1<$J;!g6nCTCN94l(7:Yu8Ta[Y(*4Y';aMe\N)_[crpbn^s31r;
%R@\=mVgAX5)5jC53V1iRrC&rc4a3m5YFH<AH@S.=>:%F\<8BE;;U3Me1]Xl`BZiX[J2RCE)/.2Y,6P=^<&7Cr8/4f5:c20O@'qqu
%b42agVe7rCL5s]B@r6:*@i,],j:bKoggkj)G;!gG;DZpM[(su)A"STZ_#0_JD#B=4p<7>WB%o)q#.=tW>@uX*p3_j:?d0NfqsO/H
%>3k_&UE3:aAtF)9_X9p;Kh<+d,@(O[#@/]_-X?s_cZBW"!m,[g(hNVQc$\-*Xh+nVo5NU_eXIG[eearce^Nh66$0P<bXGPUZFh^2
%:%\Y>4+6\qLRCgJUf\D_H$J[31Y).Y"4ddY!NM`j3iG*=3iP0=3iL&V<6qU2haY69C4D3pf2(jVGh:-tR%%=D8nRmtPEUSL$[&;c
%mJojL%?FMHXO:Vo.U/Oo$!+R;6=q`r14J`6W7R06>78sPE'FOEFa__SHCeHoep2!c".Q&8iH6Nf:bk?g)_RD!LJRb8_J,95X0c&a
%f%0!mB(/uXfN.QRr#j3aWO>F.<QOP;_Y!/Cdr&K(7>B.$s'8KM9h2BEHP:GBZ0YL.od8%T5]9!&$2#XlRq02=oN'q['g<Lk+h1.^
%<@Y/gEH`1q,CWF/T?sJ1gf=<Z\^3'(Im8++7##9jV;28t'A-#m2kf%1G*?`$J_^HPPAE1/h1Tqbg.bs6J_fBe]DXrnGG<iFDH"&>
%iAROeP\sF09s`RWDA0NSZJ,M"'=pp%2M'TcDNd$8(1C]&WHba-GLij4XhjVBfhEP9:0Ej9=<Cg)3)(KCZUa3Fd5qHilnjFF'Md-D
%1kjDC:/a2JiA?8;oKB+3D/@p`Er4P0erS\M_?=#b*7MXN9!p+uVGNaKD+_2beYZ04B!j);VX1X#[4+1SO'^S9gW"[]e>BFL/R3VR
%lu5,A#\h;KK"e1ehXDSHn(#m.@V)5k.aF\HKAqiI1Fg\C36R18-r-Hqc&,FJ:8p4LiY78K-r/Z!>\G^;r(HZ5p(MLikFe?n.N9uT
%B2G*aECRnb'k^@5A]5N$B2G+0`>KA&<1Hg*#/qGoB5]9&`S%^M]j,2?IoFiVlPP6/"gu'dDcK"KTMo60USdi,k&Zp9Bg/Hj*9Qj/
%5(iY>k-JkfKDCJg1RcWt5(i[teR"f2Z-Y_hfN4bQ?.Q:NnYPlc*dZ0%O!2X[=]qPk!d"^p+[Dq*SH<m=d'E]m!d"^pZN)!IF:-AD
%5_f=[!q\E5F`s_,lI8tci#X'*e2be:1nV[5%eD^*k;8gKI%JUG0V?71T$?FPT@80_o/Y%X0V?,7WH1::O2K8Nr9dZMjr']A'c'\8
%AIerCGld"1PS[;*:jE*'793_[Gn/q]<h;[(:?=L$k>7a;H2a]3g17-VU//ZI2Cn29`u/q6mbVoh\*$XgAV6lZ!r<;g0;uXYrW;qS
%XM9;b!r@hV^OZ<8q?uRATYH$Vi_BC)B-qmnNSS7/MH)rX2qnmBfl/CQ#2qEFY>KP(_J9]hbJFVm0-IpK_@$W&.(l5B!l><N04#CM
%;73;X5C5;ZIEq%koZu^1khO-Kf*`fTgg)(cM0_T]-En1<q>AEpT:?1fZo)K!B%aS?l=c5@Ot,&G0ZUB%I;6*2Lnr2ki>t/8T/;RE
%S_=V/IB)?Ygl[qCq=ieCo3]dE6c/^W?0O-eF'rZN;YI8IkL`?aAQ*KrQ)G'f(SEBK?&6&lFWp$Be4S4[e-=Dle4.ple4.sa*pW(1
%E:h9q<u:`^.hd92_Qu2eqt7UR+cCIFl2^(iTEC\dQm5N>5]1+[ODuH(!lfqQ$Q0a7/nB@BaS7m<?=_SYT,oT36q=A@_aZqoSW4Q5
%1hqWg8BBemi%<k=RC@^UJ@B(G!o=:@%bq*=O^SJs#>do;*<>KqERr]_c%;H8ZgE.lSaEc0H#&\)1_VJ*lL_f,9e8/ae/L]qC]L^A
%U&^ouL]WA6Llrng+P-90[SsQ"A$Vk!ht6)PgbF!!4.>qX>NhHU>K\(3nmi=Q*Nt/&82F10"kA9+1Y;WBMei?X$gX4P@DC.^"On)[
%^G"V@hk9kMGTl<!.o'6M=)3ZJ:agVdPXR/Z[?df"7'1$8/Q6GA>0GD>;mT.l1H%t_1kX7N:(o\5m-HlY=0L\h5-/)6fK(r%9WkeJ
%HNd:d<@;sqA-&6pO7gb(?)rFLCI1&l(=R9aqlK]1T-)I#NDEn`c]#8CX=[jt)/IDt>Jf)Lf(2>3UScJ9GOrN6p,:2Gnrqd-1Wcn@
%)K:#Bko$B$VZWi0S=X^=^>"frY40L,_4#o""'`5e,99;O*m^EI^Kc$pC)jq.mR?e8fnUQnR&f`FEY9l)eSNP;brj$UHY0]J#4abq
%$'@$!8J^'#jSQ$sG(%:oG(OR]X_5)6ffIbHfQq/qR;KUWell`jfMYd,WNEi**>_j$/)7Hu*Z\dW:PF3HoM`)GejjgG'`tBhcjG#V
%+$:1WH!os8AWYqchq\F@^*ob<16u@*ff=9DWH5H?(bk\j1+8r&@AjN%m>siQg?baF8QAlmAkfCg(sLp;$;mpUa8!JeWX;a+\>j.D
%mANUkg_Xg=il;Ie*?o9sb.8>p[8l)LcA(\/&d0L`:m(u.&<oFVOp*.7:]`p_(i#m-#1'BL$:e)eWb+ok>Y4,SU8G(pjlc5"JMHQZ
%V@.1g\lKsNg70O-V_8UH5ZEn8-!=1K;$fW:=]CPQ,nQ>,<0BZr=]>H"#t-(B<0BZr08doU(0$jrl#TeccFAoFm]n13.A"6EK>:=c
%7qm.2Ak+9iV/VZ27qm.2^ek/'8Tp>/7gU.]E0Om'8Tp?2kbus)c<ds?lJ:&h%kZ:4r)r_SmQ9@*0UB#RP`;O+0!W10%TCB9NMS=p
%_H<7dV:erX@k!A5fiX]&V/LOLN`P>1G*qLIYl,q1o*Ro8'W"r0RMDYqPX869'r>&1$:QE@;HZkSc4kV(lqX6=Png,K.]Q((T#&*>
%FnSshX'=\l+O'NTZ+0jDA.a3*pj36/(0lKq/GmSqY7/-#pr]nG/GmTJ.tt/`qb"2u'Y[K?9!b]Xqat5fQ-%Qa=qOW">Hr[C[;A:6
%Q=99I_,HX_A_Bud:Dl9+fi+2"Aakr#;jKRXfi&)N)*DK`;jKRXDgL[nTKZ]I/na"BIihm1U&MVh:^042(6iGt3<\FTP\3:-(6h*]
%#!lB-P\!,u"D&./AO0H7PeAKDX!p8ZpdG\]Z&G^a?u7O.hBajV?aYkget(JrF<-tDlm^8PEd5ac.F4UVlm[^f*1l`f.F4T+Gfnto
%c^s^o.=]`Df57!m998CQ=`)["\l+Y@!]Wm80U69LGrCr*<";iP2O.oR3DANgQ"O$@2O20Z%T@X2Q"O%kMl&Ng$&p]e&Z:ZFai[Im
%l*=6#r,X[pd&M,b.\Nf_Wf!mXJ>r[NMQEi!WX>]ITdnBgnuO<rWZ8&0X=DPrni'&=-#[)A9D*I.4Y)egHSnsA=92o#2HF?u"cO0M
%<b,]/2HIUq!FnPV<b,\DN"n$IA7J%d<kN+IAl<*&]fB;h(Qf6ad20<!^5WLDkH*qha4PLmYEo.;ZG.=Ue_mWsrRJ3g!r`Q%/$co6
%q^^U.JA3<*/$cqL7=XRp*]Rd'Wg,C&]\Y,1EHZnANt@dC<u,8>8P+cb^W[OK+`a8lc>FWQqp[>7qhSLA5)6Vil)[fr`L1l6?'+2a
%7kXK_N?_Z*p-ZMhQ$e9I].kr<r`amOHU3'rRWl/CGLuLiJ_=/+S^';W]@%0.FX?<>e-2cY;&>rZ5[B2W'"&@[&[_YI&[`4Y!OWNI
%^5"c1(sU^-=.<ieD`W'PQ.-;uHT/(R_a<0E3WM2rk5aWEjiEMcN#N?N6sPPX!-'1A6Gs%`$P=KL+[3;n<RF[hrA];]97$=Digm7)
%C_^aiCaHD&YSFC-bZ;M[_:F/q5W1CM!7q5%aA`7<rB7$XfDB`W/3Kc#b0;ijOn?rhMTmt&/a;iu^2?Y!25/Nh6-4(2Z%A^#U1B,_
%M?8Zu.1.KSpF+&3;##Fg^Ih`Bp$US;5XjCXE--XX`6gYM<'W0J"@mu9,W2?e>=X.uM2Fam9[BiuB7"+OM4iamEMd[!rE&pp8'pP[
%F.VK.@#X2jf-<98!9]`b:;Mek0/C2+iO&flAU#fECC+=jn05cV$r8ZB:&$R:dgT%d6-T]&4bV&jm?@Hoe96dFTMM-=JA*omh?C[l
%Sd7G7cl%76hs&ZIlM%n;UuPi;*Ck7EQ+u+$LW?S5XB8TNN4!5u/R`K6CWfga_V-cro0'0pe<*fmbXNQO\A$%rcBg+%m1d@m_gLSd
%(0:T>cWiVSF`;JBoutrB=2T5f1>'3Lbh#Hhls#\$N[*@m-+H%4d4\R-UjMcbqd@S>`jD0m5h\X:m`0E])]$aUoA#IaU$'@8*%[]A
%W:$u)cb!B*f1K%ZScPFSH$\W;i9B1aRAX\hn`!4"l3VX*?GuHDQ9>DY(VE]QW5:e]'[]ci"][O\6:*P6kUoEt[Hko8Zf%OhqTIL5
%<U@>[;2umWB-id(RaEe_74!BU0hE9:A*W\";!D9`]]I-;#oi737)-%/UC&)C#cVD\h1]LUG.j8c(7]JJH21V]ML@,X&mD<g907k_
%g:Qg)r;Y)>m$85g,hYVL>pOBO^dXDl,hYTf(KJQ?Y3PSc1)0VOJ1#_DZ]K>=U[rl\8:K3/Y29n?Ha<Z![a`qli?65PP3a<BK*2[I
%llaC[&i`G?+NY+Vll^k3":gU]+NY+V(EM"oO-%khk\odTPc1Dh<$+UjBAd^Sp"t="JWL"$dOZZg6;e(\+XG<!dOZYpO9@n5/0r>(
%&dV&O,frB9/0oL>8CuIdO7:>*B'KK-Q;U1dlU0tHp#!aBpC]!1U6M4EX=.X5M;9HNP;:pp.#"B0MUJRSc&,CI8tdZXMUJRSIC%NN
%jd`rP*GUr2a-4(nLWZY"'rFlr9!bKRRn@*=KrHnu9!bK2VGd,ZZDePo-ha1bJO0ksRn@$Ee_/53h\X7(+/o)'ZSf0K$^(7ZPu["d
%`dcc@M?VV)/^)kRX=](5%,/"g/^)j'BM5$Nc.^UI/VUVIg=!&Sc.^S^[A@3qStFGPDA%/S16#:23D6W&6<fb`AQ`4AD&K]l=^.3"
%A^H`/>F)[.=^))I)73sX>F)[.YA(%m,iquGok&'jiOdf_EtkIRZ"CUPr<?UHI-'$_Spf_iQ,?[pIHB-`#%&6qA_C.NI:_o5_,lqN
%A_C/YU9EnlSaXt5U\%jHBs$p91DGbF6W'Eij]PFj76)(D=](b*j\V1/;4\Na=]#Yt3>CRX;4\Na0.P,?8h<D:s#1nsHV?9Jb&SoQ
%Td\6EnuO6pU)]']X=2DPE[])(.*meAX=/ju*/a<g.*meA2b3[97$i6`cT^8dh"tFX=&ZN\Ce`_sZM):*%RUC.("lEG%2CQr^eg.&
%("lCa6TGS:fhe7LjY2q::nA-Xfhh[:U&)K6.UsQYW\t4K*UTg)glV9@TuG"Y;+27#A5NLu'bFAU;+27#5Z@b]72Am6;$B?&&637<
%72An9ftWDN@dIh_?166hLi4q'NI-#sJ>!%!C=uE8)lg_N%>JWN:b<V9@&SUL+r`#;T`TrU(b2hb+r`#g1fTt]\@&;1R??"4Y($qK
%ZEVIS]$_"N:!,MErahEnae=PK&QdP"q*&p@TBh9q-[f(^f8`RaK0)"HNY.d`5Msp$pW(NG?)RGWfI'>+cCMcg=*4J]08rY59a_he
%et/Hs9\R%dJmA11bp@/9P0*u8$+pgo!Up0KjT3"*G^0:m&)d9aD@bYpi:[.g!,_dS"Kq1os"jrV.#T-)[iY.I`nkW_:Ud,O'P</0
%&T7Xji#N\ZAD0?%!S0Qdm6USnO=h'lKqunEF91V-dY4KX(E`$Z7iub#U2(XTLT[I@^@FR(dX"A$(2*kb!GKTJ-%ctb(4[0P<e>L8
%%UooE%RQ3"3&9In@=Jfl?-hp)4WIOmU<\15G@?Op8ipMmMeiT%dcK_Ah0L<r$rdmn!^:-ta\p2X^f&6O1/#_?"YAttYD(EE^oSO'
%GE]ae]\!2KB_I`pAo.0_qm4!$-"u:!H;JDH$=G[CN0\99>Qrs_d@5#<@Db8"1[XEO4Ce%'Wo"V6VD$Ku\,?/:oBKu6Wl8\WnGR1c
%_Xa!)7Rl#c_NkbAKWkJcb6T$u"qV[a.MuoTW1^'qUF)"i6/$Z._aESc5K@LTI%0dua!g:[&nN8W$&J9I?N$bk_FtN]!TFh5j#W^f
%oD'8VcM7;Hnc[#<O=c*$!8/"+Q9_kenpCu/H1bHi/EIPSm]5!ZN_uJ>C?`**4`G7OU%^%FR<;VR%<Ob^oh<sn>pin_>mFZq2dLrX
%`?aTlf$&=Yl+3XHn>_M#XMl`qpE!g]k,7Te#NtC&cJ>p+O`;]h(=b3>h*HnDnZ%,&Z5/7"CoZgjS3I=[-`I<L3iG*<3iRG&lC"Yb
%Wq#(!5dZNIf;H!!-SBdb3-r',.XY2=Un*q;<3q^%<`5cX.\sF8A!!^t;Pf[[DIWV3Of>K.?$A&$?%l)d^).[bU7naaJXmnC>Bh#9
%gtFIu%ir(SY%>-NrS7k9.YLf1X<"5&Q^a7?Za2-X<FN$&)3Z#I<U$V#WL,mXEE/I.Ap)YjXrZon(]C)@r4'HGF/6G?l<\nOCMg_K
%8%L2b-;^(?Kh5=4A;(=)-;^'p@7#ZJ3c*n--<*O;dUG(LXCdO\Hq/tgU<)&&@i+N."8*YWZHK1?GI08p$geg8]DJi7NsRoqfjg1.
%-J;lqNsRoqn<hR46B;F8-LdDLA!/u%fjg1.-80Zr>14<=Z&6Un'(fU`7rn**MC#Kp^h0$PVV,RMD5O\._Ia.E$#M#rRD<D9RgEpY
%fk-Ca-J<#%VTl-K5-7Y>[,YDlL%Z:lX89q`f6::e:"d_4;H%bFd*I#[ZiCn?;bBb5220No;H$1^Zd^g)9s`@A7B'QX>;*T3XnGp&
%l]GJlON'JoWSYaK$B&W,QtD7j[[>KP$B$>aVR2^SH=*nDZMX=YJ"Zt!*a#k<^1adPeTLMn_:;:o4ePsUK%iX3-#E"o\9e^bV4`p=
%6#)^^Am&l7V.Ps\6#$V')5X3pRR1`rW@=[@=_aD%VHI[1U=A1K5e=.V7HrPcJ#ZHhCRTV\KDS?`c'C^HGHqcIC6k].=_a8!AsA`M
%C'LXTV.Ps\6#$V')5UqJC6k].=_dZ)e@\38`S6G-NO:QcR;[i$'d3uD1YBpXbrjb)Zd#!uF4e]F1S`3R2Da"0?o+S&/DJCSbq.Vn
%hR(t8f!f4V:Q?s-/m-N]n`Zhg-53Ds@\,16fj^O)k-UMn@Le;V/`sF-_dX+63A'CH@\,16fjarT`U&\ljr`>tPgQ;?.oMCt4GoIV
%WmI,GNHs*BB8no/k0TJ_@nr"D2<N8Q6XrlNH.J?qNHs*B^SilfENu#oRBu_5afKo1ju0^qQRc3KZ4L)JECCXEA8qdl'bFG3>X<?i
%`T7Yt6X3B+Gnu`ZEHr=d^Y'PfHq`><&Oh">k0j=7h,d]ER<WP*Z/J#POd-Ya=cnsa<)u7e!G)G"'i\4!=TN(;PndG)Od-Ya=n/Ap
%R`25]GP+],XNY\>H%]2q2cd&ko8^uu$l1O!b6Db8?nE>!d9mCfCG8l;?pTDK$l1O!csVtF(>3)X%2LT8m'AOB%sZ,tN_t:3Xj-tM
%AS/]"mmn^rs5i=^GQ!GJ7mG!JZ6.uKn,?Q'*FEkXKe\_%B=Z'fh5?=o^W:nLc@>U6s5AHqs6uQYfH3$_Fe(^VjZZshZ$2XIr%7/O
%IpqoQNZ&F+MN*1W;lYf>rE/s4hij+2WH&>uUjGo[pRjY:6/asTO*a\EpRq!sPfGqcO*dO\HXMn]@(Za<\-M`;#KD*uO*dNQh?,@+
%qC\.YX<fm=$kd_3=FlE"]b,RPGlW,OGS#+MG7\tFcorMXbCas]mIHoU*jc;hQNup<:"n4Z?06n>QU#22=$GR_h;o)H*+MiH;AN.G
%:_lqE;AN(E;H?\=64Pa\+:]"o!Y4]/iq4,P`oX5W.B/XMHURo!9Xe+-HI?,*G;SC#%*Bl'Uo*J0bZ?T+9gf=r&Sraq+]nbI+]omi
%!E^MtqBFSX[Hh=`;mT=0iK@W=Y*@V6Q5+H0Zqt*cin61n]Z:qO8XYr%B*IMhq$Ziih2ClmT63pOiL-o_^7MLkbhou'=1ut@(7!:0
%^08sUmIg?M+8tHrg_uOaQo6X8R:ucP#,Wt.D."8iC1+&lWgTjgX+IBaYR7]0,$DA_?*D\!FTkf,qQli-Xu7<Vl>l&Y2U`E5=RUjt
%BcBe/9Q_C.XRjg4R<U0^cgd5H=_(<iD'7Rgf`n_kA6UD85k]Sfm!89!H`PdOF,fq\H&@[WJX/<K]K4\Z4-UKF=IbA@*Ln.?SXc7@
%*Ln.?NGet$kaa6oPUkG]$`N6^ln^Ha4.js)?/DC5bH?<[2,fO_e#ka@:B&gg:E0ain"N]GasSUpq2ioebj<FK/*>6R4:c;$R47UN
%nWYi_P_52@PT?!ZPb"$ZPT?"K7EVb/fm=T7^%R$PipH6_(TFb3ch0>jDi_D@kpdu\Bt6;bdW%WqQ(G#j?%qP:kBI?,/DQMngAr!a
%!L/#eJ9r?[4u;65K.QuThpbu>3/@0ApmqoMPP;,X;Ar$-oNnBhmd*KZ<1'jeI?j6$OPg$W:DoCVRJPYU'MfU2ICk<'#-:YZSRq';
%rh]e*eXf2OP=]ihj.<RRM%)f>`Yp-OOJ"jj64!uF.$1)eJjKcE>&`Y%4QTH6N?VbfYel';Y,)5L;h`JSp'&<Z[3sa"LoT,ZfN^r3
%s%DN#Ii:`gW_fW\JI2Q1'WP!.6@fII.MSmZW'Z%B"Y(4d:oH^3$3_oD2cZf#U#tB7SV%Y4ema(4/,E@h8]d290J06-TYc:Q$S!a,
%Yb8jb644,P.'TA[JjKhP/L[ir^k2-S"f%[L]j15d]!o%PUS.@mXAS]R%]O9iqWR!+J,8BjOn5oO#L:\g;L_=;.J0ObT2L/2r@.B:
%d%A&+lZ9,?eY_`@HRGo,Yku+Q;s?HApCuI_GYdQeV=t\\;g;+&4ahGLi&tYdn'UZPo_dA7KD5"4mo^Cq=f\6u1@Jf+C)jG9P-QR,
%Y>KWNm2<9De=KNa#43;8B@NMNHOB-h[&;EF;L8c<.C?!kC+l;Pla)'na&qCXa6HaDm1E=.q,2;=d2>>b'V/*C#14;VB,$n6F9^,1
%6t[4);03#i)+8+UMU(4;[:sD:k4XdAFj9il&JiTaPoDDGk7F1OFAC4D7HY5Q6ZbfF)+A0LSO%?ed2>Ac&=l+/p1eg?1Zn[6Ra+d)
%o`cI1$MmlqVi8nA@+g($L3"3W@5t1DS;))%c=&]1iLGXD(sZPLVr=/#Eu<223.J>g\(5J'^%>Gm:Kl:3(;Jk3R57S#1nDO+%b!F4
%k;8aIF:Qb[:$4@(_fQC;3DJZnS\oOZe+oK1F)ORpAmVZL8\;FOg/R[VB2+qs$`YhP\q''tWXGgZTXo[=JuWmlcCm:SlC=kqWm7;!
%L[+ff*o?Sbp1]Me8S6h.i_=E2!u5o`cufB@"^Djc?-m]pf*,CqFC!79!S7K[(N`s0FTL(t>SjSelGRf4"*6WI2Kph'e^ZWXT.[(R
%T^!Fpf:]]EeMXA06$3X:$`YhX\q'&IWXGgZW4INE!ih/[<N!f^M/B@bRkmac9\+9t[Ok"^@YRK%kT)^P]Q,Es?g5e93$U&\VEF&3
%H(R9\s!$H#N]mb1J)*(V+d_^09Y%6'7W)dej?1rb!TQ0-o*#qXLM"Q`PQ(QRYJSV]l.DX"l;[L\Opf(.-1AHG2aS<@hf@V)qR?Rf
%E<?Pd5^D.8o!e^S2kW9O5^hJhIGOsNh>lRFYf@3W`sj`Z!.3K$II.5tETBL-mKV(7(S*VZpfqHM<j0rm2Cb9YW6;mUNVnG("8%68
%KBr^(j$CCB_&lJBjU&X4I!L5q&+G;2b6.\4k*'/U?D,RUUcnj+4__sn$>!:0Rf/WgIbEMAgkFMegkFO;g]cKp_-J/<rII*Qe-"'M
%b_*t=`.Pl(7Gb.7l"bY=;cWY]Q*5o*Bc5EXTe+L)>k/VE\p2JM2<35?UCbt.CjhD1#?_(1+^#sk!EgT!qBB'*9AdpjB8Y]9F[5\j
%"4@&"=.<`57rD`Z>-K;Xd`m$%I)dnmI#A'pM9"E#a*7gS)69[93qN(trFJ3ckgf*jp$&VCi2in;PAm.#95de-ND_[]!71qC/H]hi
%g&SKkTT)3h5`J$o6o?2h0NCBg9N?Yo?Gu].O6Z=5jl<h@HJ*<9]GL&DXt,U>h>t5-fC++3AEV?,3tKYc-=-oBEsAiD>;k<$F;sJQ
%9XfRj"5T:-2UFToUh_]O6[r/.QSs'^=V#@RBs#nJ??q_<fa-73f`Bb4fa6=4fa6=QmfXfqSQ;.C?8L_dV!I.EoK:n>_Wq-ml^&Db
%?XNi<:YjP1/<Mj">WYm&R)MgWQOW`nj?'@3q1kAIE?nj+jEZ"<1Ge+j3Kr1mJ/f*@:<3pd:<62O%`f.$nKR$i]>-q.j\n,9o.Zf=
%YEo$D-\]kQehrb(pN'VS\Ot-&BpF\uSuWQ2V<KI/[m+LZX:Nq5L[91lAcDIeOfp!8[i3?NiI3=5o(o6Xid.\Q5+m@>LTU*n]fF.T
%(i<d22+:k1CDu]&XRp:^!\59n.DZ?!ma%<j*ZD*j&+7rir,IOsdY*l8XDm,=UZpD1V@5[nL1h[hE#IE@LUL^b^or6$gb%.H?:^n2
%Kk_=#;4pCP)MMo?W)9K_H)Ru3gpgiFP;qW*Bu`h/<qu41eTBeh$F3rupZR01Z%:\&a=NTXc&meOq\^2r;Wp]'-O$(UH;`ruJL?/C
%P_UXJiCT^j"eHES;Wp]'-O$*+2a&%N"[%2_[`2Q-eONMM;oD/qiSC5'd?r1I\l@lkThD47Q+BrY;Q3<7kY`J5'^ASh9;*tl\eO@+
%TM'Q1Q\QWiNthD`@h\J"&W6+#+6VGS;:g>).VPX-V*93Zd%rq;Kgbq,(]l^?W=N;"6^LDN.WhZ>V,EWe>q0rqDsHmlOR&DUBR*RF
%Fj*o`jrE'X>_qQt9M[-#WUQ_3P=eV#4K7tK5!5gjrZXM)lnCVLN/oS9qi($?^?J3@[_jk3Y*IVP+]2"b.E,s7UHshC0cJ#E'VdsQ
%7PWUaN;=*\;N(r;.`J>#UI'nH1$YfKCtG#L-bc_nqI)0@e!FtpEHTu:.C?Y;Hl@l#RaGe<K,G,11n)g*7Y;S<B!d=2m9rJZ)%C17
%RaGe<K,G,1ZrbLsftPefekUIZE?b+i"2m_rV_$))9f"iSkV/d\N(u/ibigmY4j7RM1E+MO0Vd$S7Pbt,BJ?3pBgt6YRjk1SrJLEj
%hLVMEZpJeQT+0K<6AGph/p+\OksC.5SM'Pi$iT$NV[FLtFLoi`6AGph0(`5WNh6GaT1H>$jc1PO)8u-lQTJL:FJ6U+%Mq03k]EN9
%Kh`H\_hJ)/U!n]*(HPjcFJ6U+%N"uR/sNd8^nno8]:A->ZP,p!4X<`2"uI1D?r2JA%0eX+e6kBqkRS+`2<`D[;hIgS3]-'ITYIJB
%:Qr;D&O$Ze\O='OZ'N>SH)b!$p>'ZLTETr`$s52k_4Usa((=;!BYepq0HLu<=tj@#TETr`$s52k_0FF\k?3+,AWJp<k"WiIE'<@W
%h\15Qi!ZP=W58`R2Q3iWKoIQu:gp++j.X>7W%b0eJ-poY%&u"S_LN!R4VdtFIrt+.qX$NFk+@,$GMiDk[pOR`qqqGH\%hb4X2"UU
%3WAjNdHdDHGO=/=mJ=<lrWt:VgUD3NqhJPNJ,#Arg\U;=J,ScDs0Ma2F8bhtVZ6Y?J%7c+DguX(r:b^9Qf!2jmm$aFh07I8r:7UP
%s19BPa,f-Xn)+07j"LDsGCTJg?[qkEr?)%.a$5(Rk9']Lp&Fm^],uOte"?[8it(&HoY:D#DkDOTS?u)ejY-Z5^\ubkr71fN[<MMR~>
%AI9_PrivateDataEnd
